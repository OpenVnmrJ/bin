#!/bin/sh
# sysprof.lnx - shell script for reporting PC hardware & Linux OS facts,
#               as well as VnmrJ version, and installed patches / packages
#
# REVISION HISTORY:
#------------------------------------------------------------------------------
# (see the bottom of the script for details)
#
# Proposals / ToDo :
#       use compareversions for nVidia driver
#	with VnmrJ 3.1+ check Adobe AIR
#       use compareversions for other numeric version checks


#-------------------
# version ID / date
#-------------------

#(revdate is maintained by packing script)
revdate="2011-09-11_20:07"

#(last version segment incremented by packing script)
version="3.13.3"

#------------------------
# the author's signature
#------------------------
author="Rolf Kyburz, Agilent Technologies"
authoraddr="rolf.kyburz@agilent.com"


#--------------------------------
# date of last RHEL driver ckeck
#--------------------------------
drcheck=2011-09-08

#----------------------------------
# current Adobe and nVidia drivers
#----------------------------------
# CURRENT VERSIONS, Mozilla Firefox
curff3=3.6.17                  # 2011-04-29
curff36=3.6.22                 # 2011-09-08
curff=6.0.2                    # 2011-09-08
chkff=2011-09-08

# CURRENT VERSIONS, Mozilla Thunderbird
curtb2=2.0.0.24                # 2011-04-29
#curtb3=3.1.10                 # 2011-04-29
curtb3=3.1.14                  # 2011-09-08
chktb=2011-09-08

# CURRENT VERSIONS, Adobe Reader
#cur_reader=9.1.2              # 2010-01-06
#cur_reader=9.3.3              # 2010-08-05
#cur_reader=9.4                # 2010-12-10
cur_reader=9.4.2               # 2011-09-08
chkar=2011-09-08

# CURRENT VERSIONS, nVidia graphics driver
#curnvidiadr="185.18.36"       # 2009
#curnvidiadr="190.42"          # 2010-01-06
curnvidiadr="280.13"           # 2011-09-08
drchknv=2011-09-08


#-------------------------------
# GLOBAL OUTPUT FLAGS / COUNTS
#-------------------------------

numrec=0
numrec0=0
showacq=0
showbios=0
shownet=0
showpkg=0
showrecomm=0
showrevs=0
showsecurity=0
showcompil=0
showsum=0
showprinters=0
showusers=0
showversion=1
updatereminder=0               # reminder to download latest version


#-----------------------------
# global variables / settings
#-----------------------------
#("revday" for recommendation output, derived from "revdate")
revday=`echo $revdate | cut -c1-10`
cmd=`basename $0`
wrappercmd=sysprofiler
if [ "x$vnmruser" = "x" ]; then
  vnmruser="$HOME/vnmrsys"
fi
if [ "x$vnmrsystem" = "x" ]; then
  vnmrsystem="/vnmr"
fi
wd=`pwd`
usernow=`id | tr '()' '  ' | cut -f2 -d' '`
tmp=/tmp/$wrappercmd.$$
acctmp=$tmp.last
pkgtmp=/tmp/${cmd}_pkg.$$
langtmp=/tmp/${cmd}_lang.$$
BIOS_settings=""
if [ "$usernow" = root ]; then
  pkglog=/tmp/sysprofiler.pkglog
  tmproot=/tmp/sysprofiler.$$
  logdir=/sysprofiler.logs
else
  pkglog=$HOME/sysprofiler.pkglog
  tmproot=$HOME/sysprofiler.$$
  logdir=$HOME/sysprofiler.logs
fi
SP_BIOS=${tmproot}.BIOS_INFO
SP_CONFIG=${tmproot}.CONFIG
SP_CONSCONFIG=${tmproot}.CONSCONFIG
SP_CONSHWCONF=${tmproot}.CONSHWCONF
SP_GRAPHICS=${tmproot}.GRAPHICS
SP_MAINHEAD=${tmproot}.MAIN_HEAD
SP_MEMSTAT=${tmproot}.MEMSTAT
SP_OSCOMPILER=${tmproot}.OSCOMPILER
SP_OSINFO=${tmproot}.OSINFO
SP_OSLANG=${tmproot}.OSLANG
SP_OSNET=${tmproot}.OSNET
SP_OSNETWORK=${tmproot}.OSNETWORK
SP_OSPKG=${tmproot}.OSPKG
SP_OSPORTS=${tmproot}.OSPORTS
SP_OSPRINTQ=${tmproot}.OSPRINTQ
SP_OSSECURE=${tmproot}.OSSECURE
SP_OSSENDMAIL=${tmproot}.OSSENDMAIL
SP_PCCONFIG=${tmproot}.PCCONFIG
SP_REC=${tmproot}.REC
SP_SUMMARY=${tmproot}.SUMMARY
SP_VJACQCOMM=${tmproot}.VJACQCOMM
SP_VJACQNET=${tmproot}.VJACQNET
SP_VJACQSTAT=${tmproot}.VJACQSTAT
SP_VJDB=${tmproot}.VJDB
SP_VJFS=${tmproot}.VJFS
SP_VJINSTALL=${tmproot}.VJINSTALL
SP_VJPLOTDEF=${tmproot}.VJPLOTDEF
SP_VJPROBECALIB=${tmproot}.VJPROBECALIB
SP_VJSHIMS=${tmproot}.VJSHIMS
SP_VJUSER=${tmproot}.VJUSER
SP_VJSEQGEN=${tmproot}.VJSEQGEN
SP_VJOPERATORDEF=${tmproot}.VJOPERATORDEF

localname=`uname -n`
BIOS_settings=${logdir}/.BIOS_settings.$localname
rm -f $tmp $pkgtmp $tmproot ${tmproot}.*
rm -f ${pkglog} ${pkglog}.alpha ${pkglog}.chr

kversion=""
kmajor=""
kminor=""
kmajor_pcmin=""
kminor_pcmin=""
kmajor_pcmax=""
kminor_pcmax=""
title=""
title2=""
timestamp=""

cputype=""
disk1sizGiB=0
disk1sizGiBrd=0
diskGiB=0
dsk1part=""
freeGiB=0
freeKiB=0
freeMiB=0
homedsk=""
homefreeK=0
homefs=""
homeGiB=0
homesizK=0
homeuse=0
homeuseK=0
optfreeK=0
optfs=""
optsizK=0
optuse=0
optuseK=0
procs=0
ramGiB=0
ramKiB=0
ramMiB=0
recswapGiB=0
recswapMiB=0
rootdsk=""
rootfreeK=0
rootfs=""
rootGiB=0
rootsizK=0
rootsizM=0
rootuse=""
rootuse=0
rootuseK=0
swapsiz=0
swapsizGiB=0
swapsizMiB=0
swapwarnMiB=0
usrfreeK=0
usrfs=""
usrsizK=0
usruse=0
usruseK=0
varfreeK=0
varfs=""
varsizK=0
varuse=0
varuseK=0
updated=1
kernel=""
rhv=0
LinuxK_OK=1
stdRHEL=1
instK=""
std_K=""
upgrade_os=1
upgrade_vj=1
req_pcupdate=0
req_osupdate=0
req_newpc=0
packages=0
dotrailer=1
missingdr=0
missinglib=0
missinglegacy=0
opt_missingdr=0
rhelwarn=0
locale=""
lang=""
setacq=0
h_access_man=0
numusers=0
dvn=""
nsdir=""
n_interf=0
comphost=0
basehost=""
doseparator=0

#-----------------------
# Compatibility section
#-----------------------
os=`uname -s`
echo=`which echo`
pwd=`which pwd`
tail=tail
if [ "$os" = SunOS ]; then
  awk=nawk
  if [ -x /usr/xpg4/bin/tail ]; then
    tail=/usr/xpg4/bin/tail
  fi
elif [ "$os" = Darwin ]; then
  awk=awk
elif [ "$os" = Linux ]; then
  awk=awk
  echo="$echo -e"
else
  awk=awk
fi
host=`uname -n`
shost=`uname -n | tr '.' ' ' | $awk '{print $1}'`
if [ "$host" = "$shost" ]; then
  dhost=`hostname --fqdn 2>/dev/null`
else
  dhost=$host
fi


#-------------------------------------------
# Provisions for incomplete path definition
#-------------------------------------------
ping=`which ping 2> /dev/null`
if [ "$ping" = "" ]; then
  ping=`whereis -b ping | $awk '{print $NF}'`
else
  ping=/bin/ping
fi
arp=`which arp 2> /dev/null`
if [ "$arp" = "" ]; then
  arp=`whereis -b arp | $awk '{print $NF}'`
else
  arp=/sbin/arp
fi
if [ -x ./eval_netmask ]; then
  eval_netmask=`$pwd`/eval_netmask
elif [ `which eval_netmask 2>&1 | \
        egrep -vc 'no eval_netmask in |not found.'` -gt 0 ]; then
  eval_netmask=eval_netmask
elif [ `dirname $0` = "." ]; then
  eval_netmask=`$pwd`/eval_netmask
else
  eval_netmask=`dirname $0`/eval_netmask
fi
routing=0

acqtype=none            # router, dualnet, net (spectrometer not networked)
cons_type=""            # console type (e.g., vnmrs, inova, etc.)
def_printer=""          # system default printer


#--------------------------------------------------
# information and flags for recommendation section
#--------------------------------------------------
#current_pc="Dell OptiPlex GX270"
#current_pc="Dell Precision 370n"
#current_pc="Dell Precision 380n"
#current_pc="Dell Precision 390n"
#current_pc="Dell OptiPlex 755n"
#current_pc="Dell Precision T3400"
current_pc="Dell Precision T3500"

#current_graphics="NVIDIA GeForce 4MX"
#current_graphics="NVIDIA Quadro NVS 285"
current_graphics="NVIDIA Quadro FX 570"

rh3=0
rh30=0
rh31=0
rh32=0
rh33=0
rh34=0
rh35=0
rh36=0
rh37=0
rh38=0
rh39=0
rh4=0
rh40=0
rh41=0
rh42=0
rh43=0
rh44=0
rh45=0
rh46=0
rh47=0
rh48=0
rh49=0
rh5=0
rh50=0
rh51=0
rh52=0
rh53=0
rh54=0
rh55=0
rh56=0
rh57=0
rh58=0
rh59=0
rh6=0
rh60=0
rh61=0
rh62=0
rh63=0
rh64=0
supported_os=0
cur_rhel="RHEL 5.3"
cur_vnmrj="VnmrJ 3.0"   # current VnmrJ, altered below for legacy systems
minrammblimit=1536      # minimum RAM size (MiB), limit for warning
minramGiB=2             # minimum RAM size (GiB) for running VnmrJ
bit64on=0               # flag for 64-bit support in Linux
vnmrbeta=0              # VnmrJ beta flag
minswap=1900            # minimum swap limit for warning about swap size
recminswap=2048         # minimum swap size recommended for Linux, MiB
minrootsizMiB=5000      # minimum recommended root partition (if possible)
recrootsizMiB=30000     # recommended root partition size, in MiB
optminfreeKiB=100000    # minimum recommended free space in /opt
usrminfreeKiB=100000    # minimum recommended free space in /usr
varminfreeKiB=400000    # minimum recommended free space in /var
varwarnfreeKiB=1000000  # warning threshold for free space in /var
wsrating=0              # indicator for slow workstations:
                        #  -1 = fast, current
                        #   0 = standard / current
                        #   1 = newer Dell PC
                        #   2 = early Dell PC
                        #   3 = minimum Dell PC
                        #   4 = obsolete / underpowered
reclnxnum=403           # recommended RHEL version
vlist=12                # number of /vnmr files listed with bad UID/GID
open_hostequiv=0        # security check flag
open_xdmcp=0            # security check flag
bcast_xdmcp=0           # security check flag
sec_sadmind=0           # security check flag
n_servc=0               # security check: open ports in /etc/services
not_servc=0             # security check: deactivated ports in /etc/services
n_wrapwarn=0            # security check: TCP wrapper warnings
pending_printjobs=0     # number of pending print jobs (total)
printernamesOK=1        # flag for illegal printer names
missing=0               # global variable for package check
sendmailok=0            # flag for reporting sendmail configuration
lpstatok=1              # flag for use of lpstat
dhcp=0                  # DHCP status (WAN networking)

warn_vpatch=0
warn_gnuc=0
vjsec=0
spincad=0
vnmropt=none
vnmrdir=0
lastvpatch=""
graphics=""
acq_if=""               # acquisition interface name
n_acqs=0
net_on=1
net_ports=0


###############################################################################


#--------------------------------------------------
# cleanup() - remove temporary files, for exiting
#--------------------------------------------------
cleanup() {
  rm -f $tmp $pkgtmp $tmproot ${tmproot}.*
  rm -f ${pkglog}.alpha ${pkglog}.chr
  if [ $# -eq 0 ]; then
    rm -f ${pkglog}
  fi
}
#----------------
# END cleanup()
#----------------


###############################################################################


#--------------------------------------------------
# cat_if() - display file if size > 0
#--------------------------------------------------
cat_if() {
  if [ -s $1 ]; then
    cat $1
  fi
}
#----------------
# END cat_if()
#----------------


###############################################################################


#---------------------------------------------------------
# compareversions() - compare multi-level version numbers
#---------------------------------------------------------
compareversions() {
  ($echo $1 ; $echo $2) | tr '.' ' ' | tr '[A-Z]' '[a-z]' | \
        sed 's/a/00/g
s/b/01/g
s/c/02/g
s/d/03/g
s/e/04/g
s/f/05/g
s/g/06/g
s/h/07/g
s/i/08/g
s/j/09/g
s/k/10/g
s/l/11/g
s/m/12/g
s/n/13/g
s/o/14/g
s/p/15/g
s/q/16/g
s/r/17/g
s/s/18/g
s/t/19/g
s/u/20/g
s/v/21/g
s/w/22/g
s/x/23/g
s/y/24/g
s/z/25/g' | $awk '
  {
    if (NR == 1)
    {
      v11 = $1
      v12 = 0
      v13 = 0
      v14 = 0
      v15 = 0
      v16 = 0
      if (NF > 1) v12 = $2
      if (NF > 2) v13 = $3
      if (NF > 3) v14 = $4
      if (NF > 4) v15 = $5
      if (NF > 5) v16 = $6
    }
    else
    {
      v21 = $1
      v22 = 0
      v23 = 0
      v24 = 0
      v25 = 0
      v26 = 0
      if (NF > 1) v22 = $2
      if (NF > 2) v23 = $3
      if (NF > 3) v24 = $4
      if (NF > 4) v25 = $5
      if (NF > 5) v26 = $6
    }
  }
  END {
    if (v21 > v11)
      print 2
    else if ( v21 < v11 )
      print 1
    else
    {
      if (v22 > v12)
        print 2
      else if ( v22 < v12 )
        print 1
      else
      {
        if (v23 > v13)
          print 2
        else if ( v23 < v13 )
          print 1
        else
        {
          if (v24 > v14)
            print 2
          else if ( v24 < v14 )
            print 1
          else
          {
            if (v25 > v15)
              print 2
            else if ( v25 < v15 )
              print 1
            else
            {
              if (v26 > v16)
                print 2
              else if ( v26 < v16 )
                print 1
              else
                print 0
            }
          }
        }
      }
    }
  }'
}
#-----------------------
# END compareversions()
#-----------------------


###############################################################################


#----------------------------------------
# printertype() - interpret printer type
#----------------------------------------
printertype() {
  $echo "                \c"
  if [ `$echo $1 | grep -c '^[TLP][BCGPMI][BCDGP][A-H][012][0-9][0-9][0-9]$'` \
        -ne 0 ]; then
    ch1=`$echo $1 | cut -c1`
    ch2=`$echo $1 | cut -c2`
    ch3=`$echo $1 | cut -c3`
    ch4=`$echo $1 | cut -c4`
    dpi=`$echo $1 | cut -c5-8`
    if [ "$ch1" = T ]; then
      plotter=0
    else
      plotter=1
    fi
    case $ch2 in
      "B")      $echo "PDF \c" ;;
      "C")
        if [ "$ch1" != T ]; then
          if [ "$ch3" = C ]; then
            $echo "PCL-3 \c"
          elif [ "$ch3" = D ]; then
            $echo "PCL-5/6 \c"
          else
            $echo "PCL \c"
          fi
        else
          $echo "PCL \c"
        fi ;;
      "G")      $echo "HP/GL \c" ;;
      "P")      $echo "PostScript \c" ;;
      "M")      $echo "PostScript->PCL \c" ;;
      "I")      $echo "DICOM \c" ;;
    esac
    case $ch1 in
      "T")      $echo "printer" ;;
      "P")      $echo "portrait\c" ;;
      "L")      $echo "landscape\c" ;;
    esac
    if [ $plotter -eq 1 ]; then
      case $ch3 in
        "B")    $echo "/b&w plotter\c" ;;
        "C")    $echo "/color plotter\c" ;;
        "D")    $echo "/color plotter\c" ;;
        "G")    $echo "/color plotter\c" ;;
        "P")    $echo "/color plotter\c" ;;
      esac
      case $ch4 in
        "A")    $echo ", A4 format\c" ;;
        "B")    $echo ", A3 format\c" ;;
        "C")    $echo ", letter format\c" ;;
        "D")    $echo ", tabloid format\c" ;;
        "E")    $echo ", legal format\c" ;;
        "F")    $echo ", 17x22\" format\c" ;;
        "G")    $echo ", 22x34\" format\c" ;;
        "H")    $echo ", 34x44\" format\c" ;;
      esac
      if [ $ch2 != G ]; then
        dpi0=`$echo $dpi | cut -c1`
        if [ $dpi0 -eq 0 ]; then
          dpi=`$echo $dpi | cut -c2-4`
        fi
        $echo ", $dpi dpi"
      else
        $echo
        $awk < $vnmrsystem/devicetable 'BEGIN {
          state=0
          ppmm=0
          ych=0
          xchar=0
          wc=0
          wc2=0
          xres=1
          yres=1
          xoffset=0
          yoffset=0
          values=0
        }
        {
          if ($1 == "PrinterType")
          {
            if ($2 == "'$1'")
              state=1
            else
              state=0
          }
          if ((state == 1) && (NF > 1))
          {
            if ($1 == "ppmm")
            {
              ppmm=$2
              values++
            }
            else if ($1 == "xcharp1")
            {
              xch=$2
              values++
            }
            else if ($1 == "ycharp1")
            {
              ych=$2
              values++
            }
            else if ($1 == "wcmaxmax")
            {
              wc=$2
              values++
            }
            else if ($1 == "wc2maxmax")
            {
              wc2=$2
              values++
            }
            else if ($1 == "xoffset")
            {
              xres=$2
              values++
            }
            else if ($1 == "yoffset")
            {
              yres=$2
              values++
            }
            else if ($1 == "xoffset1")
            {
              xoffset=$2
              values++
            }
            else if ($1 == "yoffset1")
            {
              yoffset=$2
              values++
            }
          }
        }
        END {
          if (values > 0)
          {
            if (ppmm > 0)
              printf("resolution %g points per mm\n", ppmm)
            else
              ppmm=1
            line2=0
            if ((wc > 0) && (wc2 > 0))
              printf("plot area %d x %d mm\n", wc, wc2)
            if ((xoffset > 0) && (yoffset > 0))
              printf("X/Y offset %3.1f/%3.1f mm\n", xoffset/xres, yoffset/yres)
            else if (xoffset > 0)
              printf("X offset %3.1f mm\n", xoffset/xres)
            else if (yoffset > 0)
              printf("Y offset %3.1f mm\n", yoffset/yres)
            if ((xch > 0) && (ych > 0))
              printf("character size %3.1f x %3.1f mm\n", xch/ppmm, ych/ppmm)
          }
        }' | sed 's/^/                /'
      fi
    fi
  else
    $echo "VnmrJ plotter type \"$1\""
    $awk < $vnmrsystem/devicetable 'BEGIN {
      state=0
      ppmm=0
      rt=0
      rcharsiz=0
      rres=0
      ych=0
      xchar=0
      wc=0
      wc2=0
      xres=1
      yres=1
      xoffset=0
      yoffset=0
      values=0
    }
    {
      if ($1 == "PrinterType")
      {
        if ($2 == "'$1'")
          state=1
        else
          state=0
      }
      if ((state == 1) && (NF > 1))
      {
        if ($1 == "ppmm")
        {
          ppmm=$2
          values++
        }
        else if ($1 == "raster")
        {
          rt=$2
          values++
        }
        else if ($1 == "raster_charsize")
        {
          rcharsiz=$2
          values++
        }
        else if ($1 == "raster_resolution")
        {
          rres=$2
          values++
        }
        else if ($1 == "xcharp1")
        {
          xch=$2
          values++
        }
        else if ($1 == "ycharp1")
        {
          ych=$2
          values++
        }
        else if ($1 == "wcmaxmax")
        {
          wc=$2
          values++
        }
        else if ($1 == "wc2maxmax")
        {
          wc2=$2
          values++
        }
        else if ($1 == "xoffset")
        {
          xres=$2
          values++
        }
        else if ($1 == "yoffset")
        {
          yres=$2
          values++
        }
        else if ($1 == "xoffset1")
        {
          xoffset=$2
          values++
        }
        else if ($1 == "yoffset1")
        {
          yoffset=$2
          values++
        }
      }
    }
    END {
      if (values > 0)
      {
        if (rt == 0)
        {
          printf("HP/GL plotter\n")
          if (ppmm > 0)
            printf("resolution %g points per mm\n", ppmm)
          else
            ppmm=1
          if ((wc > 0) && (wc2 > 0))
            printf("X/Y range (wcmax/wc2max) %dx%d mm\n", wc, wc2)
          if ((xoffset > 0) && (yoffset > 0))
            printf("X/Y offset %3.1f/%3.1f mm\n", xoffset/xres, yoffset/yres)
          else if (xoffset > 0)
            printf("X offset %3.1f mm\n", xoffset/xres)
          else if (yoffset > 0)
            printf("Y offset %3.1f mm\n", yoffset/yres)
          if ((xch > 0) && (ych > 0))
            printf("character size %3.1fx%3.1f mm\n", xch/ppmm, ych/ppmm)
        }
        else #PCL and PS printers
        {
          if (rt == 1)
            printf("PCL / portrait mode plotter\n")
          else if (rt == 2)
            printf("PCL / landscape mode plotter\n")
          else if (rt == 3)
            printf("PostScript / portrait mode plotter\n")
          else if (rt == 4)
            printf("PostScript / landscape mode plotter\n")
          if ((wc > 0) && (wc2 > 0))
            printf("X/Y range (wcmax/wc2max) %dx%d mm\n", wc, wc2)
          if ((xoffset > 0) && (yoffset > 0))
            printf("X/Y offset %3.1f/%3.1f mm\n", xoffset/xres, yoffset/yres)
          else if (xoffset > 0)
            printf("X offset %3.1f mm\n", xoffset/xres)
          else if (yoffset > 0)
            printf("Y offset %3.1f mm\n", yoffset/yres)
          if (rres != 0)
            printf("raster resolution %d dpi\n", rres)
          if (rcharsiz != 0)
            printf("raster character size %d\n", rcharsiz)
        }
      }
    }' | sed 's/^/                /'
  fi
}
#-------------------
# END printertype()
#-------------------


###############################################################################



#---------------------------------------------------------------
# showprintq() - display UNIX queue status of specified printer
#---------------------------------------------------------------
showprintq() {
  pname=$1
  phost=$2
  prtype=$3

  if [ "$def_printer" = "$pname" ]; then
    $echo "              SYSTEM DEFAULT DESTINATION"
  fi
  if [ $lpstatok -ne 0 ]; then
    pdev="`lpstat -v $pname`"
    if [ "$pdev " != "" ]; then
      lpstat -v $pname | sed "s/^$pname //" | $awk '{
        ipppos = index($0, " ipp://")
        if (ipppos == 0)
          print
        else
        {
          part1 = substr($0, 1, ipppos - 1)
          part2 = substr($0, ipppos + 1, length($0) - ipppos)
          printf("%s\n", part1)
          printf("  %s\n", part2)
        }
      }' | sed 's/^/              /'
    fi
  fi

  # print a line such as
  #     accepting requests since ...
  if [ $lpstatok -ne 0 ]; then
    lpstat -a $pname | sed "s/^$pname /              /"
  fi

  # print output such as
  #     printer is idle. (busy, .... )
  #     enabled/disabled since ...
  if [ $lpstatok -ne 0 ]; then
    stat=`lpstat -p $pname`
    lpstat -p $pname | sed "s/^printer $pname /printer /" | $awk '
    {
      pos=match($0,/[\.;]  /)
      if (pos == 0)
        print
      else
      {
        s1=""
        s2=""
        s1=substr($0,1,pos)
        s2=substr($0,pos+3,length($0)-(pos+2))
        print s1
        printf("  %s\n", s2)
      }
    }' | sed 's/^/              /'
  fi

  # Report pending print jobs
  if [ $lpstatok -ne 0 ]; then
    pending=`lpstat -o $pname | wc -l`
    pending_printjobs=`expr $pending_printjobs + $pending`
    if [ $pending -eq 1 ]; then
      echo "                ==> 1 PENDING PRINT JOB FOR THIS PRINTER."
    elif [ $pending -gt 1 ]; then
      echo "                ==> $pending PENDING PRINT JOBS FOR THIS PRINTER."
    else
      echo "              no pending print jobs for this printer."
    fi
  fi

  # check network printer / remote print host accessibility, using "ping"
  if [ "x$prtype" = xnetwork -o "x$prtype" = xremote ]; then
    pingOK=`$ping -q -c 1 $phost 2> /dev/null | grep -c ' 1 received,'`
    if [ "x$prtype" = xnetwork ]; then
      if [ $pingOK -gt 0 ]; then
        $echo "              printer responds to \"ping\"."
      else
        $echo "              printer does NOT respond to \"ping\"."
      fi
    else
      if [ $pingOK -gt 0 ]; then
        $echo "              remote print server responds to \"ping\"."
      else
        $echo "              remote print server does NOT respond to \"ping\"."
      fi
    fi
  fi
}
#------------------
# END showprintq()
#------------------


###############################################################################



#-------------------------------------------------------------------
# showprinter() - display properties of specified printer / plotter
#-------------------------------------------------------------------
showprinter() {
  name=$1
  makeprinter=$2
  use=`$awk <$vnmrsystem/devicenames \
    '{if (($1 == "Name") && ($2 == "'$name'")) {getline; print $NF}}'`
  type=`$awk <$vnmrsystem/devicenames \
    '{if (($1 == "Name") && ($2 == "'$name'")) {getline; getline; print $NF}}'`
  prhost=`$awk <$vnmrsystem/devicenames \
    '{if (($1 == "Name") && ($2 == "'$name'")) {getline; getline; getline; print $NF}}'`
  port=`$awk <$vnmrsystem/devicenames \
    '{if (($1 == "Name") && ($2 == "'$name'")) {getline; getline; getline; getline; print $NF}}'`

  $echo "$name" | $awk '{printf("  %-11s ",$1)}'
  if [ "$prhost" = dummy -o "$name" = email ]; then
    $echo "dummy \c"
    ptype=dummy
  elif [ "$prhost" = "$dhost" -o "$prhost" = "$shost" -o \
         "$prhost" = localhost ]; then
    $echo "LOCAL \c"
    ptype=local
  elif [ -d /etc/lp/printers/$name ]; then
    $echo "NETWORK \c"
    ptype=network
  else
    $echo "REMOTE \c"
    ptype=remote
  fi
  if [ "$use" = Printer ]; then
    $echo "Printer\c"
  elif [ "$use" = Plotter ]; then
    $echo "Plotter\c"
  else
    $echo "Printer\c"
  fi
  if [ "$prhost" = dummy -o "$name" = email ]; then
    $echo " definition\c"
  fi
  if [ $makeprinter -ne 0 ]; then
    if [ "$prhost" = dummy -o "$name" = email ]; then
      $echo ", used for file/PDF plotting only"
    elif [ "$prhost" = "$dhost" -o "$prhost" = "$shost" -o \
           "$prhost" = localhost ]; then
      $echo $port | $awk '{printf(", connected to port \"%s\"\n", $1)}'
    elif [ "$prhost" != "" ]; then
      if [ $ptype = network ]; then
        $echo $prhost | $awk '{printf(" at \"%s\"\n", $1)}'
      else
        $echo $prhost | $awk '{printf(" connected to \"%s\"\n", $1)}'
      fi
    elif [ $ptype = network ]; then
      $echo " at UNKNOWN/UNDEFINED LOCATION / ADDRESS"
    elif [ $ptype = remote ]; then
      $echo " on UNKNOWN/UNDEFINED HOST"
    else
      $echo
    fi
  else
    if [ "$prhost" = dummy -o "$name" = email ]; then
      $echo " (plotting to file/PDF/e-mail)"
    elif [ "$prhost" = "$dhost" -o "$prhost" = "$shost" -o \
           "$prhost" = localhost ]; then
      if [ "$port" = /dev/null ]; then
        $echo ", used for plotting to file/PDF/e-mail only"
      else
        $echo $port | $awk '{printf(", connected to port \"%s\"\n", $1)}'
      fi
    elif [ "$prhost" != "" ]; then
      if [ $ptype = network ]; then
        $echo $prhost | $awk '{printf(" at \"%s\"\n", $1)}'
      else
        $echo $prhost | $awk '{printf(" connected to \"%s\"\n", $1)}'
      fi
    else
      if [ $lpstatok -ne 0 ]; then
        prhost=`lpstat -v "$name" | tr '/' ' ' | $awk '{print $(NF-1)}'`
      fi
      if [ $ptype = network ]; then
        $echo " at UNDEFINED LOCATION / ADDRESS"
      elif [ $ptype = remote ]; then
        $echo " on UNDEFINED HOST"
      else
        $echo
      fi
    fi
  fi
  if [ "$type" != "" ]; then
    printertype $type
  else
    fmt --width=79 -c << %
                NOT defined in "$vnmrsystem/devicenames", i.e.: within VnmrJ,
                  this device is NOT a usable printer/plotter
%
  fi

  #----------------------------------
  # Do stuff for "real" printers ...
  #----------------------------------
  if [ "$host" != dummy -a "$name" != email -a \
       `lpstat -p 2> /dev/null | $awk '{if ($0 ~ /^printer /) print $2}' | \
        grep -wc $name` -ne 0 ]; then

    # check for printer / plotter names starting with numeric character
    if [ `$echo $name | grep -c '^[0-9]'` -ne 0 ]; then
      printernamesOK=0
      fmt --width=79 -c << %
                ATTENTION: printer name "$name" starts with a numeric
                  character; this will cause ERRORS / FAILURES in VnmrJ!
%
    fi

    # check print queue for "real" devices
    showprintq $name $prhost $ptype

  fi
}
#-------------------
# END showprinter()
#-------------------


###############################################################################



#---------------------------------------------------------------
# showfiles() - display list of files from stdin
#---------------------------------------------------------------
showfiles() {
  hdr=1
  basename=0
  while [ $# -gt 0 ]; do
    if [ `$echo "x$1" | grep -ic '^x-h'` -ne 0 ]; then
      hdr=0
    elif [ `$echo "x$1" | grep -ic '^x-b'` -ne 0 ]; then
      basename=1
    fi
    shift
  done
  cyear=`date '+%Y'`
  cmonth=`date '+%m'`
  cat | sed 's/ [ ]*/ /g
    s/ 1 / 01 /g
    s/ 2 / 02 /g
    s/ 3 / 03 /g
    s/ 4 / 04 /g
    s/ 5 / 05 /g
    s/ 6 / 06 /g
    s/ 7 / 07 /g
    s/ 8 / 08 /g
    s/ 9 / 09 /g
    s/Jan /01 /
    s/Feb /02 /
    s/Mar /03 /
    s/Apr /04 /
    s/May /05 /
    s/Jun /06 /
    s/Jul /07 /
    s/Aug /08 /
    s/Sep /09 /
    s/Oct /10 /
    s/Nov /11 /
    s/Dec /12 /' | $awk 'BEGIN {count = 0; hdr='$hdr'; bsn='$basename'}
    {
      if (NF == 7)
      {
        if ($6 ~ ":")
        {
          month=$4
          if (month <= '$cmonth')
            year='$cyear'
          else
            year='$cyear'-1
          if ((count == 0) && (hdr == 1))
            printf("   Date    Time    Name\n")
          printf("%d-%s-%s %s",year,$4,$5,$6)
          count++
        }
        else
        {
          if ((count == 0) && (hdr == 1))
            printf("   Date    Time    Name\n")
          printf("%s-%s-%s      ",$6,$4,$5)
          count++
        }
        if (bsn == 1)
        {
          pos=match($7,/\//)
          if (pos == 0)
            name=$7
          else
            name=substr($7,pos+1,length($7)-pos)
        }
        else
          name=$7
        printf("  %s\n",name)
      }
      else
        print
  }' | $awk '{if (NF > 0) print}' | sed 's/^/        /'
}
#-----------------
# END showfiles()
#-----------------


###############################################################################



#---------------------------------------------------------------------
# showpackage() - display installed RPM package
#---------------------------------------------------------------------
showpackage() {
  prefix=""
  if [ "x$1" = x-p ]; then
    shift
    prefix=$1
    shift
  fi
  name=$1
  miss=0
  if [ $rh4 -eq 1 -o $rh3 -eq 1 ]; then
    if [ -s /var/log/rpmpkgs ]; then
      pkglist=/var/log/rpmpkgs
    else
      pkglist=$pkglog
    fi
    if [ $# -gt 1 ]; then
      instcount=`cat $pkglist /dev/null | grep "^${name}" | grep -c "$2"`
    else
      instcount=`cat $pkglist /dev/null | grep -c "^${name}-[0-9]"`
    fi
    if [ $instcount -eq 0 ]; then
      if [ $# -gt 1 ]; then
        $echo ${name}-$2 | \
          $awk '{printf("    %-20s ##### PACKAGE MISSING #####\n",$1)}' | \
          sed "s/^/$prefix/" | tee -a $tmp
      else
        $echo $name | \
          $awk '{printf("    %-20s ##### PACKAGE MISSING #####\n",$1)}' | \
          sed "s/^/$prefix/" | tee -a $tmp
      fi
      miss=`expr $miss + 1`
    elif [ $# -gt 1 ]; then
      cat $pkglist | grep "^${name}-" | grep "$2" | $awk '
      BEGIN { pkg="'$name'" }
      {
        if (NR == 1)
          printf("    %-20s %s\n",pkg,$1)
        else
          printf("    %-20s %s\n"," ",$1)
      }' | sed "s/^/$prefix/" | tee -a $tmp
    else
      cat $pkglist | grep "^${name}-[0-9]" | $awk '
      BEGIN { pkg="'$name'" }
      {
        if (NR == 1)
          printf("    %-20s %s\n",pkg,$1)
        else
          printf("    %-20s %s\n"," ",$1)
      }' | sed "s/^/$prefix/" | tee -a $tmp
    fi
  else
    pkglist=$pkglog
    if [ $# -gt 1 ]; then
      instcount=`cat $pkglist /dev/null | grep "^${name}\." | grep -c "$2"`
    else
      instcount=`cat $pkglist /dev/null | grep -c "^${name}\."`
    fi
    if [ $instcount -eq 0 ]; then
      if [ $# -gt 1 ]; then
        $echo ${name}-$2 | \
          $awk '{printf("    %-20s ##### PACKAGE MISSING #####\n",$1)}' |\
          sed "s/^/$prefix/" | tee -a $tmp
      else
        $echo $name | \
          $awk '{printf("    %-20s ##### PACKAGE MISSING #####\n",$1)}' |\
          sed "s/^/$prefix/" | tee -a $tmp
      fi
      miss=`expr $miss + 1`
    elif [ $# -gt 1 ]; then
      cat $pkglist | grep "^${name}\." | grep "$2" | \
                sed 's/ [0-9][0-9]*:/ /' | $awk '
      BEGIN { pkg="'$name'" }
      {
        if (NR == 1)
          printf("    %-20s", pkg)
        else
          printf("    %-20s", " ")
        if (NF>1)
          printf(" %-26s %s\n", $1, $2)
        else
          printf(" %s\n", $1)
      }' | sed "s/^/$prefix/" | tee -a $tmp
    else
      cat $pkglist | grep "^${name}\." | sed 's/ [0-9][0-9]*:/ /' | $awk '
      BEGIN { pkg="'$name'" }
      {
        if (NR == 1)
          printf("    %-20s", pkg)
        else
          printf("    %-20s", " ")
        if (NF>1)
          printf(" %-26s %s\n", $1, $2)
        else
          printf(" %s\n", $1)
      }' | sed "s/^/$prefix/" | tee -a $tmp
    fi
  fi
  return $miss
}
#-------------------
# END showpackage()
#-------------------


###############################################################################



#---------------------------------------------------------------------
# showport() - display properties of specified serial / parallel port
#---------------------------------------------------------------------
showport() {
  name=$1
  $echo $name | $awk '{printf("  %-15s",$1)}'
  d=`ls -l $name | $awk '{print $NF}' | sed 's/\.\.\///g
s/^/\//'`
  owner=`ls -l $d | $awk '{printf("%s/%s\n",$3,$4)}'`
  perm=`ls -l $d | $awk '{printf("%s\n",substr($1,2,9))}'`
  $echo "$perm $owner" | $awk '{printf("  %9s      %s",$1,$2)}'
  if [ "$owner" = "lp/lp" -o "$owner" = "root/lp" ]; then
    $echo "       Set up for printing/plotting"
  else
    $echo
  fi
}
#----------------
# END showport()
#----------------


###############################################################################



#---------------------------------------------------------------------
# show_if() - display properties of specified network interface
#---------------------------------------------------------------------
show_if() {
  name=$1
  ifconfig=`whereis ifconfig | $awk '{print $2}'`
  if_up=1
  if_active=1
  if_running=1
  errstats=0
  ipv6=""
  ldhcp=0
  if [ "$ifconfig" != "" -a -x "$ifconfig" ]; then
    errstats=`$ifconfig $name | egrep -v 'errors:0 |collisions:0' | \
        egrep -c 'errors:|collisions:'`
    if [ `$ifconfig $name | grep 'MTU:' | grep -cw UP` -eq 0 ]; then
      if_up=0
      if_active=0
    fi
    if [ `$ifconfig $name | grep 'MTU:' | grep -cw RUNNING` -eq 0 ]; then
      if_running=0
      if_active=0
    fi
    ipv6=`$ifconfig $name | grep 'inet6 addr: ' | $awk '{print $3}'`
  fi
  acquisition_port=0
  cat << %
  -----------------------------------------------------------------------------
%
  $echo "  Interface   \"$name\"\c"
  if [ $# -gt 1 ]; then
    acquisition_port=1
    if [ $if_active -ne 0 ]; then
      $echo ", used for acquisition / console connection"
    else
      $echo ", reserved for acquisition / console connection"
    fi
  else
    if [ $if_active -ne 0 ]; then
      $echo ", used for WAN connection"
    else
      $echo ", currently inactive"
    fi
  fi
  ipaddr=""
  netmask="0.0.0.0"
  interfacedef=/etc/sysconfig/network-scripts/ifcfg-$name
  if [ -s $interfacedef ]; then
    ifhw=`head -n 1 < $interfacedef | grep '^#' | sed 's/^#[ ]*//
           s/Corporation/Corp./g'`
    if [ "$ifhw" != "" ]; then
      $echo "    $ifhw"
    fi
    if [ `grep -ic '^BOOTPROTO=dhcp' < $interfacedef` -gt 0 ]; then
      ldhcp=1
    fi
    if [ $acquisition_port -eq 0 -a $ldhcp -eq 1 ]; then
      dhcp=1
    fi
    if [ `grep -c '^HWADDR=' < $interfacedef` -gt 0 ]; then
      hwaddr=`grep '^HWADDR=' < $interfacedef | tr '=' ' ' | $awk '{print $2}'`
    fi
  elif [ \! -r $interfacedef ]; then
    $echo "    The file \"$interfacedef\" is NOT READABLE!"
  else
    $echo "    The file \"$interfacedef\" is EMPTY!"
  fi
  if [ "x$hwaddr" = x ]; then
    fmt -c --width=79 << %
    Interface definition in $interfacedef does NOT include an entry for the
       MAC ("hardware") address (HWADDR=XX:XX:XX:XX:XX:XX)!
%
    if [ "$ifconfig" != "" -a -x "$ifconfig" ]; then
      hwaddr=`$ifconfig $name | head -n 1 | grep HWaddr | $awk '{print $NF}'`
    fi
    if [ "$hwaddr" = "" ]; then
      hwaddr="(NOT AVAILABLE)"
    fi
  fi
  if [ -s $interfacedef ]; then
    if [ `grep -c '^IPADDR=' < $interfacedef` -gt 0 ]; then
      ipaddr=`grep '^IPADDR=' < $interfacedef | tr '=' ' ' | $awk '{print $2}'`
    fi
    if [ "$ipaddr" != "" ]; then
      $echo "    IP / MAC address:         $ipaddr / $hwaddr"
    else
      $echo "    MAC address:              $hwaddr"
    fi
  fi
  if [ $if_active -eq 0 ]; then
    if [ $if_up -ne 0 ]; then
      $echo "    Interface status:         INACTIVE (up, NOT running)"
    elif [ $if_running -ne 0 ]; then
      $echo "    Interface status:         INACTIVE (running, NOT up)"
    else
      $echo "    Interface status:         INACTIVE (not up, not running)"
    fi
  else
    $echo "    Interface status:         active (up, running)"
    if [ $ldhcp -eq 1 ]; then
      if [ $acquisition_port -ne 0 ]; then
        cat << %
    WARNING: The acquisition Ethernet port is configured to use DHCP; this
      setup can NOT be used on the acquisition connection. It is best to run
                /vnmr/bin/setacq
      as root in order to rectify the situation.
%
      else
        $echo "    Port configured for DHCP"
        if [ -s $interfacedef ]; then
          dhcp_host=`grep -c '^DHCP_HOSTNAME=' < $interfacedef | \
                sed 's/=/ /' | $awk '{print $NF}'`
          if [ "$dhcp_host" != "" ]; then
            $echo "    DHCP host name:           $dhcp_host"
          fi
        fi
      fi
    elif [ -s $interfacedef ]; then
      if [ `grep -c '^NETMASK=' < $interfacedef` -gt 0 ]; then
        netmask=`grep '^NETMASK=' < $interfacedef | tr '=' ' ' | \
		 $awk '{print $2}'`
      fi
      $eval_netmask $ipaddr $netmask | $awk '
      {
        printf("      network-ID:             %s\n", $1);
        printf("      netmask:                %s (%s)\n", $2, $3);
        printf("      usable address range:   %s - %s\n", $4, $5);
        printf("      broadcasting addresses: %s / %s\n", $6, $7);
        if ($NF != "OK")
        {
          printf("        ATTENTION: POSSIBLE NETMASK DEFINITION ERROR!\n")
          printf("      minimum netmask:        %s\n",$8);
        }
      }'
      if [ $acquisition_port -eq 0 ]; then
        if [ "$ipv6" != "" ]; then
          $echo "    IPV6 address:             $ipv6"
        fi
        gateway_IP_OK=1
        localnet=`$eval_netmask $ipaddr $netmask | $awk '{print $1}'`
        if [ `grep -c '^GATEWAY=' < $interfacedef` -gt 0 ]; then
          gateway=`grep '^GATEWAY=' < $interfacedef | tr '=' ' ' | \
            $awk '{print $2}'`
          gateway_net=`$eval_netmask $gateway $netmask | $awk '{print $1}'`
          if [ "x$gateway_net" != "x$localnet" ]; then
            gateway_IP=`$eval_netmask $ipaddr $netmask | $awk '{print $4}'`
            gateway_IP_OK=0
          fi
        else
          $echo "    Interface definition in $interfacedef"
          $echo "       does NOT include a gateway (GATEWAY=#.#.#.#) definition;"
          $echo "       using \"/sbin/route\" to look for gateway / router:"
          gateway=`/sbin/route | grep '^default ' | $awk '{print $2}'`
        fi
        if [ "x$gateway" != x ]; then
          $echo "    Gateway / router:         $gateway"
          $echo "    Trying to connect to gateway ..."
          pingOK=`$ping -q -c 1 $gateway 2> /dev/null | grep -c ' 1 received,'`
          $echo "      gateway / router:       $gateway\c"
          if [ $pingOK -gt 0 ]; then
            $echo " (reachable)"
            routing=1
          elif [ $gateway_IP_OK -eq 0 ]; then
            $echo " NOT REACHABLE using \"ping\";"
            cat << %
        The specified router address (${gateway}) is outside of the local
        address range; this implies that either the netmask or the router /
        gateway IP address is mis-set (a typical / expected value would be
        ${gateway_IP}), or that you need to set up a static route to that
        router system (see "man route").
%
          else
            $echo " NOT REACHABLE using \"ping\""
          fi
        else
          $echo "    IP ROUTING NOT AVAILABLE."
        fi
      fi
    fi
    if [ $errstats -gt 0 ]; then
      $echo "    Interface transmission statistics:"
      $ifconfig $name | egrep '[RT]X packets:|collisions:|RX bytes:'
    elif [ "$ifconfig" != "" -a -x "$ifconfig" ]; then
      $echo "    Interface transmission statistics: no errors/collisions"
      $ifconfig $name | grep 'RX bytes:'
    fi
  fi
}
#----------------
# END show_if()
#----------------


###############################################################################



#------------------------------------------------------------------------------
# banner_title() - BANNER TITLE
#------------------------------------------------------------------------------
banner_title() {
  cd $wd
  if [ "$shost" != "$host" ]; then
    title="HARD- & SOFTWARE CONFIGURATION FOR SYSTEM \"$shost\""
    title2="($host)"
  else
    title="HARD- & SOFTWARE CONFIGURATION FOR SYSTEM \"$host\""
    title2=""
  fi
  timestamp=`date -u '+Information collected on %Y-%m-%d %H:%M:%S %Z'`
  ($echo $title; $echo $title2; $echo $timestamp) | $awk 'BEGIN {
    printf("\n\n")
    for (i=0; i<79; i++)
    {
      printf("=")
    }
    printf("\n")
  }
  {
    if (NF > 0)
    {
      lead=int((79-length($0))/2-0.5)
      for (i=0; i<lead; i++)
      {
        printf(" ")
      }
      print
    }
  }
  END {
    for (i=0; i<79; i++)
    {
      printf("=")
    }
    printf("\n")
  }'
  n_args=`$echo "$w_args" | wc -w`
  if [ $usernow = root ]; then
    $echo "  Arguments supplied:  (arguments disabled)"
  elif [ $n_args -gt 1 ]; then
    $echo "  Arguments supplied:  \"$w_args\""
  elif [ $n_args -eq 1 ]; then
    $echo "  Argument supplied:   \"$w_args\""
  else
    $echo "  (No arguments supplied)"
  fi
  groupnow=`id | tr '()' '  ' | sed 's/ [ ]*/ /g' | cut -f4 -d' '`
  $echo "  Current user:        ${usernow} (primary group: ${groupnow})"
  if [ $usernow = root ]; then
    idstr=`id | sed "s/($usernow)//
      s/($groupnow)//
      s/uid/UID/
      s/gid/GID/
      s/ groups=.*$//"`
    $echo "                       $idstr" | fmt --width=79 | expand
    idstr=`id | sed "s/^.* groups=/groups=/
      s/ context=.*$//"`
    if [ `$echo $idstr | $awk '{print NF}'` -eq 1 ]; then
      $echo $idstr | tr ',' ' ' | $awk 'BEGIN { len = 23 }
        {
          printf("%s", $1)
          len += length($1)
          for (i = 2; i <= NF; i++)
          {
            printf(",")
            len++
            if (len + length($i) < 78)
            {
              len += length($i)
            }
            else
            {
              printf("\n       ")
              len = 23 + 7
            }
            printf("%s", $i)
          }
        }
        END { printf("\n") }' | sed 's/^/                       /'
    fi
    idstr=`id | sed "s/^.* context=/context=/"`
    if [ `$echo $idstr | $awk '{print NF}'` -eq 1 ]; then
      $echo "                       $idstr"
    fi
  else
    idstr=`id | sed "s/($usernow)//
      s/($groupnow)//
      s/uid/UID/
      s/gid/GID/"`
    $echo "                       $idstr"
  fi
  fmt --width=79 << %
  Dates & time stamps in the text below are usually in ISO-8601 format, i.e.,
  "yyyy-mm-dd" and "yyyy-mm-dd HH:MM", respectively (local time zone, unless
  indicated otherwise).
%
  fmt --width=79 << %
  Note: data / disk sizes are given in binary units (KiB, MiB, GiB, etc.);
  disk manufacturers may specify disk sizes in decimal units (MB, GB, etc.) -
  their values may therefore appear larger than the sizes shown below. For
  more information see Agilent MR News 2009-07-10.


%
}
#---------------------
# END banner_title()
#---------------------


###############################################################################


#-----------------------------------------
# bios_info() - collect BIOS information
#-----------------------------------------
bios_info() {
  cd $wd
  cat << %
-------------------------------------------------------------------------------
 PC Hardware Configuration:
-------------------------------------------------------------------------------
%
  if [ -s $BIOS_settings ]; then
    $echo "  Information from BIOS:"
    if [ $showbios -eq 1 ]; then
      expand $BIOS_settings | \
          egrep -iv 'Not Provided|Not Specified|Wake-up Type' | $awk '{
        if ($0 ~ /^[A-Za-z]/)
          printf("      %s\n",$0)
        else if ($0 ~ /[A-Za-z0-9:\.]/)
          print
      }'
    else
      expand $BIOS_settings | \
          egrep -iv 'Not Provided|Not Specified|Wake-up Type' | $awk '
      BEGIN { show = 1 }
      {
        if ($0 ~ /BIOS Information/)
          show = 0
        if (show == 1)
        {
          if ($0 ~ /^[A-Za-z]/)
            printf("      %s\n",$0)
          else if ($0 ~ /[A-Za-z0-9:\.]/)
            print
        }
      }'
    fi
  fi
  if [ -s /etc/sysconfig/hwconf ]; then
    if [ -s $BIOS_settings ]; then
      cat << %
  -----------------------------------------------------------------------------
%
    fi
    cat << %
  Information from "/etc/sysconfig/hwconf" (selection, graphics see below):
     Class     Description
%
    cat /etc/sysconfig/hwconf | $awk '{
      if ($1 == "class:")
        class=$2
      if (($1 == "desc:") && (NF > 1))
      {
        if ((class != "OTHER") && (class != "VIDEO"))
        {
          printf("    %-8s ", class)
          for (i = 2; i <= NF; i++)
            printf(" %s", $i)
          printf("\n")
        }
      }
    }' | sed 's/DELL/Dell/g
      s/Dell Dell/Dell/
      s/Corporation //
      s/"//g'
    cat << %
  For more complete information use the Linux hardware browser via
        System -> Administration -> Hardware
%
  fi
}
#---------------------
# END bios_info()
#---------------------


###############################################################################


#---------------------
# pc_config()
#---------------------
pc_config() {
  cd $wd
  if [ $showbios -eq 0 ]; then
    cat << %
-------------------------------------------------------------------------------
 PC Hardware Configuration:
-------------------------------------------------------------------------------

%

  else
cat << %
  -----------------------------------------------------------------------------
%
  fi
  if [ "$pcmodel" != "" ]; then
    $echo "  PC Model:  $pcmodel"
    if [ "$serialnum" != "" ]; then
      $echo "PC Model:  $pcmodel (serial-#: $serialnum)" >> $SP_SUMMARY
    else
      $echo "PC Model:  $pcmodel" >> $SP_SUMMARY
    fi
  fi
  hostid=`hostid`
cat << %
  Host-ID:   $hostid
  -----------------------------------------------------------------------------
  CPU type / speed:
%

  dmesg > $tmp
  expand $tmp | grep '^CPU[0-9]' | grep -w CPU | sort -bdfu | sed '
    s/ [ ]*/ /g
    s/(R)//g
    s/(TM)//g
    s/ CPU /, /g
    s/ @ /, /g
    s/ stepping [0-9]*//g
    s/GHz[a-z]*/ GHz/g' > $tmp.2
  if [ `cat $tmp.2 /dev/null 2> /dev/null | wc -c` -lt 3 ]; then
    expand $tmp | grep '^[ ]*Intel(R)' | grep -w CPU | sort -bdfu | sed '
      s/ [ ]*/ /g
      s/(R)//g
      s/(TM)//g
      s/ CPU / /g
      s/ @ /, /g
      s/ stepping [0-9]*//g
      s/GHz[a-z]*/ GHz/g' > $tmp.2
  fi
  if [ `cat $tmp.2 /dev/null 2> /dev/null | wc -c` -lt 3 ]; then
    $echo "    (CPU information not available)"
    $echo "Linux PC;  CPU model information not available\c" >> $SP_SUMMARY
  else
    cat $tmp.2 | sed 's/^/     /'
    pctype=`head -n 1 $tmp.2 | sed 's/CPU[0-9]://
      s/ [ ]*/ /g
      s/^[ ]*/Linux PC:  /'`
    $echo "$pctype\c" >> $SP_SUMMARY
  fi
  rm -f $tmp.2

  #----------------------------------------
  # Check whether CPU is 64-bit enabled
  #----------------------------------------
  cputype=`uname -i`
  if [ `$echo $cputype | grep -ci "_64"` -gt 0 ]; then
    bit64on=1
  fi
  if [ $bit64on -eq 1 ]; then
    $echo "  CPU type: $cputype (64-bit enabled)"
    $echo ", 64-bit enabled" >> $SP_SUMMARY
  else
    $echo "  CPU type: $cputype"
    $echo >> $SP_SUMMARY
  fi

  #----------------------------------------
  # Report memory size, usage / statistics
  #----------------------------------------
  freeKiB=`free | grep 'Mem:' | $awk '{print $2}'`
  freeMiB=`expr $freeKiB / 1024`
  freeGiB=`$echo $freeMiB | $awk '{printf("%3.1f\n",$1/1024)}'`
  ramKiB=`$echo $freeKiB | $awk '{
      mb=$1/1024
      if (mb<1024)
        mb =  256*int((mb +  255)/ 256)
      else if (mb<2*1024)
        mb =  512*int((mb +  511)/ 512)
      else if (mb<4*1024)
        mb = 1024*int((mb + 1023)/1024)
      else if (mb<8*1024)
        mb = 2048*int((mb + 2047)/2048)
      else
        mb = 4096*int((mb + 4095)/4096)
      print mb*1024
    }'`
  ramMiB=`expr $ramKiB / 1024`
  ramGiB=`$echo $ramKiB | $awk '{printf("%3.1f\n",$1/(1024*1024))}'`
  $echo $ramKiB $ramMiB $ramGiB | $awk '{
    printf("  Memory size:  physical RAM ")
    printf("%9d KiB / %5d MiB / %3.1f GiB\n",$1,$2,$3)
  }'
  $echo $freeKiB $freeMiB $freeGiB | $awk '{
    printf("                usable RAM   ")
    printf("%9d KiB / %5d MiB\n",$1,$2)
  }'
  $echo "           RAM size: $ramMiB MiB ($ramGiB GiB)" >> $SP_SUMMARY
  cat << %
  -----------------------------------------------------------------------------
  Virtual memory statistics (sizes in KiB):
%
  free | expand | sed 's/^/     /'


  #----------------------------------------
  # Report swap space definition and usage
  #----------------------------------------
  $echo "  Swap space definition & status:"
  /sbin/swapon -s | $tail -n +2 | $awk '
    {
      printf("     %-32s %7.1f MiB (%3.1f%% used, priority %d)\n",
             $1,$3/1024,$4/$3*100,$5)
    }'

  if [ $freeMiB -lt $minrammblimit ]; then
    cat << %

  NOTE: For optimum VnmrJ database performance we recommend
        using systems with $minramGiB GiB or more memory (RAM).
%
  fi

  swapsiz=`free | grep 'Swap:' | $awk '{print $2}'`
  swapsizMiB=`expr $swapsiz / 1024`
  if [ $freeMiB -lt 1700 ]; then
    swapwarnMiB=`echo $ramKiB | $awk '{printf("%1.0f\n",$1/1024*1.5*0.9)}'`
  else
    swapwarnMiB=`echo $ramKiB | $awk '{printf("%1.0f\n",$1/1024*0.9)}'`
  fi
  if [ $swapwarnMiB -lt $recminswap ]; then
    swapwarnMiB=`echo $recminswap | $awk '{printf("%1.0f\n",$1*0.9)}'`
  fi
  swapsizGiB=`$echo $swapsizMiB | $awk '{printf("%3.1f\n",$1/1024)}'`
  recswapMiB=`$echo $ramMiB | $awk '{print 512*int(($1+511)/512)}'`
  if [ $recswapMiB -lt $minswap ]; then
    recswapMiB=$minswap
  fi
  if [ $recswapMiB -lt 2048 ]; then
    recswapMiB=`echo $recswapMiB | $awk '{print 512*int(($1+511)/512)}'`
  else
    recswapMiB=`echo $recswapMiB | $awk '{print 1024*int(($1+1023)/1024)}'`
  fi
  recswapGiB=`$echo $recswapMiB | $awk '{printf("%3.1f",$1/1024)}'`


  if [ $swapsizMiB -lt $swapwarnMiB ]; then
    cat << %

  NOTE: With $ramGiB GiB of physical RAM we recommend defining
        at least $recswapGiB GiB ($recswapMiB MiB) of swap space
%
  fi

  #---------------------------------------
  # report total available UFS disk space
  #---------------------------------------
  df -P -t ext3 -t ext4 -k | tail -n +2 > $tmp
  diskGiB=`expand $tmp | $awk 'BEGIN {sum=0} {sum += $2}
    END {printf("%5.1f\n",sum/(1024*1024))}'`
  cat << %
  -----------------------------------------------------------------------------
  Total disk size:  $diskGiB GiB
%
  $echo "Total disk space $diskGiB GiB\c" >> $SP_SUMMARY


  rootdsk=`expand $tmp  | $awk '{if ($NF == "/") print }' | $tail -n 1 | \
        $awk '{printf("%s\n",substr($1,1,length($1)-2))}'`
  rootfs=`expand $tmp  | $awk '{if ($NF == "/") print }' | $tail -n 1 | \
        $awk '{printf("%s\n",$1)}'`
  rootGiB=`expand $tmp  | $awk '{if ($NF == "/") print }' | $tail -n 1 | \
        $awk '{printf("%5.1f\n",$2/(1024*1024))}'`
  $echo "  Root (/) file system     ($rootGiB GiB): $rootfs"

  homedsk=`expand $tmp  | $awk '{if ($NF == "/home") print }' | $tail -n 1 | \
        $awk '{printf("%s\n",substr($1,1,length($1)-2))}'`
  homefs=`expand $tmp  | $awk '{if ($NF == "/home") print }' | $tail -n 1 | \
        $awk '{printf("%s\n",$1)}'`
  homeGiB=`expand $tmp  | $awk '{if ($NF == "/home") print }' | $tail -n 1 | \
        $awk '{printf("%5.1f\n",$2/(1024*1024))}'`
  if [ "x$homeGiB" != x -a "x$homefs" != x ]; then
    $echo "  Home (/home) file system ($homeGiB GiB): $homefs"
  else
    $echo "  Home (/home) file system: NOT in a separate disk partition"
  fi

  disk1sizGiB=`expand $tmp | $awk '
    BEGIN {sum=0; disk1name="'$rootdsk'"}
    {
      if ((NF > 5) && (substr($1,1,length($1)-2) == disk1name))
      {
        sum += $2
      }
    }
    END {printf("%5.1f\n",sum/(1024*1024))}'`
  disk1sizGiBrd=`$echo $disk1sizGiB | $awk '{printf("%.0f\n", $1)}'`
  dsk1part=`expand $tmp | $awk '
    BEGIN {count=0; disk1name="'$rootdsk'"}
    {
      if ((NF > 5) && (substr($1,1,length($1)-2) == disk1name))
      {
        count += 1
      }
    }
    END {printf("%d\n",count)}'`
  if [ "$disk1sizGiB" != "$diskGiB" ]; then
    $echo $disk1sizGiB $dsk1part | $awk '{
      printf("  Primary disk: %9.1f GiB / %d UFS partitions\n",$1,$2)
    }'
    $echo $disk1sizGiB $dsk1part | $awk '{
      printf("\n")
      printf("  Primary disk: %6.1f GiB / %d partitions\n",$1,$2)
    }' >> $SP_SUMMARY
    $echo $swapsizMiB | $awk '{
      printf("  Swap space: %8d MiB\n",$1) }' >> $SP_SUMMARY
  else
    $echo "; $dsk1part UFS partitions\c" >> $SP_SUMMARY
    $echo "; swap space $swapsizMiB MiB" >> $SP_SUMMARY
  fi

  rootsizK=`df -P -k / | $tail -n 1 | $awk '{ printf("%d\n",$(NF-4)) }'`
  rootsizM=`$echo $rootsizK | $awk '{ printf("%1.0f\n",$1/1024) }'`
  rootuseK=`df -P -k / | $tail -n 1 | $awk '{ printf("%d\n",$(NF-3)) }'`
  rootfreeK=`df -P -k / | $tail -n 1 | $awk '{ printf("%d\n",$(NF-2)) }'`
  rootuse=`df -P -k / | $tail -n 1 | $awk '{ printf("%d\n",$(NF-1)) }' | \
        sed 's/%//g'`
  rootuse=`$echo $rootuseK $rootfreeK $rootuse | $awk '{
      if ($3 > 100)
        printf("%.1f\n",$3)
      else
        printf("%.1f\n",$1/($1+$2))
    }'`
  varfs=`df -P /var | $tail -n 1 | $awk '{ print $NF }'`
  if [ $varfs = / ]; then
    varsizK=$rootsizK
    varuseK=$rootuseK
    varfreeK=$rootfreeK
    varuse=$rootuse
  else
    varsizK=`df -P -k /var | $tail -n 1 | $awk '{ printf("%d\n",$(NF-4)) }'`
    varuseK=`df -P -k /var | $tail -n 1 | $awk '{ printf("%d\n",$(NF-3)) }'`
    varfreeK=`df -P -k /var | $tail -n 1 | $awk '{ printf("%d\n",$(NF-2)) }'`
    varuse=`df -P -k /var | $tail -n 1 | $awk '{ printf("%d\n",$(NF-1)) }' | \
        sed 's/%//g'`
    varuse=`$echo $varuseK $varfreeK $varuse | $awk '{
        if ($3 > 100)
          printf("%.1f\n",$3)
        else
          printf("%.1f\n",$1/($1+$2))
      }'`
  fi
  usrfs=`df -P /usr | $tail -n 1 | $awk '{ print $NF }'`
  if [ $usrfs = / ]; then
    usrsizK=$rootsizK
    usruseK=$rootuseK
    usrfreeK=$rootfreeK
    usruse=$rootuse
  else
    usrsizK=`df -P -k /usr | $tail -n 1 | $awk '{ printf("%d\n",$(NF-4)) }'`
    usruseK=`df -P -k /usr | $tail -n 1 | $awk '{ printf("%d\n",$(NF-3)) }'`
    usrfreeK=`df -P -k /usr | $tail -n 1 | $awk '{ printf("%d\n",$(NF-2)) }'`
    usruse=`df -P -k /usr | $tail -n 1 | $awk '{ printf("%d\n",$(NF-1)) }' | \
        sed 's/%//g'`
    usruse=`$echo $usruseK $usrfreeK $usruse | $awk '{
        if ($3 > 100)
          printf("%.1f\n",$3)
        else
          printf("%.1f\n",$1/($1+$2))
      }'`
  fi
  if [ -d /opt ]; then
    optfs=`df -P /opt | $tail -n 1 | $awk '{ print $NF }'`
    if [ $optfs = / ]; then
      optsizK=$rootsizK
      optuseK=$rootuseK
      optfreeK=$rootfreeK
      optuse=$rootuse
    else
      optsizK=`df -P -k /opt | $tail -n 1 | $awk '{ printf("%d\n",$(NF-4)) }'`
      optuseK=`df -P -k /opt | $tail -n 1 | $awk '{ printf("%d\n",$(NF-3)) }'`
      optfreeK=`df -P -k /opt | $tail -n 1 | $awk '{ printf("%d\n",$(NF-2)) }'`
      optuse=`df -P -k /opt | $tail -n 1 | $awk '{ printf("%d\n",$(NF-1)) }' | \
          sed 's/%//g'`
      optuse=`$echo $optuseK $optfreeK $optuse | $awk '{
          if ($3 > 100)
            printf("%.1f\n",$3)
          else
            printf("%.1f\n",$1/($1+$2))
        }'`
    fi
  fi
  if [ -d /home ]; then
    homefs=`df -P /home | $tail -n 1 | $awk '{ print $NF }'`
    if [ $homefs = / ]; then
      homesizK=$rootsizK
      homeuseK=$rootuseK
      homefreeK=$rootfreeK
      homeuse=$rootuse
    else
      homesizK=`df -P -k /home | $tail -n 1 | $awk '{ printf("%d\n",$(NF-4)) }'`
      homeuseK=`df -P -k /home | $tail -n 1 | $awk '{ printf("%d\n",$(NF-3)) }'`
      homefreeK=`df -P -k /home | $tail -n 1 | $awk '{ printf("%d\n",$(NF-2))}'`
      homeuse=`df -P -k /home | $tail -n 1 | $awk '{ printf("%d\n",$(NF-1))}' |\
          sed 's/%//g'`
      homeuse=`$echo $homeuseK $homefreeK $homeuse | $awk '{
          if ($3 > 100)
            printf("%.1f\n",$3)
          else
            printf("%.1f\n",$1/($1+$2))
        }'`
    fi
  fi


  #------------------------------------------------------------------------
  # size and percent usage of defined, mounted local UNIX disk partitions
  #------------------------------------------------------------------------
  df -P -l -t ext3 -t ext4 -k | $tail -n +2 | sed 's/%//' | $awk 'BEGIN {
      siz=0
      used=0
      free=0
      usable=0
      usage=0
      mount=""
      fs=""
      printf("  Local UNIX (ext3/ext4) Partitions (sizes in MiB):\n")
      printf("     Size      Used      Free   Used%%")
      printf("  Mount   Device\n")
    }
    {
      fs=$1
      siz=$2
      used=$3
      free=$4
      usable=used+free
      if ($5 > 100)
        usage=$5
      else
        usage=used/usable*100
      mount=$NF
      if (siz != 0)
      {
        printf(" %9.1f %9.1f %9.1f  %4.1f%%  ",
               siz/1024, used/1024, free/1024, usage)
        printf("%-6s", mount)
        printf(" %s\n", fs)
        siz=0
        used=0
        free=0
        usable=0
        usage=0
        mount=""
        fs=""
      }
    }'
  rm -f $tmp $pkgtmp

  #---------------------------------------------------------
  # recommendations about RAM size for VnmrJ
  #---------------------------------------------------------
  if [ $freeMiB -lt 1500 ]; then
    numrec=`expr $numrec + 1`
    fmt --width=79 >> ${SP_REC}.pchw << %
For optimum VnmrJ database performance (especially if your system
is holding thousands of FIDs in the database) we STRONGLY recommend
using PCs with 2 GiB or more memory (RAM). Note that adding swap
space does NOT help in the case of performance issues - the ONLY
possible remedies are either adding RAM or moving SUBSTANTIAL
PORTIONS of the data out of the scope of the Locator database, e.g.,
into a directory that is not covered by the Locator. You could then
still use
%
    cat >> ${SP_REC}.pchw << %
 - the file manager,
 - "rt" with full path, or
 - "cd" and "rt" with relative path
to access such data.

%
  fi
}
#---------------------
# END pc_config()
#---------------------


###############################################################################



#---------------------
# pc_memstat()
#---------------------
pc_memstat() {
  cd $wd
  cat << %

-------------------------------------------------------------------------------
 Process / Memory Status from "top"
-------------------------------------------------------------------------------
%
  top -b -n 1 | head -5 | sed '/^Cpu/s/  / /g
    /^top - /s/  / /g
    s/^/  /'
  top -b -n 1 | tail -n +7 | sed 's/^/  /' | head -n 1 | sed 's/ [ ]*$//'
  top -b -n 1 | tail -n +8 | sort -r -d -k 9,10 | $awk '
    {
      if ((NF > 0) && (($9 != "0.0") || ($10 != "0.0")) && ($11 !~ /^[0:\.]*$/))
        print
    }' | head -n 20 | sed 's/^/  /
      s/ [ ]*$//'
}
#---------------------
# END pc_memstat()
#---------------------


###############################################################################



#---------------------
# pc_graphics()
#---------------------
pc_graphics() {
  cd $wd
  cat << %

-------------------------------------------------------------------------------
 Graphics Configuration and Settings
-------------------------------------------------------------------------------
%
  if [ -f /etc/sysconfig/hwconf ]; then
    if [ `cat /etc/sysconfig/hwconf | grep -ic '^desc: "nvidia'` -gt 0 ]; then
      $echo 'Information from "/etc/sysconfig/hwconf":'
      cat /etc/sysconfig/hwconf | $awk 'BEGIN {gr = 0; dr = ""; xdr = "" }
      {
        if ($1 == "class:")
        {
          if ($2 ~ /^[Vv][Ii][Dd][Ee][Oo]$/)
            gr = 1
          else
            gr=0
        }
        if ((gr == 1) && ($1 ~ /^desc:$/))
          printf("  Graphics controller: %s\n", $0)
        if ((gr == 1) && ($1 ~ /^driver:$/))
          dr=$2
        if ((gr == 1) && ($1 ~ /^video.xdriver:$/))
          xdr=$2
      }
      END {
        if (dr != "")
          printf("  Graphics driver:     %s\n", dr)
        if (xdr != "")
          printf("  X.11 driver:         %s\n", xdr)
      }' | sed 's/ desc://
        s/"//g' | tee $tmp
      if [ `grep -ic controller < $tmp` -gt 0 ]; then
        if [ `grep -ic 'Quadro NVS 285' < $tmp` -gt 0 ]; then
          graphics="NVIDIA Quadro NVS 285"
        elif [ `grep -ic 'Quadro FX 570' < $tmp` -gt 0 ]; then
          graphics="NVIDIA Quadro FX 570"
        else
          graphics=`grep -i controller < $tmp | sed 's/Graphics controller://
            s/^ [ ]*//'`
        fi
      fi
    fi
  fi
  if [ -f /etc/X11/xorg.conf ]; then
    $echo 'Information from "/etc/X11/xorg.conf":'
    expand /etc/X11/xorg.conf | grep -v '^[ ]*#' | sed 's/ [ ]*$//' | \
      $awk '{if (NF > 0) print}' | $awk '{
      while (($0 ~ /^[Ss]ection [ ]*"[Mm]odule"/) ||
             ($0 ~ /^[Ss]ection [ ]*"[Ff]iles"/) ||
             ($0 ~ /^[Ss]ection [ ]*"[Ii]nput[Dd]evice"/))
      {
        res = 1
        while (($0 !~ /^[Ee]nd[Ss]ection/) && (NF > 0) && (res > 0))
        {
          res = getline
        }
        if (res > 0)
          getline
      }
      if ($0 ~ /^[Ss]ection [ ]*"[Mm]onitor[0-9]*"/)
      {
        res = 1
        while (($0 !~ /^[Ee]nd[Ss]ection/) && (NF > 0) && (res > 0))
        {
          if (($0 !~ /^[ ]*[Vv]endor[Nn]ame [ ]*".* [Vv]endor"/) &&
              ($0 !~ /^[ ]*[Hh]oriz[Ss]ync/) &&
              ($0 !~ /^[ ]*[Vv]ert[Rr]efresh/) &&
              ($0 !~ /"[Uu]nknown"/) &&
              ($0 !~ /"[Uu]nknown [ ]*[Mm]onitor"/) &&
              ($0 !~ /^[ ]*[Oo]ption/))
          {
            print
          }
          res = getline
        }
      }
      if (($0 !~ /^[ ]*[Vv]endor[Nn]ame [ ]*".* [Vv]endor"/) &&
          ($0 !~ /^[ ]*[Ii]nput[Dd]evice/))
        print
    }' | sed 's/^[ ]*//
    s/"//g
    s/ [ ]*/ /g' | $awk 'BEGIN {indent = 0; followup = 0}
    {
      if ($1 ~ /^[Ss]ection$/)
      {
        indent = 2
        printf("%s: ",$2)
        followup = 1
      }
      else if ($1 ~ /^[Ss]ub[Ss]ection$/)
      {
        indent = 4
        if ($2 == "Display")
        {
          printf("  %s @ ",$2)
        }
        else
        {
          printf("  %s ",$2)
        }
        followup = 1
      }
      else if ($1 ~ /^[Ee]nd[Ss]ection$/)
      {
        indent = 0
        followup = 0
      }
      else if ($1 ~ /^[Ee]nd[Ss]ub[Ss]ection$/)
      {
        indent = 2
        followup = 0
      }
      else if ($1 ~ /^[Mm]odes$/)
      {
        if (followup == 0)
        {
          for (k = 0; k < indent; k++)
          {
            printf(" ")
          }
        }
        printf("%s", $1)
        lastmode = ""
        ind2 = indent + 5
        pos = ind2
        for (ix = 2; ix <= NF; ix++)
        {
          if ($ix != lastmode)
          {
            pos = pos + 1 + length($ix)
            if (pos > 72)
            {
              printf("\n")
              for (k = 0; k < ind2; k++)
              {
                printf(" ")
              }
              pos = ind2 + 1 + length($ix)
            }
            printf(" %s",$ix)
            lastmode = $ix
          }
        }
        printf("\n")
        followup = 0
      }
      else if ($1 ~ /^[Oo]ption$/)
      {
        if (followup == 0)
        {
          for (k = 0; k < indent; k++)
          {
            printf(" ")
          }
        }
        printf("%s", $1)
        ind2 = indent + 5
        pos = ind2
        for (ix = 2; ix <= NF; ix++)
        {
          pos = pos + 1 + length($ix)
          if (pos > 72)
          {
            printf("\n")
            for (k = 0; k < ind2; k++)
            {
              printf(" ")
            }
            pos = ind2 + 1 + length($ix)
          }
          printf(" %s",$ix)
        }
        printf("\n")
        followup = 0
      }
      else if ($1 ~ /^[Ii]dentifier$/)
      {
        if (followup == 0)
        {
          for (k = 0; k < indent; k++)
          {
            printf(" ")
          }
        }
        printf("%s",$2)
        for (ix = 3; ix <= NF; ix++)
        {
          printf(" %s",$ix)
        }
        printf("\n")
        followup = 0
      }
      else
      {
        if (followup == 0)
        {
          for (k = 0; k < indent; k++)
          {
            printf(" ")
          }
        }
        print
        followup = 0
      }
    }' | sed 's/^/  /'
    gr=`expand /etc/X11/xorg.conf | sed 's/#.*//' | grep -i 'nvidia.*quadro' | \
          head -n 1`
    if [ "$graphics" != "" ]; then
      if [ `$echo $gr | grep -i nvs | grep -wc 285` -eq 1 ]; then
        graphics="NVIDIA Quadro NVS 285"
        $echo "Graphics controller:  $graphics" >> $SP_SUMMARY
        $echo "For more information on graphics setup see above" >> $SP_SUMMARY
      elif [ `$echo $gr | grep -i fx | grep -wc 570` -eq 1 ]; then
        graphics="NVIDIA Quadro FX 570"
        $echo "Graphics controller:  $graphics" >> $SP_SUMMARY
        $echo "For more information on graphics setup see above" >> $SP_SUMMARY
      else
        $echo "For information on graphics setup & settings see above" >> \
                $SP_SUMMARY
      fi
    fi
  elif [ "$graphics" = "" ]; then
    cat << %
X.11 configuration file "/etc/X11/xorg.conf" not present or not readable -
  information on graphics hard- and software setup is not available.
%
  else
    cat << %
X.11 configuration file "/etc/X11/xorg.conf" not present or not readable -
  additional information on graphics hard- and software setup not available.
%
  fi
  rm -f $tmp
}
#---------------------
# END pc_graphics()
#---------------------


###############################################################################



#---------------------
# pc_osinfo()
#---------------------
pc_osinfo() {
  cd $wd
  cat << %

-------------------------------------------------------------------------------
 Linux Version / Configuration:
-------------------------------------------------------------------------------
%
  os=`uname -s`
  $echo "  Operating system:  $os"
  kernel="`uname -r` `uname -v`"

  rhv=0.0
  LinuxK_OK=1
  stdRHEL=1
  instK="`uname -r`"
  std_K="$instK"

  rhf=/etc/redhat-release
  if [ ! -f $rhf -o `grep -ic 'Red Hat Enterprise Linux' < $rhf` -eq 0 ]; then
    stdRHEL=0
    supported_os=0
    ##### INSERT STUFF HERE #####
  fi

  if [ -f $rhf -a $stdRHEL -ne 0 ]; then
    if [ `egrep -c ' 6\.[0-9] | 6 ' < $rhf` -gt 0 ]; then
      rh6=1
      rhv=`cat $rhf | $awk '{
        i=1
        done=0
        while ((i <= NF) && (done == 0))
        {
          if ($i ~ /^6/)
          {
            print $i
            done=1
          }
          i++
        }
      }'`
      if [ x$rhv = x6 -o x$rhv = x6.0 ]; then
        rh60=1
        if [ `uname -r | grep -c '2\.6\.32-71'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.32-71
        fi
      elif [ x$rhv = x6.1 ]; then
        rh61=1
        ### TO BE ADJUSTED
        if [ `uname -r | grep -c '2\.6\.32-71'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.32-71
        fi
      elif [ x$rhv = x6.2 ]; then
        rh62=1
        ### TO BE ADJUSTED
        if [ `uname -r | grep -c '2\.6\.32-71'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.32-71
        fi
      elif [ x$rhv = x6.3 ]; then
        rh63=1
        ### TO BE ADJUSTED
        if [ `uname -r | grep -c '2\.6\.32-71'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.32-71
        fi
      elif [ x$rhv = x6.4 ]; then
        rh64=1
        ### TO BE ADJUSTED
        if [ `uname -r | grep -c '2\.6\.32-71'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.32-71
        fi
      fi

    elif [ `egrep -c ' 5\.[0-9] | 5 ' < $rhf` -gt 0 ]; then
      rh5=1
      rhv=`cat $rhf | $awk '{
        i=1
        done=0
        while ((i <= NF) && (done == 0))
        {
          if ($i ~ /^5/)
          {
            print $i
            done=1
          }
          i++
        }
      }'`
      if [ x$rhv = x5 -o x$rhv = x5.0 ]; then
        rhv=5.0
        rh50=1
        if [ `uname -r | grep -c '2\.6\.18-8\.'` -eq 1 ]; then
          updated=0
        else
          LinuxK_OK=0
          std_K=2.6.18-8
        fi
      elif [ x$rhv = x5.1 ]; then
        rh51=1
        if [ `uname -r | grep -c '2\.6\.18-53'` -eq 1 ]; then
          updated=0
          supported_os=1
        else
          LinuxK_OK=0
          std_K=2.6.18-53
        fi
      elif [ x$rhv = x5.2 ]; then
        rh52=1
        if [ `uname -r | grep -c '2\.6\.18-92'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.18-92
        fi
      elif [ x$rhv = x5.3 ]; then
        rh53=1
        if [ `uname -r | grep -c '2\.6\.18-128'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.18-128
        fi
      elif [ x$rhv = x5.4 ]; then
        rh54=1
        if [ `uname -r | grep -c '2\.6\.18-164'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.18-164
        fi
      elif [ x$rhv = x5.5 ]; then
        rh55=1
        if [ `uname -r | grep -c '2\.6\.18-194'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.18-194
        fi
      elif [ x$rhv = x5.6 ]; then
        rh56=1
        if [ `uname -r | grep -c '2\.6\.18-238'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.18-238
        fi
      elif [ x$rhv = x5.7 ]; then
        rh57=1
        if [ `uname -r | grep -c '2\.6\.18-274'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.18-274
        fi
      elif [ x$rhv = x5.8 ]; then
        rh58=1
        ### TO BE ADJUSTED
        if [ `uname -r | grep -c '2\.6\.18-274'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.18-274
        fi
      elif [ x$rhv = x5.9 ]; then
        rh59=1
        ### TO BE ADJUSTED
        if [ `uname -r | grep -c '2\.6\.18-274'` -eq 0 ]; then
          LinuxK_OK=0
          std_K=2.6.18-274
        fi
      fi

    elif [ `grep -ic ' release 4 ' < $rhf` -gt 0 ]; then
      rh4=1
      if [ `grep -cw Update < $rhf` -eq 0 ]; then
        rhv=4.0
        rh40=1
        if [ `uname -r | grep -c '2\.6\.9-5\.'` -eq 1 ]; then
          updated=0
          supported_os=1
        else
          LinuxK_OK=0
          std_K=2.6.9-5
        fi
      else
        rhv=`cat $rhf | tr '[()]' '  ' | $awk '{printf("4.%s\n",$NF)}'`
        if [ x$rhv = x4.0 ]; then
          rh40=1
          if [ `uname -r | grep -c '2\.6\.9-5\.'` -eq 1 ]; then
            updated=0
            supported_os=1
          else
            LinuxK_OK=0
            std_K=2.6.9-5
          fi
        elif [ x$rhv = x4.1 ]; then
          rh41=1
          if [ `uname -r | grep -c '2\.6\.9-11'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.6.9-11
          fi
        elif [ x$rhv = x4.2 ]; then
          rh42=1
          if [ `uname -r | grep -c '2\.6\.9-22'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.6.9-22
          fi
        elif [ x$rhv = x4.3 ]; then
          rh43=1
          if [ `uname -r | grep -c '2\.6\.9-34\.'` -eq 1 ]; then
            updated=0
            supported_os=1
          else
            LinuxK_OK=0
            std_K=2.6.9-34
          fi
        elif [ x$rhv = x4.4 ]; then
          rh44=1
          if [ `uname -r | grep -c '2\.6\.9-42'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.6.9-42
          fi
        elif [ x$rhv = x4.5 ]; then
          rh45=1
          if [ `uname -r | grep -c '2\.6\.9-55'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.6.9-55
          fi
        elif [ x$rhv = x4.6 ]; then
          rh46=1
          if [ `uname -r | grep -c '2\.6\.9-67'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.6.9-67
          fi
        elif [ x$rhv = x4.7 ]; then
          rh47=1
          if [ `uname -r | grep -c '2\.6\.9-78'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.6.9-78
          fi
        elif [ x$rhv = x4.8 ]; then
          rh48=1
          if [ `uname -r | grep -c '2\.6\.9-89'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.6.9-89
          fi
        elif [ x$rhv = x4.9 ]; then
          rh49=1
          if [ `uname -r | grep -c '2\.6\.9-100'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.6.9-100
          fi
        fi
      fi

    elif [ `grep -ic ' release 3 ' < $rhf` -gt 0 ]; then
      rh3=1
      if [ `grep -cw Update < $rhf` -eq 0 ]; then
        rhv=3.0
        rh30=1
        if [ `uname -r | grep -c '2\.4\.21-4\.'` -eq 1 ]; then
          updated=0
          supported_os=1
        else
          LinuxK_OK=0
          std_K=2.4.21-4
        fi
      else
        rhv=`cat $rhf | tr '[()]' '  ' | $awk '{printf("4.%s\n",$NF)}'`
        if [ x$rhv = x3.0 ]; then
          rh30=1
          if [ `uname -r | grep -c '2\.4\.21-4\.'` -eq 1 ]; then
            updated=0
            supported_os=1
          else
            LinuxK_OK=0
            std_K=2.4.21-4
          fi
        elif [ x$rhv = x3.1 ]; then
          rh31=1
          if [ `uname -r | grep -c '2\.4\.21-9'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.4.21-9
          fi
        elif [ x$rhv = x3.2 ]; then
          rh32=1
          if [ `uname -r | grep -c '2\.4\.21-15\.'` -eq 1 ]; then
            updated=0
            supported_os=1
          else
            LinuxK_OK=0
            std_K=2.4.21-15
          fi
        elif [ x$rhv = x3.3 ]; then
          rh33=1
          if [ `uname -r | grep -c '2\.4\.21-20'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.4.21-20
          fi
        elif [ x$rhv = x3.4 ]; then
          rh34=1
          if [ `uname -r | grep -c '2\.4\.21-27'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.4.21-27
          fi
        elif [ x$rhv = x3.5 ]; then
          rh35=1
          if [ `uname -r | grep -c '2\.4\.21-32'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.4.21-32
          fi
        elif [ x$rhv = x3.6 ]; then
          rh36=1
          if [ `uname -r | grep -c '2\.4\.21-37'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.4.21-37
          fi
        elif [ x$rhv = x3.7 ]; then
          rh37=1
          if [ `uname -r | grep -c '2\.4\.21-40'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.4.21-40
          fi
        elif [ x$rhv = x3.8 ]; then
          rh38=1
          if [ `uname -r | grep -c '2\.4\.21-47'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.4.21-47
          fi
        elif [ x$rhv = x3.9 ]; then
          rh39=1
          if [ `uname -r | grep -c '2\.4\.21-50'` -eq 0 ]; then
            LinuxK_OK=0
            std_K=2.4.21-50
          fi
        fi
      fi
    fi
    if [ $rh4 -eq 1 -o $rh3 -eq 1 ]; then
      updcmd=rpm
      updutl=up2date
    else
      updcmd=yum
      updutl=pup
    fi
    if [ $updated -ne 0 ]; then
      supported_os=0
    fi
    if [ "$rhv" = "4.3" ]; then
      $echo "    RedHat Enterprise Linux $rhv (RHEL $rhv / \"RHEL 4.0u3\")"
    else
      $echo "    RedHat Enterprise Linux $rhv (RHEL $rhv)"
    fi
    $echo "Operating system: RHEL $rhv\c" >> $SP_SUMMARY

    $echo "    Contents of \"$rhf\":"
    cat $rhf | sed 's/^/        /'

    $echo "  Kernel version:    $kernel"
    if [ $rh3 -eq 0 ]; then
      if [ $updated -eq 0 ]; then
        $echo "    RHEL $rhv kernel as supplied for use with VnmrJ,"
        $echo "    no kernel updates installed."
        $echo " (version supplied by Agilent, or equivalent)" >> \
                $SP_SUMMARY
      else
        cat << %

  The Linux kernel (and the operating system) is NOT a version supplied by
  Agilent for use with VnmrJ; this is likely one of the following:
    - a RHEL installation updated via "$updcmd" / "$updutl",
    - a "vanilla", purchased / downloaded version of RedHat Linux $rhv, or
    - a preinstalled version of RHEL on a locally purchased PC.
%
        $echo " (custom install or updated)" >> $SP_SUMMARY
      fi
    else
      $echo "Operating system: NOT RedHat Enterprise Linux" >> $SP_SUMMARY
      $echo "  This is NOT RedHat Enterprise Linux."
      $echo "  Linux kernel version:    $kernel"
      supported_os=0
      showpkg=0
      showrecomm=0
    fi
    if [ $LinuxK_OK -eq 0 ]; then
      fmt --width=79 >> ${SP_REC}.os << %
WARNING: The Linux kernel version does NOT correspond to the release version
information from "/etc/redhat-release" (the standard kernel for RHEL $rhv is
version $std_K).

%
      fmt --width=79 << %
  WARNING: The Linux kernel version does NOT correspond to the release version
  information from "/etc/redhat-release" - the standard kernel for RHEL $rhv
  is $std_K; possible reasons:
%
      cat << %
    - Linux kernel updating (e.g., in connection with updating the OS) failed
    - a legacy or non-standard kernel was selected manually when booting
    - the file "/etc/redhat-release" was altered by hand (NOT recommended!)
%
      fmt --width=79 << %
  This may cause failures that are hard to track / debug, and it is likely to
  affect your ability to obtain software support from RedHat or Agilent!
%
    else
      cat << %
  Linux kernel version agrees with RHEL version per "/etc/redhat-release".
%
    fi
  fi
  if [ $supported_os -eq 0 ]; then
    cat << %
  NOTE: Agilent may NOT be able to provide support in the case of problems
        with the installed version of the Linux operating system.
%
  else
    $echo "Linux kernel version: $kernel" >> $SP_SUMMARY
  fi


  #---------------------------------------------------------
  # recommendations for RHEL 3.x
  #---------------------------------------------------------

  upgrade_os=1
  upgrade_vj=1
  req_pcupdate=0
  req_osupdate=0
  req_newpc=0
  if [ $rh3 -eq 1 ]; then
    numrec=`expr $numrec + 1`
    if [ `$echo $pcmodel | grep -ci 'optiplex.*270'` -ne 0 ]; then
      fmt --width=79 >> ${SP_REC}.os << %
You are running an early version of RedHat Enterprise Linux, RHEL $rhv;
this version of the operating system is no longer supported by current
versions of VnmrJ - on the other hand, the ${pcmodel}
does NOT support the 64-bit version of RHEL 4.x or RHEL 5.x that is
required to run current versions of VnmrJ, i.e., if you wanted to
upgrade to a newer version of VnmrJ you also would need to switch to
a newer Dell PC model, such as the ${current_pc}.

%
      upgrade_os=0
      upgrade_vj=0
    elif [ `$echo $pcmodel | grep -ci 'dell precision'` -ne 0 ]; then
      fmt --width=79 >> ${SP_REC}.os << %
You are running an early version of RedHat Enterprise Linux, RHEL $rhv;
this version of the operating system is no longer supported by current
versions of VnmrJ. The ${pcmodel} does support the
current version of RHEL in 64-bit mode, i.e., provided your PC is
equipped with enough RAM and disk space (check below for eventual
recommendations on RAM and disk size), you should be able to run
the latest possible versions of RedHat Enterprise Linux and VnmrJ
(see again below for details).

%
    else
      fmt --width=79 >> ${SP_REC}.os << %
You are running an early version of RedHat Enterprise Linux, RHEL $rhv;
this version of the operating system is no longer supported by current
versions of VnmrJ - i.e., you would AT LEAST need to upgrade to a newer
version of RHEL (if not even upgrade to a newer PC model, such as the
$current_pc, see also below) in order to run a recent or current
version of VnmrJ.

%
    fi
  fi

  #---------------------------------------------------------
  # recommendations about 32-bit vs. 64-bit OS / hardware
  #---------------------------------------------------------
  if [ $bit64on -eq 0 ]; then
    numrec=`expr $numrec + 1`
    if [ $rh3 -eq 1 ]; then
      if [ `$echo $pcmodel | grep -ci 'optiplex.*270'` -ne 0 ]; then
        fmt --width=79 >> ${SP_REC}.os << %
You are running a 32-bit version of RedHat Enterprise Linux, RHEL ${rhv}.
Your PC model does NOT support a 64-bit Linux OS, see above.

%
        upgrade_os=0
        upgrade_vj=0
      elif [ `$echo $pcmodel | grep -ci 'dell precision'` -ne 0 ]; then
        fmt --width=79 >> ${SP_REC}.os << %
You appear to be running a 32-bit version of RHEL ${rhv}; however,
your PC model DOES support the 64-bit version of current RedHat
Enterprise Linux releases, see above.

%
      else
        fmt --width=79 >> ${SP_REC}.os << %
You appear to be running a 32-bit version of RedHat Enterprise Linux;
this may be because your computer hardware only supports a 32-bit OS
(as with the Dell OptiPlex GX270). If this is the case, you will not
be able to run a current version of VnmrJ without upgrading to a newer
PC model, such as the ${current_pc}, as current VnmrJ versions REQUIRE
a 64-bit version of RHEL 4.x or RHEL 5.x (and current PC hardware MANDATES
the installation of RHEL 5.1 or higher).

%
      fi
    else
      if [ `$echo $pcmodel | grep -ci 'optiplex.*270'` -ne 0 ]; then
        fmt --width=79 >> ${SP_REC}.os << %
You are running a 32-bit version of RedHat Enterprise Linux, RHEL ${rhv}.
Your PC model does NOT support a 64-bit Linux OS, see above.

%
        upgrade_os=0
        upgrade_vj=0
      elif [ `$echo $pcmodel | grep -ci 'dell precision'` -ne 0 ]; then
        fmt --width=79 >> ${SP_REC}.os << %
You appear to be running a 32-bit version of RHEL ${rhv}; however,
your PC model DOES support the 64-bit version of current RedHat
Enterprise Linux releases, see above.

%
      else
        cat >> ${SP_REC}.os << %
You appear to be running a 32-bit version of RedHat Enterprise Linux (RHEL);
this is either
 - because the 32-bit version of RHEL $rhv was installed deliberately or by
   mistake, or
 - because your computer hardware (or the virtualization platform, in case you
   are using one) only supports a 32-bit operating system.
In the first case, you may be able to install a current, 64-bit version of
RedHat Enterprise Linux in order to run a current version of VnmrJ; in the
second case you would first need to upgrade to a newer PC model such as the
$current_pc (or a newer version of the virtualization platform AND a current
version of RHEL).

%
      fi
    fi
  fi

  #---------------------------------------------------------
  # recommendations about disk size for RHEL 5.x
  #---------------------------------------------------------
  if [ $rh5 -eq 0 -a $disk1sizGiBrd -lt 140 -a $upgrade_os -eq 1 ]; then
    numrec=`expr $numrec + 1`
    fmt --width=79 >> ${SP_REC}.os << %
In case you intend to switch to RHEL 5.x (see below for eventual
recommendations on this topic): the RHEL 5.1 installation DVD suuplied by
Agilent (and the Agilent recommendations for installing RHEL 5.1) requires a
first disk of at least 160 GB (nominal size) - your main disk currently offers
just $disk1sizGiB GiB in actual (usable) disk space.

%
  fi

  #---------------------------------------------------------
  # recommendations about minimum swap size
  #---------------------------------------------------------
  if [ $swapsizMiB -lt $swapwarnMiB ]; then
    numrec=`expr $numrec + 1`
    fmt --width=79 >> ${SP_REC}.os << %
With $ramGiB GiB of physical RAM we recommend defining at least
$recswapGiB GiB ($recswapMiB MiB) of swap space for optimum performance
and stability.

%
  fi

}
#---------------------
# END pc_osinfo()
#---------------------


###############################################################################



#---------------------
#  init_rec()
#---------------------
init_rec() {
  cd $wd
  if [ $showrecomm -ne 0 ]; then
    cat >> ${SP_REC}.hdr << %
APPLICABILITY: The recommendations below reflect / are based on the range of
workstations that have been and are being sold by Agilent, and the operating
environments that can be used on these systems to run VnmrJ:
         Dell PC model         RedHat Enterprise Linux versions
        OptiPlex GX270          RHEL 3.0
        Precision 370n          RHEL 3.2, RHEL 4.3 (up to 4.9)
        Precision 380n          RHEL 4.0, RHEL 4.3 (up to 4.9)
        Precision 390n          RHEL 4.3 (up to 4.9)
        OptiPlex 755n           RHEL 5.1 (up to 5.4)
        Precision T3400         RHEL 5.1 (up to 5.4)
        Precision T3500         RHEL 5.3 up to 5.4 and beyond
VnmrJ versions coverage (as compatible with the above platforms):
        VnmrJ 1.1D
        VnmrJ 2.1A / 2.1B
        VnmrJ 2.2A / 2.2B / 2.2C / 2.2D
        VnmrJ 2.3A
Spectrometer platforms supported (combined with the applicable VnmrJ versions
and Linux OS / PC hardware platforms from the above list):
        DirectDrive architecture:      Legacy systems:
          400-MR                        MERCURY-Vx
          Varian NMR System             MERCURYplus
          Varian MRI System             UNITY INOVA
With the pace at which new Dell PC models, RedHat Enterprise Linux and
VnmrJ software versions and new spectrometer systems are being released,
these recommendations will quickly become outdated; we will keep updating
this utility periodically, and we recommend downloading the current
version of "bin/$wrappercmd" from the on-line User Library at
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
whenever using it as a planning aid for system hard- or software upgrades.
%
    if [ "$pcmodel" = "" ]; then
      fmt --width=79 >> ${SP_REC}.hdr << %

LIMITATIONS: If "$wrappercmd" is unable to read the BIOS settings, or if you
selected not to enter the root password when asked to do so (or if you are
running VnmrJ on a platform outside of the above range and/or not supported
by Agilent), then these recommendations and any conclusions drawn from these
may not be meaningful at all.
%
    elif [ $supported_pc -eq 0 ]; then
      fmt --width=79 >> ${SP_REC}.hdr << %

LIMITATIONS: If you are running VnmrJ on a platform outside of the above range
and/or not supported by Agilent (or if "$wrappercmd" is unable to read the
BIOS settings, or you selected not to enter the root password when asked to do
so), then these recommendations and any conclusions drawn from these may not
be meaningful at all.
%
    fi
    cat >> ${SP_REC}.hdr << %
===============================================================================

%
  fi
}
#---------------------
#  END init_rec()
#---------------------


###############################################################################



#---------------------
# pc_ospkg()
#---------------------
pc_ospkg() {
  cd $wd
  rpm --query --all --last 2> /dev/null | sed '
      s/,/ /g
      s/ Jan[a-z]* / 01 /
      s/ Feb[a-z]* / 02 /
      s/ Mar[a-z]* / 03 /
      s/ Apr[a-z]* / 04 /
      s/ May / 05 /
      s/ Jun[a-z]* / 06 /
      s/ Jul[a-z]* / 07 /
      s/ Aug[a-z]* / 08 /
      s/ Sep[a-z]* / 09 /
      s/ Oct[a-z]* / 10 /
      s/ Nov[a-z]* / 11 /
      s/ Dec[a-z]* / 12 /
      s/ Mon[a-z]* / Mon /
      s/ [Ll]un[a-z]* / Mon /
      s/ Tue[a-z]* / Tue /
      s/ [Mm]ar[a-z]* / Tue /
      s/ Wed[a-z]* / Wed /
      s/ [Mm]er[a-z]* / Wed /
      s/ Thu[a-z]* / Thu /
      s/ [Jj]eu[a-z]* / Thu /
      s/ [Gg]io[a-z]* / Thu /
      s/ Fri[a-z]* / Fri /
      s/ [Vv]en[a-z]* / Fri /
      s/ Sat[a-z]* / Sat /
      s/ [Ss]a[bm][a-z]* / Sat /
      s/ Sun[a-z]* / Sun /
      s/ [Dd][io]m[a-z]* / Sun /' | tr ':' ' ' | $awk '
      {
        if (NF == 10)
        {
          wd = $2
          dd = $3
          mm = $4
          yr = $5
          HH = $6
          MM = $7
          SS = $8
          TZ = $10
          if ($9 ~ /P/)
          {
            if (HH < 12)
              HH += 12
          }
          else
          {
            if (HH == 12)
              HH=0
          }
          printf("%-50s %s %d-%02d-%02d %02d:%02d:%02d %s\n", \
                     $1,wd,yr,mm,dd,HH,MM,SS,TZ)
        }
        else
        {
          printf("%-50s %s", $1, $2)
          for (i=3; i <= NF; i++)
          {
            printf(" %s",$i)
          }
          printf("\n")
        }
      }' >> ${pkglog}.chr
  if [ $rh3 -eq 0 -a $rh4 -eq 0 ]; then
    yum list installed 2> /dev/null | tail -n +3 | $awk '
      {
        if (NF == 3)
        {
          print
        }
        else if (NF == 2)
        {
          printf("%-70s installed\n", $0)
          getline
        }
        else if (NF == 1)
        {
          item=$1
          getline
          version=$1
          part1=item " " version
          printf("%-70s installed\n", part1)
        }
      }' | sort -bf | sed 's/  installed$/ installed/' >> ${pkglog}.alpha
    cp ${pkglog}.alpha ${pkglog}
  else
    cp ${pkglog}.chr ${pkglog}
  fi
  packages=`wc -l < ${pkglog}`
  if [ $packages -ne 0 ]; then
    if [ "$updcmd" = yum ]; then
      packages_alpha=`wc -l < ${pkglog}.alpha`
      cat << %
  Number of installed Linux packages ($updcmd):  >> $packages_alpha <<
  The complete list of installed packages (in reverse chronological
  as well as alphabetic order) is found at the bottom of the log file.
%
    else
      cat << %
  Number of installed Linux packages ($updcmd):  >> $packages <<
  The complete list of installed packages (in reverse chronological
    order) is found at the bottom of the log file.
%
    fi
    $echo "Number of RPM packages installed:  $packages" >> $SP_SUMMARY

    if [ $showpkg -ne 0 -o $showrecomm -ne 0 ]; then
      firstrpm=`cat ${pkglog}.chr | $tail -n 1`
      $echo "        First package installation:  \c"
      firstinstall=`$echo $firstrpm | $awk '
        {
          printf("%s,", $2)
          for (i=3; i <= NF; i++)
          {
            printf(" %s",$i)
          }
          printf("\n")
        }'`
      $echo $firstinstall
      last_rpm=`cat ${pkglog}.chr | head -n 1`
      $echo "        LAST  package installation:  \c"
      lastinstall=`$echo $last_rpm | $awk '
        {
          printf("%s,", $2)
          for (i=3; i <= NF; i++)
          {
            printf(" %s",$i)
          }
          printf("\n")
        }'`
      $echo $lastinstall
      $echo "        First:  $firstinstall" >> $SP_SUMMARY
      $echo "        Last:   $lastinstall" >> $SP_SUMMARY

      up2date=0
      if [ `cat /var/log/up2date* 2> /dev/null | \
            grep -c 'up2date successfully retrieved authentication'` -gt 0 ]
      then
        up2date=1
        $echo
        for f in `ls -r /var/log/up2date*`; do
          expand $f |
          grep 'up2date successfully retrieved authentication' < $f \
                >> ${pkglog}.2
        done
        lastupdate=`expand ${pkglog}.2 | $tail -n 1 | cut -c 1-27 | sed '
           s/^\[//
           s/][ ]*$//'`
        if [ "$lastupdate" != "" ]; then
          $echo "  RedHat up2date / yum server last contacted on \c"
          $echo $lastupdate | $awk '
            {
              wday=$1
              mon=$2
              day=$3
              time=$4
              yr=$5
              if (mon ~ /Jan/) mon="01"
              if (mon ~ /Feb/) mon="02"
              if (mon ~ /Mar/) mon="03"
              if (mon ~ /Apr/) mon="04"
              if (mon ~ /May/) mon="05"
              if (mon ~ /Jun/) mon="06"
              if (mon ~ /Jul/) mon="07"
              if (mon ~ /Aug/) mon="08"
              if (mon ~ /Sep/) mon="09"
              if (mon ~ /Oct/) mon="10"
              if (mon ~ /Nov/) mon="11"
              if (mon ~ /Dec/) mon="12"
              printf("%d-%s-%02d %s (%s)\n", yr, mon, day, time, wday)
            }'
          $echo "    based on information from /var/log/up2date*"
        fi
        rm -f ${pkglog}.2
      fi

      if [ $kmajor -ge 20618 ]; then
        if [ `ps ax | grep yum-updatesd | grep -v grep | wc -l` -gt 0 ]; then
          $echo "  \"yum\" update daemon \"yum-updatesd\" running."
        else
          $echo "  The \"yum\" update daemon \"yum-updatesd\" is NOT running."
        fi
      fi

      if [ `cat /var/log/rpmpkgs* 2> /dev/null | wc -l` -gt 0 ]; then
        if [ $up2date -eq 0 ]; then
          $echo
        fi
        $echo "  Package count history / evolution:"
        yr=`date '+%Y'`
        cmon=`date '+%m'`
        clines=0
        nfiles=`ls /var/log/rpmpkgs* | wc -l`
        nfiles=`expr $nfiles + 0`
        ix=0
        for f in `ls -r /var/log/rpmpkgs*`; do
          ix=`expr $ix + 1`
          lines=`wc -l < $f`
          lines=`expr $lines + 0`
          if [ $lines != $clines -o $ix -eq $nfiles ]; then
            if [ 1 -eq 1 ]; then
              ls -l --time-style=+%Y-%m-%d_%H:%M $f | $awk '
              {
                cnt=0
                count='$lines'
                ts=$6
                if (count != cnt)
                {
                  printf("        ")
                  printf("%s - %6d packages\n", ts, count)
                  cnt=count
                }
              }'
            else
              ls -l $f | $awk '
              {
                cnt=0
                count='$lines'
                month=$6
                curmonth='$cmon'
                day=$7
                time=""
                time=$8
                yr='$yr'
                mon="none"
                mval=6
                if (month ~ /Jan/) { mon="01"; mval=1 }
                if (month ~ /Feb/) { mon="02"; mval=2 }
                if (month ~ /Mar/) { mon="03"; mval=3 }
                if (month ~ /Apr/) { mon="04"; mval=4 }
                if (month ~ /May/) { mon="05"; mval=5 }
                if (month ~ /Jun/) { mon="06"; mval=6 }
                if (month ~ /Jul/) { mon="07"; mval=7 }
                if (month ~ /Aug/) { mon="08"; mval=8 }
                if (month ~ /Sep/) { mon="09"; mval=9 }
                if (month ~ /Oct/) { mon="10"; mval=10 }
                if (month ~ /Nov/) { mon="11"; mval=11 }
                if (month ~ /Dec/) { mon="12"; mval=12 }
                if (count != cnt)
                {
                  if (mon == "none")
                  {
                    mon=month
                    printf("        ")
                    printf("%s %02d %s - %6d packages\n", mon, day, time, count)
                  }
                  else
                  {
                    if (mval > curmonth)
                      yr -= 1
                    printf("        ")
                    printf("%d-%s-%02d %s - %6d packages\n",
                           yr, mon, day, time, count)
                  }
                  cnt=count
                }
              }'
            fi
          fi
          clines=$lines
        done
        $echo "    based on information from /var/log/rpmpkgs*"
      fi
    fi
    if [ $showpkg -ne 0 ]; then

      cat > $pkglog << %

===============================================================================
 List of installed Linux packages (reverse chronological order):
-------------------------------------------------------------------------------

%
      cat ${pkglog}.chr >> $pkglog

      if [ -s ${pkglog}.alpha ]; then
        cat >> $pkglog << %


===============================================================================
 List of installed Linux packages (alphabetical order):
-------------------------------------------------------------------------------

%
        cat ${pkglog}.alpha >> $pkglog
      fi
      cat >> $pkglog << %

===============================================================================
                       (end of "$wrappercmd" output)
===============================================================================

%
      dotrailer=0
    fi
  fi

  #==========
  # RHEL 3.x
  #==========

  if [ $rh3 -ne 0 ]; then

    ##### INSERT RHEL 3 SPECIFIC OS / PACKAGE CHECKS HERE #####

    if [ `$echo $pcmodel | grep -ic 'OptiPlex.*270'` -eq 1 ]; then

      #----------------------------------------
      # Dell OptiPlex GX270, RHEL 3.0 standard
      #----------------------------------------
      if [ $supported_os -eq 1 -a $rh30 -eq 1 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL 3.0 operating environment as
supplied by Agilent for the Dell OptiPlex GX270. With this operating
environment you are lagging behind current RedHat Linux versions by two
generations. Installing OS updates by downloading RPM packages from RedHat
(via a RedHat support agreement) might appear like one option to update to
more recent levels and higher security - however, from the point-of-view of
getting support from Agilent this is a bad idea: it is hard enough to provide
support for systems running under RHEL 3 (most of our systems are now running
RHEL 4.3 or higher) - plus, installing RHEL updates currently still falls
outside of the official Agilent support policy. On the other hand, the Dell
OptiPlex GX270 does not support the 64-bit version of current RHEL versions
(which are required to run the latest versions of VnmrJ), therefore the
author's recommendation is to upgrade to a new PC (such as the ${current_pc}),
${cur_rhel} and the latest compatible version of VnmrJ, see the other
recommendations on this topic.

%

      #---------------------------------------
      # Dell OptiPlex GX270, non-supported OS
      #---------------------------------------
      else
        numrec=`expr $numrec + 1`
        cat >> ${SP_REC}.os << %
You appear to be running an upgraded or otherwise non-standard installation of
the RHEL 3.x operating environment on your Dell OptiPlex GX270. There are
several issues about this:
 - with this operating environment you are lagging behind current RedHat Linux
   versions by two generations.
 - it is increasingly difficult for Agilent to provide support in the case of
   problems with this OS, as most of our systems are now running RHEL 4.3 or
   higher, even more so because
 - even though installing OS updates by downloading RPM packages from RedHat
   (e.g., via RedHat support agreement) might appear like one option to update
   to more recent levels and higher security, this still falls outside of
   The official Agilent support policy.
%
        fmt --width=79 >> ${SP_REC}.os << %
However, the Dell OptiPlex GX270 does not support the 64-bit version of
current RHEL versions (which are required to run the latest versions of
VnmrJ), therefore the author's recommendation is to upgrade to a new PC (such
as the ${current_pc}), ${cur_rhel} and the latest compatible version of VnmrJ,
see the other recommendations on this topic.

%
      fi

    elif [ `$echo $pcmodel | grep -ic 'Precision.*370'` -eq 1 ]; then

      #----------------------------------------
      # Dell Precision 370n, RHEL 3.2 standard
      #----------------------------------------
      if [ $supported_os -eq 1 -a $rh32 -eq 1 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL 3.2 operating environment as
supplied by Agilent for the Dell Precision 370n. With this operating
environment you are lagging behind current RedHat Linux versions by two
generations. Installing OS updates by downloading RPM packages from RedHat
(via a RedHat support agreement) might appear like one option to update to
more recent levels and higher security - however, from the point-of-view of
getting support from Agilent this is a bad idea: it is hard enough to provide
support for systems running under RHEL 3.x (most of our systems are
now running RHEL 4.3 or higher) - plus, installing RHEL updates currently
still falls outside of the official Agilent support policy.

Note that RHEL 3.x is no longer supported by current VnmrJ releases. On the
other hand, the Dell Precision 370n supports RHEL 4.3 which would permit
running software up to the latest compatible version of VnmrJ, hence upgrading
to RHEL 4.3 looks like a viable option for your system. Also, even though -
as stated above - RHEL updating is currently not officially supported by
Agilent, the author and users have had no problems with running VnmrJ in
upgraded versions of RHEL 4.3, up to RHEL 4.9, with the only exception of
occasional issues with installing update packages (particularly the initial
installation of the bulk of the update), as discussed in Agilent MR News
2008-10-01, see
%
        cat >> ${SP_REC}.os << %
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx

%

      #---------------------------------------
      # Dell Precision 370n, non-supported OS
      #---------------------------------------
      else
        numrec=`expr $numrec + 1`
        cat >> ${SP_REC}.os << %
You appear to be running an upgraded or otherwise non-standard installation of
the RHEL 3.x operating environment on your Dell Precision 370n. There are
several issues about this:
 - with this operating environment you are lagging behind current RedHat Linux
   versions by two generations.
 - it is increasingly difficult for Agilent to provide support in the case of
   problems with this OS, as most of our systems are now running RHEL 4.3 or
   higher, even more so because
 - even though installing OS updates by downloading RPM packages from RedHat
   (e.g., via RedHat support agreement) might appear like one option to update
   to more recent levels and higher security, this still falls outside of
   the official Agilent support policy.
However, the Dell Precision 370n does support RHEL 4.3 in 64-bit mode, which
would permit running software up to the latest compatible version of VnmrJ.
Upgrading to RHEL 4.3 therefore looks like a viable option for your system.
Also, even though (as stated above) RHEL updating is currently not officially
supported by Agilent, the author and users have had no problems with running
VnmrJ in upgraded versions of RHEL 4.3, up to RHEL 4.9, with the only
exception of occasional issues with installing update packages (particularly
the initial installation of the bulk of the update), as discussed in Agilent
MR News 2008-10-01, see
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx

%
      fi

    elif [ $supported_os -eq 1 ]; then

      #-------------------------------------
      # unknown platform, standard RHEL 3.0
      #-------------------------------------
      if [ $rh30 -eq 1 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL 3.0 operating environment as
supplied by Agilent for the Dell OptiPlex GX270. With this operating system
you are lagging behind current RHEL versions by two generations.  Installing
OS updates by downloading RPM packages from RedHat (via a RedHat support
agreement) might appear like one option to update to more recent levels and
higher security - however, from the point-of-view of getting support from
Agilent this is a bad idea: it is hard enough to provide support for systems
running under RHEL 3 (most of our systems are now running RHEL 4.3 & up) -
plus, installing RHEL updates currently still falls outside of the official
Agilent support policy. On the other hand, note that if your PC (just as the
Dell OptiPlex GX270) does NOT support does not support the 64-bit version of
current RHEL versions (which are needed to run the latest versions of VnmrJ),
the author's recommendation is to upgrade to a new PC (such as the
${current_pc}), ${cur_rhel} and the latest compatible version of VnmrJ, see
the other recommendations on this topic.

%

      #-------------------------------------
      # unknown platform, standard RHEL 3.2
      #-------------------------------------
      else
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL 3.2 operating environment as
supplied by Agilent for the Dell Precision 370n. With this operating system
you are lagging behind current RedHat Linux versions by two generations.
Installing OS updates by downloading RPM packages from RedHat (via a RedHat
support agreement) might appear like one option to update to more recent
levels and higher security - however, from the point-of-view of getting
support from Agilent this is a bad idea: it is hard enough to provide support
for systems running under RHEL 3.x (most of our systems are now running RHEL
4.3 or higher) - plus, installing RHEL updates currently still falls outside
of the official Agilent support policy.

Note that RHEL 3.x is no longer supported by current VnmrJ releases. On the
other hand, your computer supports RHEL 4.3 in 64-bit mode, which would permit
running software up to the latest applicable version of VnmrJ.  Upgrading to
RHEL 4.3 therefore looks like a viable option for your system.  Also, even
though (as stated above) RHEL updating is currently not officially supported
by Agilent, the author and users have had no problems with running VnmrJ in
upgraded versions of RHEL 4.3, up to RHEL 4.9, with the only exception of
occasional issues with installing update packages (particularly the initial
installation of the bulk of the update), as discussed in Agilent MR News
2008-10-01, see
%
        cat >> ${SP_REC}.os << %
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx

%
      fi

    #-----------------------------------------
    # unknown platform, non-standard RHEL 3.0
    #-----------------------------------------
    elif [ $rh30 -eq 1 ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL 3.0 operating environment as
supplied by Agilent or equivalent. With this operating environment you are
lagging behind current RedHat Linux versions by two generations. Installing OS
updates by downloading RPM packages from RedHat (via a RedHat support
agreement) might appear like one option to update to more recent levels and
higher security - however, from the point-of-view of getting support from
Agilent this is a bad idea: it is hard enough to provide support for systems
running under RHEL 3 (most of our systems are now running RHEL 4.3 or higher),
plus, installing RHEL updates currently still falls outside of the official
Agilent support policy.

Note that RHEL 3.x is no longer supported by current VnmrJ releases. Also,
note that if your PC (just as the Dell OptiPlex GX270) does NOT support the
64-bit version of current RHEL versions (which are required to run the latest
versions of VnmrJ), the author's recommendation is to upgrade to a new PC
(such as the ${current_pc}), ${cur_rhel} and the latest compatible /
applicable version of VnmrJ, see the other recommendations on this topic.

%

    #-----------------------------------------
    # unknown platform, non-standard RHEL 3.2
    #-----------------------------------------
    elif [ $rh32 -eq 1 ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL 3.2 operating environment as
supplied by Agilent for the Dell Precision 370n, or equivalent. With this
operating environment you are lagging behind current RedHat Linux versions by
two generations. Installing OS updates by downloading RPM packages from RedHat
(via a RedHat support agreement) might appear like one option to update to
more recent levels and higher security - however, from the point-of-view of
getting support from Agilent this is a bad idea: it is hard enough to provide
support for systems running under RHEL 3.x (most of our systems are now
running RHEL 4.3 or higher) - plus, installing RHEL updates currently still
falls outside of the official Agilent support policy.

Note that RHEL 3.x is no longer supported by current VnmrJ releases. On the
other hand, your computer most likely supports RHEL 4.3 in 64-bit mode, which
would permit running software up to the latest compatible version of VnmrJ.
Upgrading to RHEL 4.3 therefore looks like a viable option for your system.
Also, even though - as stated above - RHEL updating is currently not
officially supported by Agilent, the author and users have had no problems
with running VnmrJ in upgraded versions of RHEL 4.3, up to RHEL 4.9, with the
only exception of occasional issues with installing update packages
(particularly the initial installation of the bulk of the update), as
discussed in Agilent MR News 2008-10-01, see
%
      cat >> ${SP_REC}.os << %
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx

%

    #-----------------------------------------
    # unknown platform, non-standard RHEL 3.x
    #-----------------------------------------
    else
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
You appear to be running a version of the RHEL 3 operating environment, as
suitable for running an early version of VnmrJ for Linux. With this operating
environment you are lagging behind current RedHat Linux versions by two
generations. Installing OS updates by downloading RPM packages from RedHat
(via a RedHat support agreement) would not get you beyond RHEL 3.x.
Note that RHEL 3.x is no longer supported by current VnmrJ releases. Also,
note that if your PC (just as the Dell OptiPlex GX270) does NOT support the
64-bit version of current RHEL versions (which are required to run the latest
versions of VnmrJ), the author's recommendation is to upgrade to a new PC
(such as the ${current_pc}), ${cur_rhel} and the latest compatible /
applicable version of VnmrJ, see the other recommendations on this topic.

%
    fi


  #==========
  # RHEL 4.x
  #==========

  elif [ $rh4 -ne 0 ]; then

    #---------------------------------------------
    # Check for a VnmrJ-specific X.11 legacy file
    #---------------------------------------------

    cat << %
  -----------------------------------------------------------------------------
  Checking for an X.11 legacy directory "/usr/X11R6/include/X11/bitmaps"
  that is required for some VnmrJ components such as the AutoTest GUI:
%
    if [ \! -d /usr/X11R6/include/X11/bitmaps ]; then
      supported_os=0
      missinglegacy=`expr $missinglegacy + 1`
      fmt --width=79 << %
    NOTE: The directory "/usr/X11R6/include/X11/bitmaps" is NOT installed;
    some VnmrJ components such as the AutoTest GUI will NOT work (this is
    typically relevant on spectrometer hosts only).
%
      if [ -d $HOME/forX11/bitmaps ]; then
        fmt --width=79 << %
    The missing files have been placed in "$HOME/forX11"; you can install
    these (as root only), using the commands
%
        if [ -d /usr/X11R6/include/X11 ]; then
          cat << %
        cd $HOME/forX11
        su
        cp -r bitmaps /usr/X11R6/include/X11
        exit
%
        else
          cat << %
        cd $HOME/forX11
        su
        mkdir -p /usr/X11R6/include/X11
        cp -r bitmaps /usr/X11R6/include/X11
        exit
%
        fi
      else
        fmt --width=79 << %
    The missing component is available ONLY with an installation of RHEL 4.x
    from the installation / recovery DVD supplied by Agilent.
%
      fi
    else
      $echo "    X.11 legacy directory \"/usr/X11R6/include/X11/bitmaps\" is OK"
    fi


    ##### INSERT MORE RHEL 4 SPECIFIC OS / PACKAGE CHECKS HERE #####


    if [ `$echo $pcmodel | grep -ic 'Dell.*Precision.*3[789]0'` -eq 1 ]; then
      if [ $supported_os -eq 1 ]; then

        #--------------------------------------------
        # Dell Precision 370/380, supported RHEL 4.0
        #--------------------------------------------
        if [ "$rhv" = "4.0" ]; then
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL $rhv operating environment as
supplied by Agilent for the ${pcmodel}. Note that if you wanted to run the
current versions of VnmrJ you would at least need to upgrade to RHEL 4.3. This
can be achieved either by updating through a RedHat maintenance agreement, or
by installing RHEL 4.3 from the installation / recovery DVD supplied by
Agilent. The latter in general is the easier and safer option.

%

        #------------------------------------------------
        # Dell Precision 370/380/390, supported RHEL 4.3
        #------------------------------------------------
        else
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL $rhv operating environment as
supplied by Agilent for the ${pcmodel}. With this operating environment you
may not be at the very latest OS level (such as RHEL 5.x), but this is still
fully supported, well-proven, and runs the current versions of VnmrJ - there
is no urgent reason to upgrade to ${cur_rhel} on this PC.

%
        fi

        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.os << %
Even though RHEL updating is currently not officially supported by Agilent,
the author and users have had no problems with running VnmrJ in upgraded
versions of RHEL 4.x, up to RHEL 4.9, with the only exception of occasional
issues with installing update packages (particularly the initial installation
of the bulk of the update), as discussed in Agilent MR News 2008-10-01, see
%
        cat >> ${SP_REC}.os << %
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx

%

      #----------------------------------------------------
      # Dell Precision 370/380/390, non-supported RHEL 4.x
      #----------------------------------------------------
      else
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.os << %
You appear to be running either an upgraded version of the RHEL 4.x operating
environment supplied by Agilent, or a custom installation. Even though RHEL
updating is currently not officially supported by Agilent, the author and
users have had no problems with running VnmrJ in upgraded versions of RHEL
4.x, up to RHEL 4.9, with the only exception of occasional issues with
installing update packages (particularly the initial installation of the bulk
of the update), as discussed in Agilent MR News 2008-10-01, see
%
        cat >> ${SP_REC}.os << %
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx

%
      fi
    else


      if [ $supported_os -eq 1 ]; then

        #-------------------------------------
        # unknown platform, standard RHEL 4.0
        #-------------------------------------
        if [ "$rhv" = "4.0" ]; then
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL $rhv operating environment as
supplied by Agilent, or equivalent. Note that if you wanted to run the current
versions of VnmrJ you would at least need to upgrade to RHEL 4.3.  This can be
achieved either by updating through a RedHat maintenance agreement, or by
installing RHEL 4.3 from the installation / recovery DVD supplied by Agilent.
The latter in general is the easier and safer option, provided you use a PC
model supplied by Agilent, or a PC that follows minimum requirement for RHEL
4.3 as specified by Agilent.

%

        #-------------------------------------
        # unknown platform, standard RHEL 4.3
        #-------------------------------------
        else
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL $rhv operating environment as
supplied by Agilent, or equivalent. With this operating environment you may
not be at the very latest OS level (such as RHEL 5.x), but this is still fully
supported, well-proven, and runs the current versions of VnmrJ - there is no
urgent reason to upgrade to ${cur_rhel} on this PC.

%
        fi
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.os << %
Even though RHEL updating is currently not officially supported by Agilent,
the author and users have had no problems with running VnmrJ in upgraded
versions of RHEL 4.x, up to RHEL 4.9, with the only exception of occasional
issues with installing update packages (particularly the initial installation
of the bulk of the update), as discussed in Agilent MR News 2008-10-01, see
%
        cat >> ${SP_REC}.os << %
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx

%

      #-----------------------------------------
      # unknown platform, non-standard RHEL 4.x
      #-----------------------------------------
      else
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.os << %
Strictly speaking, RHEL updating is currently not (officially) supported by
Agilent; however, the author and users have had no problems with running VnmrJ
in upgraded versions of RHEL 4.x, up to RHEL 4.9, with the only exception of
occasional issues with installing update packages (particularly the initial
installation of the bulk of the update), as discussed in Agilent MR News
2008-10-01, see
%
        cat >> ${SP_REC}.os << %
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx

%
      fi
    fi


  #==========
  # RHEL 5.x
  #==========

  elif [ $rh5 -ne 0 ]; then
    cat << %

-------------------------------------------------------------------------------
 Checking RPM Packages, Drivers and Utilities required for VnmrJ
-------------------------------------------------------------------------------
  Checking for all components of the RHEL 5.x "Developer Tools" installation
  option - the presence of the "Developer Tools" is required for running VnmrJ:
%

    # The components of the RHEL 5.x Developer Tools option are
    #   "autoconf", "automake", "automake14", "automake15", "automake16",
    #   "automake17", "binutils", "bison", "byacc", "cscope", "ctags", "cvs",
    #   "dev86", "diffstat", "dogtail", "doxygen", "elfutils", "flex", "frysk",
    #   "frysk-gnome", "gcc", "gcc-c++", "gcc-gfortran", "gdb", "gettext",
    #   "indent", "libtool", "ltrace", "make", "oprofile", "patchutils",
    #   "pfmon", "pkgconfig", "pstack", "python-ldap", "rcs",
    #   "redhat-rpm-config", "rpm-build", "splint", "strace", "subversion",
    #   "swig", "systemtap", "texinfo", "valgrind"

    missingdevtools=0
    devtoolcount=0
    missingdrs=0
    missingdrn=""
    rm -f $tmp
    for dr in \
          autoconf automake automake14 automake15 automake16 automake17 \
          binutils bison byacc cscope ctags cvs \
          dev86 diffstat dogtail doxygen elfutils expect \
          flex frysk frysk-gnome gcc gcc-c++ gcc-gfortran gdb gettext \
          indent libtool ltrace make oprofile \
          patchutils pfmon pkgconfig pstack python-ldap \
          rcs redhat-rpm-config rpm-build \
          splint strace subversion swig systemtap texinfo valgrind
    do
      showpackage $dr
      missing=$?
      if [ $missing -ne 0 ]; then
        missingdevtools=`expr $missingdevtools + $missing`
        missingdrn="$missingdrn $dr"
      else
        devtoolcount=`expr $devtoolcount + 1`
      fi
    done
    rm -f $tmp
    if [ $devtoolcount -eq 0 ] ; then
      cat << %
  The "Developer Tools" installation option was NOT selected when installing
  Linux; the missing packages can be installed by running
        yum groupinstall "Development Tools"
  as root. Once installed, this software will automatically be kept up-to-date
  when updating RHEL 5 either with "yum update" or through the "pup" GUI.
%
    elif [ $missingdevtools -gt 0 ]; then
      if [ $missingdevtools -gt 5 -o $missingdevtools -gt $devtoolcount ]; then
        cat << %
  Not all components of the "Developer Tools" installation option appear to be
  present; the missing packages are best installed by running
        yum groupinstall "Development Tools"
  as root. Alternatively, you could download and install the packages
  individually (again, as root), by running
%
      else  # (only few missing packages)
        cat << %
  Some components of the "Developer Tools" installation option appear to be
  missing; these packages can be installed by running
        yum groupinstall "Development Tools"
  as root. Alternatively, you could (as root, again) download and install the
  packages individually, by running
%
      fi
      for f in $missingdrn; do
        $echo "        yum install $f"
      done
      cat << %
  Once installed, this software will automatically be kept up-to-date when
  updating RHEL 5 either with "yum update" or through the "pup" GUI.
%
    else
      cat << %
  All components of the "Developer Tools" option appear to be present.
  These packages will automatically be kept up-to-date when updating RHEL 5
  either with "yum update" or through the "pup" GUI.
%
    fi

    cat << %
  -----------------------------------------------------------------------------
  Looking for additional Linux packages that are typically NOT included with
  "vanilla" RHEL 5.x installations, but are required for running VnmrJ:
%


    #-----------------------------------------------------------------------
    # Check on additional required RHEL 5.x libraries and drivers for VnmrJ
    #-----------------------------------------------------------------------
    # "openmotif22" yields "libXm.so.3"
    # "glibc-devel" yields "stubs-32.h" (for "seqgen")
    # "glibc-devel", "compat-libstdc++-33" and "libstdc++" may be included in
    #      the "Legacy Support Libraries" installation option
    # "rarpd", "libXmu", "libXp", "kernel-headers", & "kernel-devel": R&D info

    rm -f $tmp
    missingdrs=0
    missingdrn=""
    for dr in \
          compat-libstdc++-33 \
          glibc-devel \
          kernel-devel \
          kernel-headers \
          libstdc++ \
          libXmu \
          libXp \
          libXp-devel \
          openmotif \
          openmotif22 \
          openmotif-devel \
          rarpd \
          rsh-server \
          sharutils \
          tcl \
          tftp \
          tftp-server \
          tk \
          xinetd
    do
      showpackage $dr
      missing=$?
      if [ $missing -ne 0 ]; then
        missingdrs=`expr $missingdrs + $missing`
        missingdrn="$missingdrn $dr"
      fi
    done
    rm -f $tmp
    if [ $missingdrs -eq 0 ]; then
      cat << %
  All checked packages from the list for RHEL 5.x were found to be present.
  These packages will automatically be kept up-to-date when updating RHEL 5
  either with "yum update" or through the "pup" GUI.
%
    else
      missingdr=`expr $missingdr + $missingdrs`
      fmt --width=79 << %
  The missing components can be downloaded and installed (as root) through
  standard RedHat support, using the commands
%
      for f in $missingdrn; do
        $echo "        yum install $f"
      done
      fmt --width=79 << %
  Such standard RHEL packages will automatically be kept up-to-date when
  updating the RHEL 5 operating environment either with "yum update" or
  through the "pup" GUI.
%
    fi


    #-----------------------------------------------------------------------
    # Check on more required RHEL 5.x libraries for Adobe Reader and DOSY
    #-----------------------------------------------------------------------
    # "libidn", "compat-libf2c-34", "compat-gcc-34" (also yields "libg2c")

    cat << %
  -----------------------------------------------------------------------------
  Looking for additional Linux packages that are required for installing
  Adobe reader and for using the DOSY software under VnmrJ 3.1 & up; these
  may not be included with "vanilla" RHEL 5.x installations:
%

    rm -f $tmp
    missingdrs2=0
    missingdrn=""
    for dr in \
          libidn \
          compat-gcc-34 \
          compat-libf2c-34
    do
      showpackage $dr
      missing=$?
      if [ $missing -ne 0 ]; then
        missingdrs2=`expr $missingdrs2 + $missing`
        missingdrn="$missingdrn $dr"
      fi
    done
    rm -f $tmp
    if [ $missingdrs -eq 0 ]; then
      cat << %
  The additional checked packages for RHEL 5.x were found to be present. These
  packages will automatically be kept up-to-date when updating RHEL 5 either
  with "yum update" or through the "pup" GUI.
%
    else
      missingdr=`expr $missingdr + $missingdrs`
      fmt --width=79 << %
  The missing components can be downloaded and installed (as root) through
  standard RedHat support, using the commands
%
      for f in $missingdrn; do
        $echo "        yum install $f"
      done
      fmt --width=79 << %
  Such standard RHEL packages will automatically be kept up-to-date when
  updating the RHEL 5 operating environment either with "yum update" or
  through the "pup" GUI.
%
    fi


    #---------------------------------------------
    # Check for Adobe Acrobat Reader Installation
    #---------------------------------------------

    cat << %
  -----------------------------------------------------------------------------
%
    $echo "  Looking for Adobe Reader\c"
    rm -f $tmp
    rdrOK=0
    adrdr=`showpackage AdobeReader_enu`
    missing=$?
    if [ $missing -ne 0 ]; then
      if [ `which acroread 2> /dev/null | wc -w` -eq 0 ]; then
        $echo ": NOT FOUND in command path, no package installation:"
        $echo "$adrdr"
        missingdr=`expr $missingdr + $missing`
        rpmopt=ivh
        cat << %
  Adobe Reader is free; a version (RPM or BIN package) for RHEL 5 can be found
  by visiting the Adobe Web site at
%
      else
        $echo " - executable found in command path."
        $echo "  Getting version information from \"acroread\" executable:"
        rdrversion=`acroread -v 2>&1 | grep '\.[0-9]' | grep -v help`
        if [ "x$rdrversion" = x ]; then
          rdrversion=`acroread -version 2>&1 | grep '\.[0-9]' | grep -v help`
        fi
        if [ "x$rdrversion" = x ]; then
          rdrversion=`acroread --version 2>&1 | grep '\.[0-9]' | grep -v help`
        fi
        if [ "x$rdrversion" = x ]; then
          cat << %
    Unable to extract version information from "acroread"
%
        else
          cat << %
    acroread version $rdrversion
%
          if [ `compareversions $rdrversion $cur_reader` -eq 2 ]; then
            rpmopt=Uvh
            fmt --width=79 << %
  Adobe Reader version $rdrversion has been installed as BIN package, but
  not in the current version; to UPDATE this software visit the Adobe Web site
  at
%
          else
            rdrOK=1
            rpmopt=Uvh
            fmt --width=79 << %
  Adobe Reader has been installed as BIN (rather than RPM) package and is
  current per ${chkar}, to find FUTURE UPDATES for this software visit the
  Adobe Web site at
%
          fi
        fi
      fi
    else   # (Adobe Reader RPM package found)
      $echo "  (RPM package installation):"
      $echo "$adrdr"
      if [ `cat $tmp 2> /dev/null | grep -c '9\.[2-9]'` -eq 0 ]; then
        if [ `which acroread 2> /dev/null | wc -w` -eq 0 ]; then
          rpmopt=Uvh
          fmt --width=79 << %
  Adobe Reader is installed, but NOT FOUND in the command path - check and
  correct your PATH variable (in "~/.login"). Also, it is not installed in the
  current version; to UPDATE this software visit the Adobe Web site at
%
        else
          $echo "  Getting version information from "acroread" executable:"
          rdrversion=`acroread -v 2>&1 | grep '\.[0-9]' | grep -v help`
          if [ "x$rdrversion" = x ]; then
            rdrversion=`acroread -version 2>&1 | grep '\.[0-9]' | grep -v help`
          fi
          if [ "x$rdrversion" = x ]; then
            rdrversion=`acroread --version 2>&1 | grep '\.[0-9]' | grep -v help`
          fi
          if [ "x$rdrversion" = x ]; then
            cat << %
    Unable to extract version information from "acroread"
%
          else
            cat << %
    acroread version $rdrversion
%
            if [ `compareversions $rdrversion $cur_reader` -eq 2 ]; then
              rpmopt=Uvh
              fmt --width=79 << %
  Adobe Reader is installed, but not in the current version; to UPDATE this
  software visit the Adobe Web site at
%
            else
              rdrOK=1
              rpmopt=Uvh
              fmt --width=79 << %
  Adobe Reader has been installed as RPM package and has since been updated to
  the current version; to install FUTURE UPDATES for this software visit the
  Adobe Web site at
%
            fi
          fi
        fi
      else
        rdrOK=1
        rpmopt=Uvh
        fmt --width=79 << %
  The installed version of Adobe Reader is current per ${chkar}, to find
  FUTURE UPDATES for this software visit the Adobe Web site at
%
      fi
    fi
    if [ "$rpmopt" != "" ]; then
      if [ $rdrOK -eq 1 ]; then
        cat << %
          http://www.adobe.com/
  Under "Get Adobe Reader" you can download the current version. Install it as
  root, e.g., using
%
      else
        cat << %
        http://www.adobe.com/
  Under "Get Adobe Reader" you can download the current version (the current
  version per ${chkar} is ${cur_reader}). Install it as root, e.g., using
%
      fi
      cat << %
        chmod +x AdbeRdr${cur_reader}-1_i486linux_enu.bin
        ./AdbeRdr${cur_reader}-1_i486linux_enu.bin
  for a ".bin" package, or, if the downloaded file is in RPM package format,
  using
        rpm -$rpmopt AdbeRdr${cur_reader}-1_i486linux_enu.rpm
%
    fi
    rm -f $tmp


    #---------------------------------------------------
    # Check for Dell / NVIDIA Kernel / Graphics Drivers
    #---------------------------------------------------

    cat << %
  -----------------------------------------------------------------------------
  Looking for Dell / NVIDIA kernel driver:
%
    rm -f $tmp
    showpackage dkms
    missing=$?
    if [ $missing -ne 0 ]; then
      dkmsok=0
      missingdr=`expr $missingdr + $missing`
      cat << %
  This driver can be downloaded from the Dell Web site at
        http://linux.dell.com/dkms/
  Look for "Latest stable RPM"; this can be installed (as root) using, e.g.:
        rpm -ivh dkms-2.2.0.2-1.noarch.rpm
%
    else
      dkmsok=1
      if [ `cat $tmp 2> /dev/null | grep -c '2\.2\.0\.2-1'` -eq 0 ]; then
        cat << %
  This driver is installed, but not in the current version; to UPDATE this
  software visit the Dell Web site at
%
      else
        cat << %
  The installed version of this driver is current per ${drchknv}, to find
  FUTURE UPDATES for this software visit the Dell Web site at
%
      fi
      cat << %
        http://linux.dell.com/dkms/
  Look for "Latest stable RPM"; this can be installed (as root) using, e.g.:
        rpm -Uvh dkms-2.2.0.2-1.noarch.rpm
%
    fi
    rm -f $tmp

    if [ $dkmsok -eq 0 ]; then
      cat << %
  -----------------------------------------------------------------------------
  Looking for Dell / NVIDIA graphics driver software:
%
      grdr=""
      instgrdr=""
      grdrup2date=0
      rm -f $tmp
      # nVidia Quadro NVS 285: dell-nvidia-8756-5dkms  ???
      if [ "$graphics" = "NVIDIA Quadro FX 570" ]; then
        showpackage dell-nvidia 169.12-RHEL5-A00-dkms
        missing=$?
        if [ $missing -eq 0 ]; then
          grdr="dell-nvidia-169.12-RHEL5-A00-dkms"
          instgrdr="$grdr"
          grdrup2date=1
        fi
      else
        #showpackage dell-nvidia 14.11-dkms
        showpackage dell-nvidia 8756-5dkms
        missing=$?
        if [ $missing -eq 0 ]; then
          # grdr="dell-nvidia-14.11-dkms"
          grdr="dell-nvidia-8756-5dkms"
          instgrdr="$grdr"
          grdrup2date=1
        else
          showpackage dell-nvidia 14.11-dkms
          missing=$?
          if [ $missing -eq 0 ]; then
            grdr="dell-nvidia-14.11-dkms"
            instgrdr="$grdr"
          fi
        fi
      fi
      if [ "x$grdr" = x ]; then
        grdr="dell-nvidia-14.11-dkms"
      fi
      if [ $missing -ne 0 ]; then
        missingdr=`expr $missingdr + $missing`
        if [ "$graphics" = "NVIDIA Quadro NVS 285" ]; then
          fmt --width=79 << %
  The Dell / NVIDIA graphics driver package "$grdr" is
  recommended (rated "recommended") by Dell for PC models such as the Dell
  Precision 370, 380, or 390 running RHEL 5.x and equipped with NVIDIA Quadro
  NVS 285 graphics card.
%
        elif [ "$graphics" = "NVIDIA Quadro FX 570" ]; then
          fmt --width=79 << %
  The Dell / NVIDIA graphics driver "$grdr" is
  recommended by Dell for PC models such as the Dell OptiPlex 755 or the newer
  Dell Precision T3400 or T3500 running RHEL 5.x and equipped with NVIDIA
  Quadro FX 570 graphics card.
%
        else
          fmt --width=79 << %
  The Dell / NVIDIA graphics driver package "dell-nvidia-14.11-dkms" or higher
  is STRONGLY recommended (rated URGENT) by Dell for PC models such as the
  Dell Precision 390 running RHEL 5.x and equipped with NVIDIA Quadro NVS 285
  graphics. For Dell PC models equipped with Quadro FX 570 or higher graphics
  the equivalent, RECOMMENDED driver is "dell-nvidia-169.12-RHEL5-A00-dkms".
%
        fi
        cat << %
  The current Dell-certified graphics driver can be downloaded from Dell at
        http://www.dell.com/
  under "Support" -> "Drivers & Downloads" -> "Dell Certified Drivers". If
  your PC is a Dell OptiPlex you may need to select either the model "390",
  "T3400" or "T3500" under "Precision Desktop" (the Dell Web sites may not
  offer Linux drivers for OptiPlex PCs). It can be installed as root; on
  systems with NVIDIA Quadro FX 570 or higher graphics card use
        rpm -ivh dell-nvidia-169.12-RHEL5-A00-dkms.x86_64.rpm
  and on systems with NVIDIA Quadro NVS 285 graphics card use
        rpm -ivh dell-nvidia-8756-5dkms.A01.x86_64.rpm
%
      else
        if [ `cat $tmp 2> /dev/null | grep -ic '14\.11-dkms'` -eq 0 -a \
             `cat $tmp 2> /dev/null | grep -ic '8756-5dkms'` -eq 0 -a \
             `cat $tmp 2> /dev/null | grep -ic '169\.12-dkms'` -eq 0 ]; then
          cat << %
  This driver is installed, but not in the current version; to UPDATE this
  software visit the Dell Web site at
%
        else
          cat << %
  The installed version of this driver is current per ${drchknv}, to find
  FUTURE UPDATES for this software visit the Dell Web site at
%
        fi
        cat << %
        http://www.dell.com/
  The latest version can be found via "Support" -> "Drivers & Downloads" ->
  "Dell Certified Drivers". If your PC is a Dell OptiPlex you may need to
  select either the model "390", "T3400" or "T3500" under "Precision Desktop"
  (the Dell Web site may not feature Linux drivers for OptiPlex PCs). The
  update can be installed as root; on systems with NVIDIA Quadro NVS 285
  graphics card use
        rpm -Uvh dell-nvidia-8756-5dkms.A01.x86_64.rpm
  and on systems with NVIDIA Quadro FX 570 or higher graphics card use
        rpm -Uvh dell-nvidia-169.12-RHEL5-A00-dkms.x86_64.rpm
%
      fi
    fi

    #----------------------------------------------
    # Check for (non-Dell) NVIDIA Graphics Drivers
    #----------------------------------------------

    cat << %
  -----------------------------------------------------------------------------
  Looking for graphics driver software from NVIDIA:
%
    rm -f $tmp
    if [ `ls /usr/lib64/libnvidia-[a-z][a-z][a-z].so.[0-9]*.[0-9]* 2>/dev/null \
          | wc -l` -gt 0 ]; then
      # NVIDIA dgraphics driver installed
      nvidiadriver=`ls /usr/lib64/libnvidia-[a-z][a-z][a-z].so.[0-9]*.[0-9]* | \
          sed 's/\.so\./ /' | $awk '{print $NF}' | sort -bdfu | $tail -n 1`
      $echo "    NVIDIA-Linux-x86_64 driver version: $nvidiadriver"
      nvinstdate=`ls -ltr --time-style=+%Y-%m-%d_%H:%M:%S \
          /usr/lib64/libnvidia-[a-z][a-z][a-z].so.[0-9]*.[0-9]* | $tail -n 1 | \
          $awk '{print $(NF-1)}'`
      $echo "      installed on $nvinstdate"
      if [ "$instgrdr" != "" ]; then
        # Dell-NVIDIA driver installed
        dtfmt=$LC_TIME
        LC_TIME=POSIX
        dnvinstdt= \
            `rpm --query dell-nvidia --queryformat '%{INSTALLTIME:date}\n'`
        LC_TIME=$dtfmt
        dnvinstdt=`$echo $dnvinstdt | sed 's/Jan /01 /
          s/Feb[a-z]* /02 /
          s/Mar[a-z]* /03 /
          s/Apr[a-z]* /04 /
          s/May /05 /
          s/Jun[a-z]* /06 /
          s/Jul[a-z]* /07 /
          s/Aug[a-z]* /08 /
          s/Sep[a-z]* /09 /
          s/Oct[a-z]* /10 /
          s/Nov[a-z]* /11 /
          s/Dec[a-z]* /12 /'| $awk '{printf("%4d-%02d-%02d_%s\n",$5,$2,$3,$4)}'`
        lastdate=`($echo $dnvinstdt; $echo $nvinstdate) | sort | $tail -n 1`
        if [ "x$lastdate" = "x$nvinstdate" ]; then
          # NVIDIA driver was installed last
          if [ `$echo "$nvidiadriver" | grep -ic "$curnvidiadr"` -eq 0 -a \
               `($echo "$nvidiadriver"; $echo "$curnvidiadr") | sort -u | \
                head -n 1 | grep -ic "$curnvidiadr"` -eq 0 ]; then
            cat << %
  The NVIDIA graphics driver was installed after the corresponding drivers
  from Dell and therefore will override the latter; the installed NVIDIA
  driver is NOT the latest version (as per $drchknv); to download the
  current version visit the NVIDIA Web site at
        http://www.nvidia.com
  For more information see Agilent MR News 2009-07-17.
%
          else
            cat << %
  The NVIDIA graphics driver was installed on top of the graphics drivers from
  Dell and therefore will override the latter; the NVIDIA driver is current as
  of $drchknv; see Agilent MR News 2009-07-17 for more information.
%
          fi
        else
          # Dell-NVIDIA driver was installed / updated AFTER NVIDIA driver
          cat << %
  The (Dell-certified) Dell-NVIDIA graphics driver was installed or updated
  after the NVIDIA driver; this most likely overrides / deactivates the
  NVIDIA graphics driver (which is OK as long as the Dell-NVIDIA driver is
  up-to-date). To switch back to the driver from NVIDIA, you can download and
  install the current NVIDIA driver from
        http://www.nvidia.com
  as discussed in Agilent MR News 2009-07-17.
%
        fi
      elif [ `$echo "$nvidiadriver" | grep -ic "$curnvidiadr"` -eq 0 -a \
             `($echo "$nvidiadriver"; $echo "$curnvidiadr") | sort -u | \
              head -n 1 | grep -ic "$curnvidiadr"` -eq 0 ]; then
        # NVIDIA driver NOT up-to-date, no Dell-NVIDIA driver found
        fmt --width=79 << %
  The installed NVIDIA graphics driver is not the current / latest version (as
  per $drchknv); to download the current version visit the NVIDIA Web site at
%
        cat << %
        http://www.nvidia.com
  For more information see Agilent MR News 2009-07-17.
%
      else
        # NVIDIA driver UP-TO-DATE, no Dell-NVIDIA driver found
        fmt --width=79 << %
  The installed NVIDIA graphics driver is up-to-date per $drchknv; to download
  future updates visit the NVIDIA Web site at
%
        cat << %
        http://www.nvidia.com
  For more information see Agilent MR News 2009-07-17.
%
      fi
    else
      # no NVIDIA driver found
      cat << %
  No NVIDIA graphics driver installed.
%
      if [ "$instgrdr" = "" ]; then
        # no Dell-NVIDIA driver found
        fmt --width=79 << %
  Unable to locate a graphics driver for any of the graphics controllers
  supported by Agilent for VnmrJ (NVIDIA Quadro NVS 285 or Quadro FX 570); you
  are either using a non-standard graphics driver or non-standard graphics
  hardware - or you MAY still be missing a graphics driver on your system. To
  install a graphics driver you can einther install a driver from Dell (see
  above), or (easier) you can download the current graphics driver from the
  NVIDIA Web site at
%
        cat << %
        http://www.nvidia.com
  For more information see Agilent MR News 2009-07-17.
%
      elif [ $grdrup2date -eq 0 ]; then
        # Dell-NVIDIA driver NOT up-to-date
        fmt --width=79 << %
  The installed Dell-certified NVIDIA graphics driver is not up-to-date; to
  switch to a current graphics driver you can either install an updated
  version from Dell (see above), or you could download and install the current
  Linux graphics driver from NVIDIA at
%
        cat << %
        http://www.nvidia.com
  For more information see Agilent MR News 2009-07-17.
%
    # else
    #   # Dell-NVIDIA driver UP-TO-DATE
    #   $echo
      fi
    fi

    #-------------------------------------
    # Check for GSL / GSL-Devel libraries
    #-------------------------------------

    cat << %
  -----------------------------------------------------------------------------
  Looking for the "gsl" & "gsl-devel" (GNU Scientific Libraries for numerical
  analysis) packages; these packages would be needed for recompiling the VnmrJ
  software itself and have been included with RHEL 5.1 as delivered by Agilent
  for VnmrJ versions up to VnmrJ 2.3 - however, they are NOT usually needed
  for RUNNING / USING any version of VnmrJ:
%
    rm -f $tmp
    for dr in gsl gsl-devel; do
      showpackage $dr
      missing=$?
    done
    if [ $missing -ne 0 ]; then
      opt_missingdr=$missing
      cat << %
  The "gsl" and "gsl-devel" packages are OPTIONAL and are NOT be required to
  run VnmrJ; they can be found by searching RPM archive sites such as
        http://rpm.pbone.net/
  The packages used with VnmrJ should be at least version 1.10-4; the above
  site includes versions for RHEL 5 (the packages for Fedora Core 11, 12, etc.
  ("fc11", "fc12", etc.) may be used as well. To find the current version do a
  search for "gsl-1.12" and "gsl-devel-1.12". These packages can be installed
  with, e.g.,
        rpm -ivh gsl-1.12-6.el5.x86_64.rpm
        rpm -ivh gsl-1.12-6.el5.i386.rpm
        rpm -ivh gsl-devel-1.12-6.el5.x86_64.rpm
        rpm -ivh gsl-devel-1.12-6.el5.i386.rpm
  The current version appears to be 1.12-6 or higher, for RHEL 5; this works
%
      if [ `$echo $rhv | grep -c '5\.[4-9]'` -gt 0 ]; then
        cat << %
  OK with RHEL 5.5.
%
      else
        cat << %
  OK with RHEL 5.5; RHEL 5.3 or older you may have dependency issues - in this
  case you need to install an earlier version such as 1.12-1.
%
      fi
    else
      if [ `cat $tmp 2> /dev/null | egrep -ic \
             '1\.1[2-9]-[6-9]\.[ef][lc]|1\.1[2-9]-[1-9][0-9]\.[ef][lc]'` \
             -eq 0 ]; then
        cat << %
  The drivers are installed, but not in the current version; to UPDATE this
  software visit
%
      else
        cat << %
  The installed version of this driver is current per ${drcheck}, to find
  FUTURE UPDATES for this software visit
%
      fi
      cat << %
        http://rpm.pbone.net/
  The packages used with VnmrJ should be at least version 1.10-4; the above
  site includes versions for RHEL 5 (the packages for Fedora Core 11, 12, etc.
  ("fc11", "fc12", etc.) may be used as well. To find the current version do a
  search for "gsl-1.12" and "gsl-devel-1.12". These packages can be installed
  with, e.g.,
        rpm -Uvh gsl-1.12-6.el5.x86_64.rpm
        rpm -Uvh gsl-1.12-6.el5.i386.rpm
        rpm -Uvh gsl-devel-1.12-6.el5.x86_64.rpm
        rpm -Uvh gsl-devel-1.12-6.el5.i386.rpm
  The current version appears to be 1.12-6 or higher, for RHEL 5; this works
%
      if [ `$echo $rhv | grep -c '5\.[5-9]'` -gt 0 ]; then
        cat << %
  OK with RHEL 5.5.
%
      else
        cat << %
  OK with RHEL 5.5; RHEL 5.3 or older you may have dependency issues - in this
  case you need to install an earlier version such as 1.12-1.
%
      fi
    fi
    rm -f $tmp


    #----------------------------------
    # Tcl Shared Library Compatibility
    #----------------------------------

    cat << %
  -----------------------------------------------------------------------------
  Checking version of installed Tcl/Tk shared libraries:
%
    cd /usr/lib
    libdir=lib
    if [ -h libtcl8.3.so ]; then
      $echo "    Shared library \"/usr/lib/libtcl8.3.so\" (symlink) is present."
    elif [ -f libtcl8.3.so ]; then
      $echo "    Shared library file \"/usr/lib/libtcl8.3.so\" is present."
    else
      supported_os=0
      missinglib=`expr $missinglib + 1`
      curlib=`ls libtcl8.[4-9][0-9]*.so 2> /dev/null | $tail -n 1`
      if [ "$curlib" = "" ]; then
        curlib=`ls ../lib64/libtcl8.[4-9][0-9]*.so 2> /dev/null | $tail -n 1`
        if [ "$curlib" != "" ]; then
          libdir=lib64
          curlib=`basename $curlib`
        else
          curlib=libtcl8.4.so
        fi
      fi
      if [ $libdir = lib64 ]; then
        missingdr=`expr $missingdr + 1`
        cat << %
    WARNING: Shared library "/usr/lib/libtcl8.3.so" NOT available; this may
    cause VnmrJ Tcl/Tk utilities to fail. In order to resolve this, you MUST
    FIRST REMOVE install the installed 64-bit "Tcl" package as root, using
        yum remove tcl
    then re-download and install the Tcl libraries, using
        yum install tcl
    THEN perform the following steps to make Tcl work within VnmrJ:
        su
        cd /usr/lib
        ln -s $curlib libtcl8.3.so
%
      elif [ \! -f $curlib -a \! -h $curlib ]; then
        missingdr=`expr $missingdr + 1`
        cat << %
    WARNING: Shared library "/usr/lib/libtcl8.3.so" NOT available; this may
    cause VnmrJ Tcl/Tk utilities to fail. In order to resolve this, you MUST
    FIRST install the "Tcl" package as root, using
        yum install tcl
    THEN perform the following steps to make Tcl work within VnmrJ:
        su
        cd /usr/lib
        ln -s $curlib libtcl8.3.so
%
      else
        cat << %
    WARNING: Shared library "/usr/lib/libtcl8.3.so" NOT available; this may
    cause VnmrJ Tcl/Tk utilities to fail. As root, perform the following steps
    to resolve this Tcl(/Tk) library issue:
        su
        cd /usr/lib
        ln -s $curlib libtcl8.3.so
%
      fi
    fi


    #---------------------------------
    # Tk Shared Library Compatibility
    #---------------------------------

    libdir=lib
    if [ -h libtk8.3.so ]; then
      $echo "    Shared library \"/usr/lib/libtk8.3.so\" (symlink) is present."
    elif [ -f libtk8.3.so ]; then
      $echo "    Shared library file \"/usr/lib/libtk8.3.so\" is present."
    else
      supported_os=0
      missinglib=`expr $missinglib + 1`
      curlib=`ls libtk8.[4-9][0-9]*.so 2> /dev/null | $tail -n 1`
      if [ "$curlib" = "" ]; then
        curlib=`ls ../lib64/libtk8.[4-9][0-9]*.so 2> /dev/null | $tail -n 1`
        if [ "$curlib" != "" ]; then
          libdir=lib64
          curlib=`basename $curlib`
        else
          curlib=libtk8.4.so
        fi
      fi
      if [ $libdir = lib64 ]; then
        missingdr=`expr $missingdr + 1`
        cat << %
    WARNING: Shared library "/usr/lib/libtk8.3.so" NOT available; this may
    cause VnmrJ Tcl/Tk utilities to fail. In order to resolve this, you MUST
    FIRST REMOVE install the installed 64-bit "Tk" package as root, using
        yum remove tk
    then re-download and install the Tk libraries, using
        yum install tk
    THEN perform the following steps to make (Tcl/)Tk work within VnmrJ:
        su
        cd /usr/lib
        ln -s $curlib libtk8.3.so
%
      elif [ \! -f $curlib -a \! -h $curlib ]; then
        missingdr=`expr $missingdr + 1`
        cat << %
    WARNING: The shared library "/usr/lib/libtk8.3.so" is NOT available; this
    may cause VnmrJ Tcl/Tk utilities to fail. In order to resolve this, you
    MUST FIRST install the "Tk" package as root, using
        yum install tk
    THEN perform the following steps, to make (Tcl/)Tk work within VnmrJ:
        su
        cd /usr/lib
        ln -s $curlib libtk8.3.so
%
      else
        cat << %
    WARNING: The shared library "/usr/lib/libtk8.3.so" is NOT available; this
    may cause VnmrJ Tcl/Tk utilities to fail. As root, perform the following
    steps to resolve this Tcl/Tk library issue:
        su
        cd /usr/lib
        ln -s $curlib libtk8.3.so
%
      fi
    fi


    #----------------------------------------------
    # Check for libXm Shared Library Compatibility
    #----------------------------------------------

    cat << %
  -----------------------------------------------------------------------------
  Checking for other shared libraries, likely required for VnmrJ to work:
%
    cd /usr/lib
    if [ -h libXm.so.3 ]; then
      $echo "    Shared library \"/usr/lib/libXm.so.3\" (symlink) is present."
    elif [ -f libXm.so.3 ]; then
      $echo "    Shared library file \"/usr/lib/libXm.so.3\" is OK."
    else
      supported_os=0
      missinglib=`expr $missinglib + 1`
      if [ `ls libXm.* 2> /dev/null | wc -l` -eq 0 ]; then
        missingdr=`expr $missingdr + 1`
        cat << %
    WARNING: The shared library "/usr/lib/libXm.so.3" is NOT available. This
    may cause VnmrJ versions up to VnmrJ 2.2D / VnmrJ 2.3A to fail (start-up
    stops at "Initializing"). In order to resolve this, you MUST FIRST install
    the "openmotif" and "openmotif22" packages mentioned above.
%
      else
        cat << %
    WARNING: The shared library "/usr/lib/libXm.so.3" is NOT available. This
    is likely to cause VnmrJ versions up to VnmrJ 2.2D / VnmrJ 2.3A to fail
    (start-up stops at "Initializing").
%
      fi
      curlib=`(find * -prune -name 'libXm.so.4*' -a -type f; \
          find * -prune -name 'libXm.so.3*' -a -type f) | $tail -n 1`
      if [ x"$curlib" = x ]; then
        cat << %
    IF YOU HAVE PERFORMED THE ABOVE STEPS, and VnmrJ still fails you may try
    the following steps (as root) to correct this issue:
        su
        cd /usr/lib
        ln -s libXm.so.X.Y.Z libXm.so.3
    where "libXm.so.X.Y.Z" is an existing "libXm" library such as
    "libXm.so.4.0.1" or preferably a version 3 of this library, such as
    "libXm.so.3.0.2".
%
      else
        cat << %
    IF YOU HAVE PERFORMED THE ABOVE STEPS, and VnmrJ still fails you may try
    the following steps (as root) to correct this issue:
        su
        cd /usr/lib
        ln -s $curlib libXm.so.3
%
      fi
    fi

    cd $wd


    #---------------------------------------------
    # Check for a VnmrJ-specific X.11 legacy file
    #---------------------------------------------

    cat << %
  -----------------------------------------------------------------------------
  Checking for an X.11 legacy directory "/usr/X11R6/include/X11/bitmaps"
  that is required for some VnmrJ components such as the AutoTest GUI:
%
    if [ \! -d /usr/X11R6/include/X11/bitmaps ]; then
      supported_os=0
      missinglegacy=`expr $missinglegacy + 1`
      fmt --width=79 << %
    NOTE: The directory "/usr/X11R6/include/X11/bitmaps" is NOT installed;
    some VnmrJ components such as the AutoTest GUI will NOT work (this is
    typically relevant on spectrometer hosts only).
%
      if [ -d $HOME/forX11/bitmaps ]; then
        fmt --width=79 << %
    The missing files have been placed in "$HOME/forX11"; you can install
    these (as root only), using the commands
%
        if [ -d /usr/X11R6/include/X11 ]; then
          cat << %
        cd $HOME/forX11
        su
        cp -r bitmaps /usr/X11R6/include/X11
        exit
%
        else
          cat << %
        cd $HOME/forX11
        su
        mkdir -p /usr/X11R6/include/X11
        cp -r bitmaps /usr/X11R6/include/X11
        exit
%
        fi
      else
        fmt --width=79 << %
    The missing component is available ONLY with an installation of RHEL 5.1
    from the installation / recovery DVD supplied by Agilent.
%
      fi
    else
      $echo "    X.11 legacy directory \"/usr/X11R6/include/X11/bitmaps\" is OK"
    fi

    ########### INSERT MORE RHEL 5 STUFF HERE ###########

    if [ $missingdr -gt 0 ]; then
      numrec=`expr $numrec + 1`
      supported_os=0
      fmt --width=79 >> ${SP_REC}.os << %
Your RHEL $rhv installation appears to lack some drivers and packages that
are almost certainly required for running VnmrJ, see above for details.

%

    elif [ $opt_missingdr -gt 0 ]; then
      numrec=`expr $numrec + 1`
      supported_os=0
      fmt --width=79 >> ${SP_REC}.os << %
Your RHEL $rhv installation appears to lack some drivers and packages
that MAY be required for running VnmrJ - see above for details.

%
    fi

    if [ $missinglib -gt 0 ]; then
              numrec=`expr $numrec + 1`
      supported_os=0
      fmt --width=79 >> ${SP_REC}.os << %
Your RHEL $rhv installation appears to lack some shared Linux libraries that
are required to run some VnmrJ components / utilities, see above for details.

%
    fi


    #---------------------------------------------------------------
    # Alert about potential mis-settings in "sudoers" configuration
    #---------------------------------------------------------------

    if [ $supported_os -eq 0 ]; then
      cat << %

  If the required drivers are all installed, but you are still experiencing
  problems with the VnmrJ administration ("vnmrj adm") software, first make
  sure the "sudoers" setup is correct: as root, type "visudo" and make sure
  the lines setting "requiretty" and "env_reset" (probably lines 56 and 58)
  are commented out - they should read
        #Defaults    requiretty
  and
        #Defaults    env_reset
  If this does not correct the "vnmrj adm" issue, as root, call the command
        $vnmrsystem/bin/sudoins
%
    fi

    #-----------------------------------------------------------
    # non-standard RHEL 5.x, general OS install recommendations
    #-----------------------------------------------------------
    if [ $supported_os -eq 0 ]; then
      fmt --width=79 << %

  The above checks are NOT comprehensive; they assume that the RHEL 5.x
  installation was AT LEAST based on the DEFAULT RedHat PACKAGE SELECTION.
  VnmrJ in addition requires the "Developer Tools" which are checked for in
  the section above. The following additional components are recommended:
%
      cat << %
   - Gnome Desktop
   - System Tools
   - Legacy Support Libraries
  In addition to that, you may want to add the "Office Productivity" suite on
  systems that receive e-mails that might include MS Office (MS Word, MS
  Excel, MS PowerPoint) enclosures or need to handle such MS Windows data.
  -----------------------------------------------------------------------------
  ATTENTION: No check is performed for the presence of packages / components
             that were DE-SELECTED from the default RedHat package selection!
%
    fi

    #--------------------------------------------------
    # non-standard RHEL 5.x or VnmrJ not installed yet
    #--------------------------------------------------
    if [ $supported_os -eq 0 -a \! -h $vnmrsystem ]; then
      if [ `cat /etc/auto.misc | grep '^[ ]*cd' | grep -i iso9660 | \
            tr '[=:(,]' ' ' | grep -cw exec` -ne 0 ]; then
        fmt --width=79 << %
  On your system, "/etc/auto.misc" appears to have been modified in order to
  allow the execution of programs (scripts, binary executables) directly off
  the auto-mounted media; this DEFEATS a RHEL $rhv security feature, but
  avoids an issue with installing VnmrJ directly off the software media. For
  more information see Agilent MR News 2009-01-29.
%
      else
        cat << %
  -----------------------------------------------------------------------------
  Note that upon inserting media such as a VnmrJ software DVD or CD, in Linux
  (RHEL 5.1 and newer), such media are automatically mounted with "noexec"
  permission, preventing the execution of installation software (such as the
  "load.nmr" script) on these media. This is a security feature and should NOT
  be altered. The simple solution for installing VnmrJ directly off such media
  consists in UNmounting the DVD or CD, and to RE-mount it manually. As root,
  first type
        mount | grep noexec
  in a terminal and check for the device name or the directory name under
  which the DVD or CD is mounted (e.g.: "/dev/cdrom", mounted on a directory
  "/media/VnmrJ_23A"). Now, un-mount and re-mount the disk (in the first
  command you may also use the name of the mount directory as argument):
        umount /dev/cdrom
        mkdir -p /media/cdrecorder
        mount /dev/cdrom /media/cdrecorder
  Installation of VnmrJ off the DVD or CD should now work. For information on
  this topic see also Agilent MR News 2009-01-29.
%
      fi
    fi

    #-------------------
    # standard RHEL 5.1
    #-------------------
    if [ $supported_os -eq 1 ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
You appear to be running the original RHEL $rhv operating environment as
supplied or preinstalled by Agilent, or an exact equivalent. Note that at this
point it is NOT recommended to install updates from RedHat for this RHEL
release - not just because this falls outside of the current, official Agilent
support policy, but more so because this would upgrade your OS to RHEL 5.4,
and there are currently some known issues with VnmrJ under RHEL 5.2 & higher
(e.g., with "$vnmrsystem/bin/setacq" and "/vnmr/bin/execkillacqproc", see the
bug report "acqproc.j2201" for a workaround).

%

    #-----------------------
    # non-standard RHEL 5.x
    #-----------------------
    elif [ `compareversions $rhv 5.3` -eq 2 ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
You appear to be running an updated version of the RHEL 5.1 operating system
supplied by Agilent, or a custom installation of either RHEL 5.1 or RHEL 5.2;
note that at this point such installations are NOT included in the official
Agilent support policy - plus, there are currently some known issues with
VnmrJ under RHEL 5.2 & higher (the most prominent one with
"$vnmrsystem/bin/setacq" and "$vnmrsystem/bin/execkillacqproc", see the bug
report "acqproc.j2201" for a workaround), and there may be driver / setup
issues beyond what may have been reported above, which we may not be able to
help you with.

%
    else
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
You appear to be running an updated version of the RHEL 5.3 operating system
supplied by Agilent, or a custom installation of either RHEL 5.4 or RHEL 5.5;
note that at this point such installations are NOT included in the official
Agilent support policy - plus, there are currently some known issues with
VnmrJ under RHEL 5.2 & higher (the most prominent one with
"$vnmrsystem/bin/setacq" and "$vnmrsystem/bin/execkillacqproc", see the bug
report "acqproc.j2201" for a workaround), and there may be driver / setup
issues beyond what may have been reported above, which we may not be able to
help you with.

%
    fi
    if [ $supported_os -eq 0 ]; then
      if [ $missinglegacy -gt 0 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.os << %
NOTE: The directory "/usr/X11R6/include/X11/bitmaps" is NOT installed; some
VnmrJ components such as the AutoTest GUI will NOT work (this is typically
relevant on spectrometer hosts only). The missing component is available ONLY
with an installation of RHEL 5.1 from the installation / recovery DVD supplied
by Agilent.

%
      fi
      if [ `find /etc/sudoers -newer $vnmrsystem/bin/sudoins 2> /dev/null | \
            wc -l` -eq 0 -o \
           `ls -l /etc/sudoers | $awk '{print $5}'` -eq 3554 ]; then
        numrec=`expr $numrec + 1`
        cat >> ${SP_REC}.os << %
If you have problems running "vnmrj adm" (or if you haven't used "vnmrj adm"
for VnmrJ administrative tasks so far) you should verify whether the lines
        Defaults    requiretty
and
        Defaults    env_reset
%
        fmt --width=79 >> ${SP_REC}.os << %
(typically lines 56 and 58) in "/etc/sudoers" are commented out (you need to
be root to check and alter this file); if not, insert a "#" at the beginning
of these lines and re-save the file). After this, call
"$vnmrsystem/bin/sudoins" as root - this should make "vnmrj adm" function OK.

%
      fi
    fi
  fi

  if [ "$rhv" != "0.0" ]; then
    rhvn=`$echo $rhv | sed 's/\.//g'`
    if [ $rhvn -lt `$echo $rhel_pcmin | sed 's/\.//g'` ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
WARNING: RHEL $rhv is too low for this PC hardware: the minimum OS level
supported by Agilent (and VnmrJ) for the $pcmodel is RHEL $rhel_pcmin; we
STRONGLY recommend upgrading the OS to that level.

%
      rhelwarn=`expr $rhelwarn + 1`
    fi
    if [ $rhvn -lt `$echo $rhel_vjmin | sed 's/\.//g'` ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
WARNING: RHEL $rhv is too low for the installed version of VnmrJ: the minimum
OS level for $vnmrrev on the $pcmodel is RHEL $rhel_vjmin; we STRONGLY
recommend upgrading the OS to that level.

%
      rhelwarn=`expr $rhelwarn + 1`
    fi
  fi
  if [ $rhelwarn -eq 0 ]; then
    if [ $kmajor -lt $kmajor_pcmin -o \
         \( $kmajor -eq $kmajor_pcmin -a $kminor -lt $kminor_pcmin \) ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
WARNING: The Linux kernel version "${kversion}" is too low for this PC
hardware: the minimum kernel version supported by Agilent (and by the VnmrJ
software) for the $pcmodel is "$k_pcmin" (RHEL $rhel_pcmin); we STRONGLY
recommend upgrading the OS to that level.

%
      rhelwarn=`expr $rhelwarn + 1`
    fi
    if [ $kmajor -lt $kmajor_vjmin -o \
         \( $kmajor -eq $kmajor_vjmin -a $kminor -lt $kminor_vjmin \) ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.os << %
WARNING: The Linux kernel version "${kversion}" is too low for the installed
version of VnmrJ: the minimum kernel version for $vnmrrev on the $pcmodel is
"$k_vjmin" (RHEL $rhel_vjmin); we STRONGLY recommend upgrading the OS to
that level.

%
      rhelwarn=`expr $rhelwarn + 1`
    fi
  fi

### INSERT STUFF HERE
### (should add checks for RHEL and kernel support ceilings)
}
#---------------------
# END pc_ospkg()
#---------------------


###############################################################################


#----------------
# os_lang()
#----------------
os_lang() {
  cd $wd
  cat << %

-------------------------------------------------------------------------------
 Language Settings
-------------------------------------------------------------------------------
%

  rm -f $langtmp
  nvals=0
  locale=`which locale 2> /dev/null`
  if [ "$locale" = "" ]; then
    locale=`whereis -b locale | $awk '{print $NF}'`
  fi
  if [ "$locale" = "" ]; then
    $echo "  Command \"locale\" not found - checking \"/etc/sysconfig/i18n\" -"
    if [ -s /etc/sysconfig/i18n ]; then
      lang=`grep 'LANG=' < /etc/sysconfig/i18n | sed 's/"//g' | \
          $awk -F = '{print $2}'`
      if [ "$lang" != "" ]; then
        nvals=1
        echo $lang > $langtmp
      else
        $echo "    CAN'T determine language from \"/etc/sysconfig/i18n\"!"
      fi
    else
      $echo "      file not found or empty; can't evaluate language setting."
    fi
  else
    lang=""
    nvals=`$locale | grep -v '=$' | sed 's/"//g' | $awk -F = '{print $2}' | \
          sort -u | wc -l`
    if [ $nvals -gt 1 ]; then
      $echo "  Language / locale settings:"
      $locale | grep -v '=$' | sed 's/"//g' | sort -t = -k 2,2 | \
          $awk -F = 'BEGIN {
        printf("     Locale value:      Variable name:\n")
        getline
        val=$2
        printf("    %-18s %s",$2,$1)
        printf("%s\n",$2) >> "'$langtmp'"
        len = 23 + length($1)
      }
      {
        if ($2 == val)
        {
          newlen = len + 2 + length($1)
          if (newlen > 78)
          {
            printf(",\n")
            printf("                       %s",$1)
            len = 23 + length($1)
          }
          else
          {
            printf(", %s",$1)
            len = newlen
          }
        }
        else
        {
          printf("\n    %-18s %s",$2,$1)
          printf("%s\n",$2) >> "'$langtmp'"
          val = $2
          len = 23 + length($1)
        }
      }
      END {
        printf("\n")
      }'
    elif [ $nvals -eq 1 ]; then
      lang=`$locale | grep -v '=$' | sed 's/"//g' | head -n 1 | \
          $awk -F = '{print $2}'`
      $echo "  Language / locale setting:  $lang"
      $echo $lang > $langtmp
    else
      cat << %
  Could not determine language / locale settings from "locale" command,
  checking "/etc/sysconfig/i18n" instead -
%
      if [ -s /etc/sysconfig/i18n ]; then
        lang=`grep LANG= < /etc/sysconfig/i18n | sed 's/"//g' | \
            $awk -F = '{print $2}'`
        if [ "$lang" != "" ]; then
          nvals=1
          echo $lang > $langtmp
        else
          $echo "    CAN'T determine language from \"/etc/sysconfig/i18n\""
        fi
      else
        $echo "    file missing or empty, can NOT evaluate language setting."
      fi
    fi
  fi
  if [ $nvals -ne 0 ]; then
  if [ -s $langtmp ]; then
    if [ $rh4 -ne 0 ]; then
      if [ `grep -ic "en_SG\." < $langtmp` -ne 0 ]; then

        # +------------------------------------------+
        # | all language settings are en_SG (RHEL 4) |
        # +------------------------------------------+
        if [ `wc -l < $langtmp` -eq 1 ]; then
          cat << %
    All language settings on this system are set to "English(Singapore)" (most
    likely from the Linux installation using the Agilent install DVD, see the
    bug report "rhel43.j2201"). While for VnmrJ itself this works out OK, it
    will cause problems with macros, shell scripts or other software utilities
    interpreting the output of "ls -l", the contents of just about any system
    log files containing time stamps, or the default output from the Linux
    "date" command. This also defeats the recognition of text files containing
    Umlauts and other non-US characters, and it causes problems with third
    party software such as Matlab 7, as indicated in the above bug report. To
    correct the problem we recommend modifying the file "/etc/sysconfig/i18n"
    as root, from
        LANG="en_SG.UTF-8"
        SUPPORTED="ja_JP.UTF-8:ja_JP:ja:en_SG.UTF-8:en_SG:en"
        SYSFONT="latarcyrheb-sun16"
    to
        LANG="en_US"
        SUPPORTED="ja_JP.UTF-8:ja_JP:ja:en_SG.UTF-8:en_SG:en_US.UTF-8:en_US:en"
        SYSFONT="latarcyrheb-sun16"
    and rebooting the system. The alteration of first line fixes most of the
    above problems, the second line defines the options in the GUI menu
    "Applications" -> "System Settings" -> "Language".

%
            numrec=`expr $numrec + 1`
            cat >> ${SP_REC}.lang << %
WARNING: the language selected on this system is "English(Singapore)" - see
the output above for more information and a recipe for resolving potential
issues caused by this setting.

%

          # +----------------------------------------------------------+
          # | all language settings are NOT en_US, some en_SG (RHEL 4) |
          # +----------------------------------------------------------+
          elif [ `grep -ic en_US < $langtmp` -eq 0 ]; then
            cat << %
    All language settings on this system are set to "English(Singapore)" or
    settings otherwise different from "English(US)" (in parts possibly from
    the Linux installation using the Agilent install DVD, see the bug report
    "rhel43.j2201"). While for VnmrJ itself this may work, it may cause
    problems with macros, shell scripts or other utilities interpreting the
    output of "ls -l", the contents of system log / admin files containing
    time stamps, or the default output from the Linux "date" command. This may
    also defeat the recognition of text files containing Umlauts, accents and
    other non-US text characters, and it may cause problems with third party
    software such as Matlab 7, as indicated in the above bug report. To
    correct the situation we recommend modifying "/etc/sysconfig/i18n" from
        LANG="en_SG.UTF-8"
        SUPPORTED="ja_JP.UTF-8:ja_JP:ja:en_SG.UTF-8:en_SG:en"
        SYSFONT="latarcyrheb-sun16"
    to
        LANG="en_US"
        SUPPORTED="ja_JP.UTF-8:ja_JP:ja:en_SG.UTF-8:en_SG:en_US.UTF-8:en_US:en"
        SYSFONT="latarcyrheb-sun16"
    and rebooting the system. The alteration of first line fixes most of the
    above problems, the second line defines the options in the GUI menu
    "Applications" -> "System Settings" -> "Language".

%
            numrec=`expr $numrec + 1`
            cat >> ${SP_REC}.lang << %
WARNING: the language selections on this system are all "English(Singapore)"
or otherwise different from "English(US)"; see the output above for more
information and a recipe for resolving potential issues with the current
setting.

%

          # +-------------------------------------------------------+
          # | SOME language settings are en_US, some en_SG (RHEL 4) |
          # +-------------------------------------------------------+
          elif [ `grep -ic '^LANG="en_US"' < /etc/sysconfig/i18n` -eq 0 ]; then
            cat << %
    SOME language settings on this system are "English(US)", while some are
    set to "English(Singapore)". Possibly this originates from the Linux
    installation using the Agilent install DVD, see the bug report
    "rhel43.j2201"). While for VnmrJ itself non-"English(US)" settings may
    work, they may cause problems with macros, shell scripts or other software
    tools interpreting the output of "ls -l", the contents of system log files
    containing time stamps or the default output from the Linux "date"
    command. This also may defeat the recognition of text files containing
    Umlauts and other non-US text characters, and it may cause problems with
    third party software such as Matlab 7, as indicated in the above bug
    report. To correct the problem we recommend modifying the first line in
    "/etc/sysconfig/i18n" to
        LANG="en_US"
    and making sure ":en_US.UTF-8:en_US:en" is listed on the "SUPPORTED=" line
    in this file, then reboot the system. The alteration of above line fixes
    most of the problems, the second line defines the options in the GUI menu
    "Applications" -> "System Settings" -> "Language".

%
            numrec=`expr $numrec + 1`
            cat >> ${SP_REC}.lang << %
WARNING: SOME language selections on this system are "English(Singapore)" or
otherwise different from "English(US)"; see the output above for information
and a recipe for resolving potential issues caused by certain system language
settings.

%
          fi
        fi
      elif [ $rh5 -ne 0 ]; then

        # +---------------------------------------+
        # | language settings are ALL NON-English |
        # +---------------------------------------+
        if [ `grep -ic "^en_" < $langtmp` -eq 0 ]; then
          cat << %
    The language settings on this system are ALL non-English. While for VnmrJ
    itself non-"English(US)" settings may work, they may cause problems with
    macros, shell scripts or other software tools interpreting the output of
    "ls -l", the contents of system log files containing time stamps or the
    default output from the Linux "date" command. This also may defeat the
    recognition of text files containing Umlauts and other non-US characters,
    and it may cause problems with third party software such as Matlab 7, as
    indicated in the bug report "rhel43.j2201". To correct the problem
    we recommend modifying the first line in "/etc/sysconfig/i18n" to
        LANG="en_US"
    then reboot the system. Users are still able to switch to other languages
    via "Applications" -> "System Settings" -> "Language" from the GUI menu.

%
          numrec=`expr $numrec + 1`
          cat >> ${SP_REC}.lang << %
WARNING: ALL language selections on this system are values other than English.
See the output above for information and a recipe for resolving potential
issues caused by certain system language settings.

%

        # +-------------------------------------+
        # | language settings are ALL NON-en_US |
        # +-------------------------------------+
        elif [ `grep -ic "^en_US" < $langtmp` -eq 0 ]; then
          cat << %
    The language settings on this system are ALL non-US English. While for
    VnmrJ itself non-"English(US)" settings may work, they may cause problems
    with macros, shell scripts or other software tools interpreting the output
    of "ls -l", the contents of system log files containing time stamps or the
    default output from the Linux "date" command. This also may defeat the
    recognition of text files containing Umlauts, accents and other non-US
    characters, and it may cause problems with third party software such as
    Matlab 7, as indicated in the bug report "rhel43.j2201". To correct the
    issue we recommend modifying the file "/etc/sysconfig/i18n" by changing
    the line defining "LANG" to
        LANG="en_US"
    then reboot the system. Users are still able to switch to other languages
    via "Applications" -> "System Settings" -> "Language" from the GUI menu.

%
          numrec=`expr $numrec + 1`
          cat >> ${SP_REC}.lang << %
WARNING: ALL language selections on this system are values other than US
English (e.g.: "English(Singapore)"); see the output above for information
and a recipe for resolving potential issues caused by certain system language
settings.

%

        # +------------------------------------------------------+
        # | System language setting is different from US English |
        # +------------------------------------------------------+
        elif [ `cat /etc/sysconfig/i18n | \
               egrep -ic '^LANG="en_US|^LANG=en_US'` -eq 0 ]; then
          cat << %
    The main system language setting (LANG) on this system is NOT US English.
    While for VnmrJ itself and Linux in general non-"English(US)" settings may
    work OK, they may cause problems with macros, shell scripts or other
    software tools interpreting the output of "ls -l", the contents of system
    log files containing time stamps or the default output from the Linux
    "date" command. This also may defeat the recognition of text files that
    contain Umlauts, accents and other non-US characters, and it may cause
    problems with third party software such as Matlab 7, as indicated in the
    bug report "rhel43.j2201". To correct the issue (or to avoid potential
    problems) we recommend modifying the file "/etc/sysconfig/i18n" by
    changing the line defining "LANG" to
        LANG="en_US"
    then reboot the system. Users are still able to switch to other languages
    via "Applications" -> "System Settings" -> "Language" from the GUI menu.

%
          numrec=`expr $numrec + 1`
          cat >> ${SP_REC}.lang << %
WARNING: The main language on this system is set to a value other than US
English; see the output above for information and a recipe for resolving
potential issues caused by certain system language settings.

%

        fi
      fi
    fi
  else
    numrec=`expr $numrec + 1`
    fmt --width=79 >> ${SP_REC}.lang << %
NOTE: The language setting CANNOT be evaluated on this system, neither through
the "locale" command nor through the file "/etc/sysconfig/i18n"!

%
  fi
  rm -f $langtmp
}
#----------------
# END os_lang()
#----------------


###############################################################################


#----------------
# os_net()
#----------------
os_net() {
  cd $wd
  if [ $shownet -ne 0 ]; then
    cat << %

-------------------------------------------------------------------------------
 System / Network Information from "/etc/hosts", IPv6 status
-------------------------------------------------------------------------------
%

    #--------------------
    # Report IPv6 status
    #--------------------
    if [ `grep -c 'NETWORKING_IPV6=yes' < /etc/sysconfig/network` -ne 0 ]; then
      $echo "  IPv6 activated in \"/etc/sysconfig/network\":"
      $echo "    localhost6 / localhost6.localdomain6 definition \c"
      if [ `expand /etc/hosts | grep '^[ ]*::1 ' | \
            grep -w localhost6 | grep -cw localhost6.localdomain6` -ne 0 ]; then
        $echo "OK in \"/etc/hosts\""
      else
        $echo "MISSING in \"/etc/hosts\""
      fi
      for interf in /etc/sysconfig/network-scripts/ifcfg-eth*; do
        if [ -s $interf ]; then
          if [ `grep -c '^IPV6' < $interf` -gt 0 ]; then
            $echo "    IPv6-related contents in \"$interf\":"
            grep '^IPV6' < $interf | sed 's/^/        /'
          else
            $echo "    NO IPv6-related contents in \"$interf\""
          fi
        elif [ \! -r $interf ]; then
          $echo "    File \"$interf\" not readable."
        else
          $echo "    File \"$interf\" empty."
        fi
      done
    else
      $echo "  IPv6 NOT activated"
      if [ `expand /etc/hosts | grep '^[ ]*::1 ' | \
            grep -w localhost6 | grep -cw localhost6.localdomain6` -ne 0 ]; then
        cat << %
    ATTENTION: IPv6 is inactive, but the line
        ::1    localhost6.localdomain6 localhost6
    in "/etc/hosts" is still present and probably should be COMMENTED OUT.
%
      fi
    fi

    #--------------------------------------
    # check line with localhost definition
    #--------------------------------------
    hwarn=0
    localline=`expand /etc/hosts | sed 's/#.*$//' | grep '^127.0.0.1 ' | awk '
      {
        if (NF > 0)
        {
          printf("%-10s", $1)
          for (i = 2; i <= NF; i++)
            printf(" %s", $i)
          printf("\n")
        }
      }'`
    thishost=`uname -n | cut --delimiter=. --fields=1`
    hn=`uname -n`
    if [ "$thishost" = "$hn" ]; then
      lhline="127.0.0.1  localhost.localdomain localhost $hn ${hn}."
    else
      lhline="127.0.0.1  localhost.localdomain localhost $hn $thishost"
    fi

    #---------------------------
    # Entire local line missing
    #---------------------------
    if [ "$localline" = "" ]; then
      hwarn=`expr $hwarn + 1`
      cat << %
  WARNING: "/etc/hosts" lacks the definition for "localhost" reading
    $lhline
%
      numrec=`expr $numrec + 1`
      cat >> ${SP_REC}.net << %
WARNING: "/etc/hosts" lacks the definition for "localhost" reading
    $lhline

%

    #------------------------------------------------
    # Local host name missing (BOTH simple AND FQDN)
    #------------------------------------------------
    elif [ `$echo $localline | grep -cw "${thishost}"` -eq 0 ]; then
      hwarn=`expr $hwarn + 1`
      cat << %
  NOTE: It is STRONGLY recommended for the line defining "localhost" in
  "/etc/hosts" also to include the true local host name, "$thishost",
  along with the fully qualified Internet domain name, or at least a
  symbolic form thereof (by adding a period to the name); the line
  currently reads
    $localline
  We recommend changing that line to read
    $lhline
%
      fmt --width=79 << \%
  If the line contains a DIFFERENT host name, this may be because you changed
  the host name using "System" -> "Administration" -> "Network".
%
      numrec=`expr $numrec + 1`
      cat >> ${SP_REC}.net << %
NOTE: The line defining "localhost" in "/etc/hosts" currently reads
    $localline
We STRONGLY recommend changing that line to read
    $lhline

%

    #--------------------------
    # simple host name missing
    #--------------------------
    elif [ `$echo $localline | egrep -c " $thishost$| $thishost "` -eq 0 -a \
           `$echo $localline | grep -c " ${thishost}\."` -ne 0 ]; then
      hwarn=`expr $hwarn + 1`
      cat << %
  NOTE: The line defining "localhost" in "/etc/hosts" only includes the fully
  qualified Internet domain name; we recommend adding the simple host name
  "$thishost" as well, such that it reads
    $lhline
%
      numrec=`expr $numrec + 1`
      cat >> ${SP_REC}.net << %
NOTE: The line defining "localhost" in "/etc/hosts" only includes the fully
qualified Internet domain name; we recommend adding the simple host name as
well, such that it reads
    $lhline

%

    #----------------------------
    # FQDN or substitute missing
    #----------------------------
    elif [ `$echo $localline | egrep -c " $thishost$| $thishost "` -ne 0 -a \
           `$echo $localline | grep -c " ${thishost}\."` -eq 0 ]; then
      hwarn=`expr $hwarn + 1`
      cat << %
  WARNING: The line defining "localhost" in "/etc/hosts" currently reads
    $localline
  For some VnmrJ utilities this is incomplete; it is recommended to add the
  fully qualified Internet domain name (FQDN) as well, such that it reads
    $lhline
  (for systems using DHCP, "${thishost}." can be used as FQDN).
%
      numrec=`expr $numrec + 1`
      cat >> ${SP_REC}.net << %
WARNING: For some VnmrJ-related utilities the line defining "localhost" in
"/etc/hosts" only contains the simple host name; it should read
    $lhline

%

    fi
    if [ $hwarn -eq 0 ]; then
      $echo "  Entry for \"localhost\" in \"/etc/hosts\" checked - OK."
    fi

    #--------------------------------------------------------------------------
    # check whether /etc/hosts is synchronized with default networking profile
    #--------------------------------------------------------------------------
    if [ -f /etc/sysconfig/networking/profiles/default/hosts ]; then
      if [ `diff /etc/sysconfig/networking/profiles/default/hosts /etc/hosts | \
           wc -l` -ne 0 ]; then
        hwarn=`expr $hwarn + 1`
        fmt -c --width=79 << %
  WARNING: The file "/etc/hosts" and the equivalent file in the Linux default
    networking profile, "/etc/sysconfig/networking/profiles/default/hosts" are
    NOT in agreement - this may cause problems when using GUI based utilities
    to reset, restart, or alter networking services or parameters. We STRONGLY
    recommend keeping these files synchronized. Recipe:
%
        if [ `expand /etc/hosts | sed 's/#.*$//' | wc -w` -ge \
             `expand /etc/sysconfig/networking/profiles/default/hosts | \
              sed 's/#.*$//' | wc -w` ]; then
          cat << %
    You first may want to check to ensure that "/etc/hosts" doesn't miss any
    information that is present only in the default networking profile file,
    "/etc/sysconfig/networking/profiles/default/hosts", then (as root) copy
    "/etc/hosts" to the profile directory, using
        cp /etc/hosts /etc/sysconfig/networking/profiles/default/hosts
%
        else
          cat << %
    You first should transfer all information that is defined ONLY in the
    networking profile ("/etc/sysconfig/networking/profiles/default/hosts") to
    the active file, "/etc/hosts", then (as root) copy "/etc/hosts" to the
    profile directory, using
        cp /etc/hosts /etc/sysconfig/networking/profiles/default/hosts
%
        fi
        cat << %
    Thereafter, make sure new information is ALWAYS added to BOTH locations.
%
        numrec=`expr $numrec + 1`
        fmt -c --width=79 >> ${SP_REC}.net << %
WARNING: The file "/etc/hosts" and the equivalent file in the Linux default
networking profile, "/etc/sysconfig/networking/profiles/default/hosts" are
NOT in agreement - this may cause problems when using GUI based utilities to
reset, restart, or alter networking services or parameters. We STRONGLY
recommend keeping these files synchronized, see above.

%
      elif [ $hwarn -ne 0 ]; then
        cat << %
  NOTE: once the file "/etc/hosts" is modified as outlined above, we strongly
    recommend applying the same changes to the default Linux networking
    profile, "/etc/sysconfig/networking/profiles/default/hosts", using
        cp /etc/hosts /etc/sysconfig/networking/profiles/default
%
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.net << %
WARNING: When "/etc/hosts" is modified, the equivalent file in the default
networking profile, "/etc/sysconfig/networking/profiles/default/hosts", should
be kept in agreement - otherwise you may observe problems when using GUI based
utilities to reset, restart, or alter networking services or parameters.

%
      else
        cat << %
  The file "/etc/hosts" is in agreement with the default Linux networking
    profile, i.e., with "/etc/sysconfig/networking/profiles/default/hosts".
%
      fi
    fi

    #----------------------------------------------------
    # list acquisition / console entries in "/etc/hosts"
    #----------------------------------------------------
    rm -f $tmp
    for h in master1 rf1 rf2 rf3 rf4 rf5 rf6 rf7 rf8 rf9 rf10 rf11 rf12 \
          rf13 rf14 rf15 rf16 pfg1 pfg2 grad1 lock1 ddr1 ddr2 ddr3 ddr4 ddr5 \
          ddr6 ddr7 ddr8 ddr9 ddr10 ddr11 ddr12 ddr13 ddr14 ddr15 ddr16 \
          V-Autosampler V-Cryobay V-AS768 V-AS768Robot V-LcWorkstation \
          V-Pda V-Protune V-Slim V-Trap inova inovaauto wormhole; do
      expand /etc/hosts | sed 's/#.*$//' | grep -w $h >> $tmp
    done
    if [ `wc -w < $tmp` -gt 0 ]; then
      $echo "  Acquisition / spectrometer related entries in \"/etc/hosts\":"
      cat $tmp | awk '
      {
        if (NF > 0)
        {
          printf("    %-15s", $1)
          for (i = 2; i <= NF; i++)
            printf(" %s", $i)
          printf("\n")
        }
      }' | sort --field-separator=. --key=4n
    else
      fmt -c --width=79 << %
  No acquisition / console related entries in "/etc/hosts": the system is not
    set up as spectrometer host, i.e., "$vnmrsystem/bin/setacq" has not been
    run.
%
    fi
    rm -f $tmp
  fi
}
#----------------
# END os_net()
#----------------


###############################################################################


#---------------------
# os_compiler()
#---------------------
os_compiler() {
  cd $wd
  if [ $showrevs -ne 0 ]; then
    cat << %

-------------------------------------------------------------------------------
 Compiler & Interpreter Versions
-------------------------------------------------------------------------------
%
    activejava=`which java 2> /dev/null`
    if [ "$activejava" = "" ]; then
      $echo "  Java environment (JRE or JSE) not installed or not active."
    else
      $echo "  Java version information:"
      $echo "    Active Java environment: $activejava"
      java -version 2>&1 | sed 's/^/      /' |\
        egrep -i 'java|jdk|jre|jse|gcj' | fmt -s --width=79
    fi
    if [ -x /usr/bin/java -a "$activejava" = $vnmrsystem/jre/bin/java ]; then
      $echo "    Java environment installed as part of Linux:"
      /usr/bin/java -version 2>&1 | sed 's/^/      /' | \
        egrep -i 'java|jdk|jre|jse|gcj' | fmt -s --width=79
    fi
    if [ `which cc 2> /dev/null | wc -l` -ne 0 ]; then
      cc_version=`cc -v 2>&1 | grep 'gcc version'`
      if [ "$cc_version" != "" ]; then
        $echo "  Active C compiler version:  $cc_version"
      fi
    fi
  fi
}
#---------------------
# END os_compiler()
#---------------------


###############################################################################


#---------------------
# END os_secure()
#---------------------
os_secure() {
  cd $wd
  cat << %

-------------------------------------------------------------------------------
 Access Statistics, Security Information
-------------------------------------------------------------------------------
%

  #----------------------------------------------
  # Show SELinux status
  #----------------------------------------------

  if [ -r /etc/selinux/config ]; then
    if [ `grep -i '^SELINUX=' < /etc/selinux/config | grep -c disabled` -ne 0 ]
    then
      echo "  SELinux activation status:"
      grep '^SELINUX=' < /etc/selinux/config | sed 's/^/        /'
    else
      echo "  SELinux activation status / base configuration:"
      cat /etc/selinux/config | grep -v '^#' | sed 's/^/        /'
    fi
  fi

  #----------------------------------------------
  # Show when system was last rebooted
  #----------------------------------------------

  lastboot=`last | grep '^reboot ' | head -n 1`
  if [ "$lastboot" != "" ]; then
    $echo "  Last system reboot:  \c"
    bw=`$echo $lastboot | $awk '{print $(NF-4)}'`
    bt=`$echo $lastboot | $awk '{print $(NF-1)}'`
    bd=`$echo $lastboot | $awk '{printf("%02d\n",$(NF-2))}'`
    bm=`$echo $lastboot | $awk '{print $(NF-3)}'`
    by=`date '+%Y'`
    cm=`date '+%m'`
    case $bm in
      Jan) bm="01" ;;
      Feb) bm="02" ;;
      Mar) bm="03" ;;
      Apr) bm="04" ;;
      May) bm="05" ;;
      Jun) bm="06" ;;
      Jul) bm="07" ;;
      Aug) bm="08" ;;
      Sep) bm="09" ;;
      Oct) bm="10" ;;
      Nov) bm="11" ;;
      Dec) bm="12" ;;
    esac
    if [ $bm -gt $cm ]; then
      by=`expr $by - 1`
    fi
    $echo "$by-$bm-$bd $bt \c"
    case $bw in
      Sun) $echo "(Sunday)" ;;
      Mon) $echo "(Monday)" ;;
      Tue) $echo "(Tuesday)" ;;
      Wed) $echo "(Wednesday)" ;;
      Thu) $echo "(Thursday)" ;;
      Fri) $echo "(Friday)" ;;
      Sat) $echo "(Saturday)" ;;
      *)   $echo "($bw)" ;;
    esac
  fi

  if [  `man 5 hosts_access 2> /dev/null | wc -l` -gt 2 ]; then
    h_access_man=1
  fi

  #------------------------------------------
  # Check if "setacq" was run on this system
  #------------------------------------------
  if [ -h /etc/rc5.d/S98rarpd -o -f /etc/rc5.d/S98rarpd ]; then
    setacq=1
  fi
  $echo "  Local security information (may not be relevant behind a firewall):"

  #--------------------------
  # Info about /etc/services
  #--------------------------
  $echo "    Internet services / ports as defined per \"/etc/services\":"
  n_servc=`grep -cv '^[ ]*#[# ]*' </etc/services`
  $echo $n_servc | $awk '{printf("      ACTIVE:      %3d services\n",$1)}'
  not_servc=`grep '^[ ]*#' </etc/services | egrep -v '|\$Id:|services,v' | \
        grep -c '[0-9]/'`
  if [ $not_servc -gt 0 ]; then
    $echo $not_servc | $awk '{printf("      Deactivated: %3d services\n",$1)}'
  fi

  #-----------------------------
  # Info about /etc/hosts.equiv
  #-----------------------------
  if [ -r /etc/hosts.equiv ]; then
    if [ `cat /etc/hosts.equiv | grep -c '^+[ ]*$'` -ne 0 ]; then
      $echo "    ALL HOSTS TRUSTED VIA \"/etc/hosts.equiv\" - \c"
      $echo "this is HIGHLY INSECURE!"
      open_hostequiv=1
    elif [ $setacq -ne 0 ]; then
      cat /etc/hosts.equiv | egrep -v "^$host$|^localhost$|^#" | \
        egrep -v '^inova$|^inovaauto$|^wormhole$' | \
        egrep -v '^master1$|^rf[1-9][0-9]*$|^pfg[1-3]$|^grad[1-3]$' | \
        egrep -v '^lock[1-3]$|ddr[1-9][0-9]*$' | \
        $awk '{if (NF>0) print}' > ${tmp}.hostequiv
      if [ `wc -l < ${tmp}.hostequiv` -gt 0 ]; then
        $echo "    Trusted host entries per \"/etc/hosts.equiv\""
        $echo "      not including hosts required for acquisition:"
        cat ${tmp}.hostequiv | sed 's/^/        /'
      else
        $echo "    No trusted host entries per \"/etc/hosts.equiv\""
        $echo "      other than those required for acquisition."
      fi
      rm -f ${tmp}.hostequiv
    elif [ `egrep -cv "^#|^$host$|^localhost$" </etc/hosts.equiv` -gt 0 ]; then
      $echo "    Trusted hosts per \"/etc/hosts.equiv\":"
      egrep -v "^#|^$host$|^localhost$" < /etc/hosts.equiv | \
        $awk '{if (NF>0) print}' | sed 's/^/        /'
    else
      $echo "    File \"/etc/hosts.equiv\" lists no trusted hosts (secure setting)."
    fi
  else
    $echo "    File \"/etc/hosts.equiv\" not present / \c"
    $echo "no trusted hosts (secure setting)"
  fi
  if [ $open_hostequiv -ne 0 ]; then
    numrec=`expr $numrec + 1`
    fmt --width=79 >> ${SP_REC}.secure << %
SECURITY WARNING: The file "/etc/hosts.equiv" on this system treats ALL
hosts as trusted, allowing remote logins from anywhere without even
specifying a password! See "man hosts.equiv" for more information.

%
  fi


  #-----------------------------------
  # report SSH version and activities
  #-----------------------------------
  if [ `which ssh 2> /dev/null | grep -c '^/'` -gt 0 ]; then
    if [ $showrevs -ne 0 ]; then
      $echo "    SSH version and activities:"
      sshrev=`ssh -V 2>&1 | cut --delimiter=' ' --fields=1-3`
      $echo "      Version:  $sshrev"
      rm -f $tmp
      showpackage -p "  " openssh
      missing=$?
    else
      $echo "    SSH Activities:"
    fi
    nsshd=`ps auxc | grep -c sshd`
    nssha=`ps auxc | grep -c ssh-agent`
    if [ $nsshd -gt 1 ]; then
      $echo "      $nsshd instances of \"sshd\" running"
    elif [ $nsshd -eq 1 ]; then
      $echo "      $nsshd instance  of \"sshd\" running"
    else
      $echo "      \"sshd\" currently not used / active"
    fi
    if [ $nssha -gt 1 ]; then
      $echo "      $nssha instances of \"ssh-agent\" running"
    elif [ $nssha -eq 1 ]; then
      $echo "      1 instance  of \"ssh-agent\" running"
    fi
  fi


  #--------------------------------
  # report Mozilla Firefox version
  #--------------------------------
  if [ `which firefox 2> /dev/null | grep -c '^/'` -gt 0 ]; then
    if [ $showrevs -ne 0 ]; then
      $echo "    Mozilla Firefox version:"
#     ffrev=`firefox --version 2>&1 | cut --delimiter=' ' --fields=1-3`
#     $echo "      Version:  $ffrev"
# (use package information only - the above direct call may hang!)
      rm -f $tmp
      showpackage -p "  " firefox
      missing=$?
      if [ $rh5 -ne 0 ]; then
        ff36_OK=0
        ffrev=`firefox --version 2>&1 | sed 's/^[A-Za-z ]*//
               s/,/ /g' | cut --delimiter=' ' --fields=1`
        ffpath=`which firefox`
        if [ "$ffrev" != "" ]; then
          cat << %
      Version in Linux command path ($ffpath):  $ffrev
%
          if [ `compareversions $ffrev $curff36` -lt 2 ]; then
            ff36_OK=1
            fmt --width=79 << %
        This is the current version of Firefox 3.5/3.6, per $chkff
%
          elif [ `compareversions $ffrev 3.5` -ne 2 ]; then
            ff36_OK=1
            fmt --width=79 << %
        You have installed Firefox 3.5(+), providing the current feature set;
        however, the installed version is NOT at the current update level: for
        the latest security and bug fixes we recommend upgrading to version
        $curff36 (you should be able to do this through Firefox, via "Help" ->
        "Check for Updates").
%
          elif [ `compareversions $ffrev $curff3` -lt 2 ]; then
            fmt --width=79 << %
        This is current version of Firefox 3.0, per $chkff; for the latest
        features you may want to download / install the current version of
        Firefox 3.6 ($curff36).
%
          else
            fmt --width=79 << %
        This is NOT the current version of Firefox 3.0: for the latest
        security and bug fixes we recommend upgrading to version $curff3; this
        can be done either by updating your RHEL 5 installation using "pup" or
        "yum update", or by selectively updating Firefox 3.0, using
%
            cat << %
                yum install firefox
        This requires a valid RedHat subscription.
%
          fi
        fi
        if [ $ff36_OK -eq 0 ]; then
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.secure << %
For the latest feature set and security features you may want to download and
install the current Firefox version (Firefox $curff36) from the Mozilla
foundation at
%
          cat >> ${SP_REC}.secure << %
        http://www.mozilla.com/firefox/

%
          # check whether icon or menu or default application call path
          #    other than just "firefox"  ADD STUFF HERE FIREFOX
        fi
      fi
    fi
  fi


  #------------------------------------
  # report Mozilla Thunderbird version
  #------------------------------------
  if [ `which thunderbird 2> /dev/null | grep -c '^/'` -gt 0 ]; then
    if [ $showrevs -ne 0 ]; then
      $echo "    Mozilla Thunderbird version:"
      rm -f $tmp
      showpackage -p "  " thunderbird
      missing=$?
      if [ $rh5 -ne 0 ]; then
        tb3_OK=0
        tbrev=`thunderbird --version 2>&1 | sed 's/^[A-Za-z ]*//
               s/,/ /g' | cut --delimiter=' ' --fields=1`
        tbpath=`which thunderbird`
        if [ "$tbrev" != "" ]; then
          cat << %
      Version in Linux command path ($tbpath):  $tbrev
%
          if [ `compareversions $tbrev $curtb3` -lt 2 ]; then
            tb3_OK=1
            fmt --width=79 << %
        This is the current version of Thunderbird 3, per $chktb
%
          elif [ `compareversions $tbrev 3.0` -ne 2 ]; then
            tb3_OK=1
            fmt --width=79 << %
        You have installed Thunderbird 3, providing the current feature set;
        however, the installed version is NOT at the current update level: for
        the latest security and bug fixes we recommend upgrading to version
        $curtb3 (you should be able to do this through Thunderbird, via "Help"
        -> "Check for Updates").
%
          elif [ `compareversions $tbrev $curtb2` -lt 2 ]; then
            fmt --width=79 << %
        This is current version of Thunderbird 2, per $chktb.
%
          else
            fmt --width=79 << %
        This is NOT the current version of Thunderbird 2: for the latest
        security and bug fixes we recommend upgrading to version $curtb2; this
        can be done either by updating your RHEL 5 installation using "pup" or
        "yum update", or by selectively updating Thunderbird 2, using
%
            cat << %
                yum install thunderbird
        This requires a valid RedHat subscription.
%
          fi
        fi
        if [ $tb3_OK -eq 0 ]; then
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.secure << %
For the latest feature set and security features you may want to download and
install the current Thunderbird software (Thunderbird $curtb3) from the
Mozilla foundation at
%
          cat >> ${SP_REC}.secure << %
        http://www.mozilla.com/thunderbird/

%
          # check whether icon or menu or default application call path
          #    other than just "thunderbird"  ADD STUFF HERE THUNDERBIRD
        fi
      fi
    fi
  fi

  #----------------------
  # Check for "/.rhosts"
  #----------------------
  if [ -f /.rhosts ]; then
    if [ -r /.rhosts -a -s /.rhosts ]; then
      if [ `grep -v '^-' /.rhosts | wc -w` -gt 0 ]; then
        $echo "    ATTENTION: using \"/.rhosts\" to allow for remote root"
        $echo "               logins creates a serious security risk!"
      fi
    else
      $echo "    ATTENTION: we STRONGLY recommend NOT defining \"/.rhosts\""
    fi
  fi
  if [ -f /.rhosts ]; then
    if [ -r /.rhosts -a -s /.rhosts ]; then
      if [ `grep -v '^-' /.rhosts | wc -w` -gt 0 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.secure << %
SECURITY WARNING: using "/.rhosts" to allow for remote root logins
creates a SERIOUS SECURITY RISK.

%
      fi
    else
      numrec=`expr $numrec + 1`
      cat >> ${SP_REC}.secure << %
SECURITY WARNING: we STRONGLY recommend NOT defining "/.rhosts"

%
    fi
  fi
}
#---------------------
# END os_secure()
#---------------------


###############################################################################


#---------------------
# END os_access()
#---------------------
os_access() {
  cd $wd
  # local host name
  lh=`uname -n`

  # determine relevant accounting file
  last=`which last`
  if [ -f /var/log/wtmp ]; then
    wtmp=/var/log/wtmp
  fi
  if [ -f /var/log/wtmp.1 ]; then
    oldwtmp=/var/log/wtmp.1
  fi

  #------------------------------------------------
  # Generate access statistics from "last" output
  #------------------------------------------------
  if [  -f /var/log/wtmp.1 ]; then
    accesses=`($last -f $oldwtmp; $last) | $awk '{
        if (($3 != ":0") && ($3 != ":0.0") && ($2 != "console") &&
            ($1 != "reboot") && (NF > 0)) print }' | wc`
  else
    accesses=`$last | $awk '{
        if (($3 != ":0") && ($3 != ":0.0") && ($2 != "console") &&
            ($1 != "reboot") && (NF > 0)) print }' | wc`
  fi
  accesswds=`$echo $accesses | $awk '{print $2}'`
  accesses=`$echo $accesses | $awk '{print $NF}'`
  year=`date '+%Y'`
  month=`date '+%b'`
  hdrline=0
  if [ $accesses -gt 0 ]; then
    if [ $accesswds -gt 1 ]; then
      cat << %
  -----------------------------------------------------------------------------
%
      hdrline=1
      if [ -f /var/log/wtmp.1 ]; then
        cat << %
  Remote Access Statistics, from "last -f $oldwtmp" / "last",
        i.e., "$oldwtmp" and "$wtmp":
     User     Type    #   Last access       Remote Host
%
        $last -a -f $oldwtmp > $acctmp
        $last -a >> $acctmp
      else
        cat << %
  Remote Access Statistics, from "last", i.e., "$wtmp":
     User     Type    #   Last access       Remote Host
%
        $last -a > $acctmp
      fi
      cat $acctmp | egrep -v '^reboot |^wtmp begins ' | $awk '
      BEGIN {
        cyear='$year'
        cmonth="'$month'"
      }
      {
        if ((NF > 9) && ($NF != ":0") && ($NF !~ /^:[0-9]\.[0-9]$/) &&
            ($NF != "localhost") && ($NF != "'$lh'"))
        {
          if (((cmonth != "Dec") && (cmonth != "Nov") && (cmonth != "Oct")) &&
              (($4 == "Dec") || ($4 == "Nov") || ($4 == "Oct")))
          {
            cyear--
          }
          cmonth=$4
          if (cmonth == "Jan")
            month="01"
          else if (cmonth == "Feb")
            month="02"
          else if (cmonth == "Mar")
            month="03"
          else if (cmonth == "Apr")
            month="04"
          else if (cmonth == "May")
            month="05"
          else if (cmonth == "Jun")
            month="06"
          else if (cmonth == "Jul")
            month="07"
          else if (cmonth == "Aug")
            month="08"
          else if (cmonth == "Sep")
            month="09"
          else if (cmonth == "Oct")
            month="10"
          else if (cmonth == "Nov")
            month="11"
          else if (cmonth == "Dec")
            month="12"
          else
            month=cmonth
          if ($2 ~ /^pts\//)
            type="pts"
          else
            type=$2
          printf("%s %s %s",$1,$NF,type)
          printf("  %d-%s-%02d %s\n",cyear,month,$5,$6)
        }
      }' | sort -df | $awk 'BEGIN {
        getline
        lastuser=$1
        lasttype=$3
        #if (lasttype == "pts")
        #  lasttype=""
        lasthost=$2
        lastdate=$4
        lasttime=$5
        count=1
      }
      {
        if (NF > 0)
        {
          user=$1
          type=$3
          #if (type == "pts")
          #   type=""
          host=$2
          if ((user == lastuser) && (type == lasttype) && (host == lasthost))
          {
            lastdate=$4
            lasttime=$5
            count++
          }
          else
          {
            printf("    %-9s",lastuser)
            printf(" %-5s %3d",lasttype,count)
            printf("  %s %s",lastdate,lasttime)
            printf("  %s\n",lasthost)
            lastuser=user
            lasttype=type
            lasthost=host
            lastdate=$4
            lasttime=$5
            count=1
          }
        }
      }
      END {
        printf("    %-9s",lastuser)
        printf(" %-5s %3d",lasttype,count)
        printf("  %s %s",lastdate,lasttime)
        printf("  %s\n",lasthost)
      }' | sort -k 4

      rm -f $acctmp
    fi

    #------------------------------------
    # Report start of accounting period
    #------------------------------------
    if [ -f /var/log/wtmp.1 ]; then
      accstart=`$last -f $oldwtmp | $tail -n 1`
    else
      accstart=`$last | $tail -n 1`
    fi
    startm=`$echo $accstart | $awk '{print $4}'`
    case $startm in
        Jan) startm=01 ;;
        Feb) startm=02 ;;
        Mar) startm=03 ;;
        Apr) startm=04 ;;
        May) startm=05 ;;
        Jun) startm=06 ;;
        Jul) startm=07 ;;
        Aug) startm=08 ;;
        Sep) startm=09 ;;
        Oct) startm=10 ;;
        Nov) startm=11 ;;
        Dec) startm=12 ;;
    esac
    startd=`$echo $accstart | $awk '{print $5}'`
    if [ $startd -lt 10 ]; then
      startd=0$startd
    fi
    startt=`$echo $accstart | $awk '{print $6}'`
    starty=`date '+%Y'`
    curmon=`date +%b`
    starty=`last | expand | cut -c 41-100 | sort -mu -k 2,2 | \
    $awk 'BEGIN {
      starty='$starty'
      cmon="'$curmon'"
      getline
      if (($2 == "Dec") && (cmon != "Dec"))
        starty--
    }
    {
      if ($2 == "Dec")
        starty--
    }
    END { print starty }'`
    accstart="$starty-$startm-$startd $startt"
    if [ $hdrline -eq 0 ]; then
      cat << %
  -----------------------------------------------------------------------------
  There are currently no records / statistics on remote access.
%
    fi
    $echo "  Accounting started on  $accstart"

    #----------------------------------------------------
    # Report number of reboots during accounting period
    #----------------------------------------------------
    reboots=`last | grep -c '^reboot'`
    if [ $reboots -gt 1 ]; then
      $echo "  The system was rebooted $reboots times since $accstart"
    elif [ $reboots -eq 1 ]; then
      $echo "  The system was rebooted once since accounting started."
    else
      $echo "  The system was not rebooted during the accounting period."
    fi
  fi
}
#---------------------
# END os_access()
#---------------------


###############################################################################


#---------------------
# END os_sendmail()
#---------------------
os_sendmail() {
  cd $wd
  cat << %

-------------------------------------------------------------------------------
 "sendmail" Configuration Check
-------------------------------------------------------------------------------
%
  if [ `ps -ef | grep '[0-9] sendmail' | grep -vc grep` -gt 0 ]; then
    sendmailok=1
    cat << %
  Daemon "sendmail" is listening to incoming connections; version information:
%
    if [ $showrevs -ne 0 ]; then
      showpackage -p "  " sendmail
      showpackage -p "  " sendmail-cf
      smcf=$?
      # smrev=`cat /etc/mail/sendmail.cf | grep '^DZ' | sed 's/DZ//'`
      # $echo "      sendmail version:  $smrev"
    fi
  fi
  mailhost=`grep '^DSsmtp:' < /etc/mail/sendmail.cf | sed 's/^DSsmtp://'`
  if [ "$mailhost" = "" ]; then
    mailhost=`grep '^DS' < /etc/mail/sendmail.cf | sed 's/^DS//'`
  fi
  if [ "$mailhost" != "" ]; then
    if [ `expand /etc/hosts | sed 's/#.*$//' | \
      egrep -c " $mailhost\$| $mailhost "` -gt 0 ]; then
      ipmailh=`expand /etc/hosts | sed 's/#.*$//' | \
            egrep " $mailhost\$| $mailhost " | $awk '{print $1}' | \
            head -n 1`
      if [ "$ipmailh" != "" ]; then
        $echo "  using system \"$mailhost\" ($ipmailh)\c"
      else
        $echo "  using system \"$mailhost\"\c"
      fi
      $echo " as SMTP relay for outgoing mail"
    elif [ `/sbin/arp $mailhost 2>&1 | grep -ci 'Unknown host'` -eq 0 ]; then
      ipmailh=`/sbin/arp $mailhost | tr '[()]' ' ' | $awk '{print $2}'`
      if [ "$ipmailh" = "$mailhost" ]; then
        $echo "  Relay \"smarthost\": $mailhost"
      else
        $echo "  Relay \"smarthost\": $mailhost ($ipmailh)"
      fi
      if [ `which tracepath | grep -wc no` -eq 0 ]; then
        res=`tracepath $mailhost 2>/dev/null | $tail -n 1`
        if [ `$echo $res | grep -cwi hops` -ne 0 ]; then
          res=`$echo $res | sed 's/.*hops[ ]*//
                s/back/\//'`
          $echo "         ... reachable ($res hops)"
        fi
      fi
    else
      cat << %
  WARNING: specified relay "smarthost", $mailhost, NOT REACHABLE
%
    fi
  else
    DS=`grep -n '^DS' < /etc/mail/sendmail.cf | cut -d: -f1`
    cat << %
  The "sendmail" configuration file "/etc/mail/sendmail.cf" does NOT specify a
  "smart relay host"; if sending mails from this system fails (using the Linux
  "mail" command, as used by VnmrJ for e-mail notifications), it may be
%
    if [ "$DS" != "" ]; then
      cat << %
  necessary to specify it on line $DS in "/etc/mail/sendmail.cf", e.g.:
%
    else
      cat << %
  necessary to specify it in "/etc/mail/sendmail.cf", on a line such as
%
    fi
    cat << %
        DSmailhost.domain.name
  where "mailhost.domain.name" is the fully qualified domain name of the
  relevant mail relay host. Thereafter, stop and restart "sendmail", using
        /etc/init.d/sendmail restart
  NOTE: this is just a quick & dirty solution; for a proper / better recipe
  see the article in Agilent MR News 2009-05-06.
%
  fi
  if [ `grep -c '^root:' < /etc/aliases` -eq 0 -a ! -s /.forward ]; then
    cat << %
  -----------------------------------------------------------------------------
  ATTENTION: messages for "root" are NOT routed to a real user; make sure you
    check for e-mail as root at regular intervals (AT LEAST once per week!).
    A better recipe for routing messages for root to a real user is found in
    Agilent MR News 2009-06-10.
%
  elif [ `grep '^root:' < /etc/aliases | wc -w` -eq 2 -a \
         `grep '^root:' < /etc/aliases | grep -c ',[ ]*$'` -eq 0 ]; then
    roottarget=`grep '^root:' < /etc/aliases | $awk '{print $2}'`
    cat << %
  Messages for "root" are routed to $roottarget
    through e-mail alias in "/etc/aliases"
%
  elif [ `grep '^root:' < /etc/aliases | wc -w` -gt 2 -o \
         `grep '^root:' < /etc/aliases | grep -c ',[ ]*$'` -gt 0 ]; then
    cat << %
  Messages for "root" are forwarded to multiple addresses through e-mail
    alias definition in "/etc/aliases"
%
  elif [ -s /.forward ]; then
    cat << %
  Messages for "root" are forwarded through "/.forward"
%
  else
    cat << %
  Messages for "root" are forwarded through e-mail alias in "/etc/aliases"
%
  fi
  if [ -s /etc/mail/genericstable -a `cat /etc/mail/sendmail.cf | \
       grep -c '^Kgenerics [ ]*hash [ ]*/etc/mail/genericstable'` -gt 0 ]; then
    cat << %
  E-mail address masquerading enabled through "/etc/mail/sendmail.cf" and
    "/etc/mail/genericstable".
%
  fi
}
#---------------------
# END os_sendmail()
#---------------------


###############################################################################


#---------------------
# vj_install()
#---------------------
vj_install() {
  cd $wd
  cat << %

-------------------------------------------------------------------------------
 VnmrJ Version / Configuration:
-------------------------------------------------------------------------------
%

  #------------------------------------------------------------------
  # if $vnmrsystem/vnmrrev is found, report installed VnmrJ version
  #------------------------------------------------------------------
  if [ \! -f $vnmrsystem/vnmrrev ]; then
    $echo "Link \"$vnmrsystem\" or file \"$vnmrsystem/vnmrrev\" not present -"
    $echo "  VnmrJ version not reported."
  else
    $echo "  Active version of VnmrJ:"
    $echo "        $vnmrrev ($vnmrrevdate)"
    if [ "$system" != "$vnmropt" ]; then
      $echo "        Installed version \"$vnmropt\" for $system architecture"
      $echo "$vnmrrev for $system architecture\c" >> $SP_SUMMARY
    else
      $echo "        Installed version \"$vnmropt\""
      $echo "$vnmrrev (\"$vnmropt\" option)\c" >> $SP_SUMMARY
    fi
    cd $vnmrsystem
    inst_path=`$pwd`
    cd $wd
    $echo "        Installation path:  $inst_path"


    #-------------------------------------------------------------------
    # Report installed VnmrJ software options, if possible
    #-------------------------------------------------------------------
    if [ `$echo $vnmrrev | egrep -c '1\.1[B-Z]|1\.[2-9]|[2-9]\.[0-9]'` -gt 0 \
         -a -d $vnmrsystem/adm/log ]; then
      $echo "  VnmrJ software components selected at installation:"
      cd $vnmrsystem/adm/log
      if [ `find . -name \
              'vnmrj2[0-9][0-9][0-9][01][0-9][0-3][0-9]-[012][0-9][0-5][0-9]' \
            -a -type f -a \! -size 0 | wc -l` -ne 0 ]; then
        for f in vnmrj2[0-9][0-9][0-9][01][0-9][0-3][0-9]-[012][0-9][0-5][0-9]
        do
          if [ -s $f ]; then
            inst_y=`$echo $f | cut -c 6-9`
            inst_m=`$echo $f | cut -c 10-11`
            inst_d=`$echo $f | cut -c 12-13`
            inst_H=`$echo $f | cut -c 15-16`
            inst_M=`$echo $f | cut -c 17-18`
            $echo "    Installation log dated \c"
            $echo "${inst_y}-${inst_m}-${inst_d} ${inst_H}:${inst_M}"
            $echo "      Standard installation options selected:"
            cat $f | tr '"' ' ' | $awk 'BEGIN {
              option=""
              n_options=0
              ok=1
              kb=0
            }
            {
              if (($0 ~ /GENERIC files/) && ($0 ~ /^Installing/))
              {
                n_options=0
              }
              else if ($0 ~ /PASSWORDED OPTION files/)
              {
                if (option != "")
                {
                  if (kb == 0)
                  {
                    printf("        %-20s  NOT INSTALLED\n", option)
                  }
                  else if (ok == 0)
                  {
                    printf("        %-20s  %6d KiB / %6.2f MiB",
                           option,kb,kb/1024)
                    printf(", PARTIAL INSTALL\n")
                  }
                  else
                  {
                    printf("        %-20s  %6d KiB / %6.2f MiB\n",
                           option,kb,kb/1024)
                  }
                  option=""
                }
                else if (n_options == 0)
                {
                  printf("        No standard options selected / installed.\n")
                }
                if ($0 ~ /Skipping/)
                {
                  printf("      No passworded installation options selected.\n")
                  n_options=0
                }
                else
                {
                  printf("      Passworded installation options selected:\n")
                  n_options=0
                }
              }
              else if ($0 ~ /^  Extracting/)
              {
                if (option == "")
                {
                  option=$2
                  n_options += 1
                  ok=1
                  res = getline
                  while ((res > 0) &&
                         (($0 ~ /^Replaced /) || ($0 ~ /^tar: blocksize = 0/)))
                  {
                    res = getline
                  }
                  if ($1 ~ /^DONE/)
                  {
                    kb = $2
                  }
                  else
                  {
                    ok=0
                  }
                }
                else if (option == $2)
                {
                  res = getline
                  while ((res > 0) &&
                         (($0 ~ /^Replaced /) || ($0 ~ /^tar: blocksize = 0/)))
                  {
                    res = getline
                  }
                  if ($1 ~ /^DONE/)
                  {
                    kb += $2
                  }
                  else
                  {
                    ok=0
                  }
                }
                else
                {
                  if (kb == 0)
                  {
                    printf("        %-20s  NOT INSTALLED\n", option)
                  }
                  else if (ok == 0)
                  {
                    printf("        %-20s  %6d KiB / %6.2f MiB",
                           option,kb,kb/1024)
                    printf(", PARTIAL INSTALL\n")
                  }
                  else
                  {
                    printf("        %-20s  %6d KiB / %6.2f MiB\n",
                           option,kb,kb/1024)
                  }
                  option=$2
                  n_options += 1
                  ok=1
                  res = getline
                  while ((res > 0) &&
                         (($0 ~ /^Replaced /) || ($0 ~ /^tar: blocksize = 0/)))
                  {
                    res = getline
                  }
                  if ($1 ~ /^DONE/)
                  {
                    kb = $2
                  }
                  else
                  {
                    ok=0
                  }
                }
              }
            }
            END {
              if (option != "")
              {
                if (kb == 0)
                {
                  printf("        %-20s  NOT INSTALLED\n", option)
                }
                else if (ok == 0)
                {
                  printf("        %-20s  %6d KiB / %6.2f MiB",
                         option,kb,kb/1024)
                  printf(", PARTIAL INSTALL\n")
                }
                else
                {
                  printf("        %-20s  %6d KiB / %6.2f MiB\n",
                         option,kb,kb/1024)
                }
              }
            }'
          fi
        done
      else
        cat << %
        No VnmrJ installation log available in "$vnmrsystem/adm/log";
        installation aborted prematurely or by killing process?
%
      fi
      cd $wd
    fi


    #---------------------------------------
    # report installed VnmrJ patches
    #---------------------------------------
    pnames=""
    if [ -d $vnmrsystem/adm/patch ]; then
      cd $vnmrsystem/adm/patch
      pnames=`find * -type d -a -prune 2> /dev/null | grep \
'^[0-9]...[a-z][a-z][a-z][A-Z][A-Z][A-Z][a-z][a-z][a-z0-9][c0-9][p0-9][0-9]'`
    fi
    if [ `$echo $pnames | wc -w` -gt 0 ]; then
      $echo "  VnmrJ patch history:"
      cd $vnmrsystem/adm/patch
      lastvpatch=""
      $echo "           Date    Time    Patch name"
      for p in `ls -d1tr $pnames`; do
        m=`ls -ld $p | $awk '{print $6}'`
        case $m in
          Jan) month=01 ;;
          Feb) month=02 ;;
          Mar) month=03 ;;
          Apr) month=04 ;;
          May) month=05 ;;
          Jun) month=06 ;;
          Jul) month=07 ;;
          Aug) month=08 ;;
          Sep) month=09 ;;
          Oct) month=10 ;;
          Nov) month=11 ;;
          Dec) month=12 ;;
          *)   month=$m ;;
        esac
        day=`ls -ld $p | $awk '{print $7}'`
        year=`ls -ld $p | $awk '{print $8}'`
        if [ `$echo $year | grep -c ':'` -gt 0 ]; then
          time=$year
          year=`date '+%Y'`
          if [ $month -gt `date '+%m'` ]; then
            year=`expr $year - 1`
          elif [ $month -eq `date '+%m'` -a $day -gt `date '+%d'` ]; then
            year=`expr $year - 1`
          fi
        else
          time=""
        fi
        if [ $day -lt 10 ]; then
          day=0$day
        fi
        $echo "$year-$month-$day $time $p" | $awk '{
          if (NF == 2)
          {
            printf("        %s        %s\n",$1,$NF)
          }
          else if (NF > 2)
          {
            printf("        %s %s  %s\n",$1,$2,$NF)
          }
          else
          {
            printf("                          %s\n",$NF)
          }
        }'
        lastvpatch=$p
      done
      echo ", patched ($lastvpatch)" >> $SP_SUMMARY
    elif [ $vnmrbeta -ne 0 ]; then
      cat << %
  No VnmrJ patches installed. You may want to check the "VnmrJ
    Beta Test" Web site at
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
    for a possible patch for your beta version of VnmrJ!
%
      warn_vpatch=1
      echo ", NOT patched" >> $SP_SUMMARY
    else
      cat << %
  No VnmrJ patches installed. You may want to check the "VnmrJ /
    VNMR Patches" Web site at
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
    for a patch for your VnmrJ release.
%
      warn_vpatch=1
      echo ", NOT patched" >> $SP_SUMMARY
    fi
  fi
  cd $wd

  if [ $warn_vpatch -ne 0 ]; then
    numrec=`expr $numrec + 1`
    cat >> ${SP_REC}.vjinst << %
Please check the "VnmrJ / VNMR Patches" Web site at
      http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
for the latest patch(es) for your software.

%
  fi



  #----------------------------------------
  # VnmrJ upgrade checks & recommendations
  #----------------------------------------
  if [ $vnmrdir -ne 0 ]; then
    if [ `$echo $vnmrrev | grep -ic "$cur_vnmrj"` -eq 1 ]; then
      if [ $warn_vpatch -eq 1 ]; then
        cat << %
  Apart from the fact that you have not installed any VnmrJ patches yet
    (see above), you are running the current version of VnmrJ for your
    system architecture.
%
      else
        $echo "  You are running the current version of VnmrJ for your system."
      fi
    else

      #----------------------------------------------
      # Catch PC models that are no longer supported
      #----------------------------------------------
      if [ `$echo $pcmodel | grep -ic 'optiplex.*270'` -ne 0 ]; then
        req_pcupdate=1
      fi

      #----------------------------------------------------------------
      # Catch RHEL OS versions / installs that are no longer supported
      #----------------------------------------------------------------
      if [ $rh3 -eq 1 -o $rh40 -eq 1 -o $bit64on -eq 0 ]; then
        req_osupdate=1
      fi
      if [ `$echo $pcmodel | grep -ic 'precision'` -ne 0 ]; then
        cur_rhel="RHEL 4.3"
      fi

      #---------------------------------------------
      # Handle spectrometer type specifics (if any)
      #---------------------------------------------
      if [ `$echo $system | grep -ic 'directdrive'` -eq 1 ]; then
        if [ "$vnmrrev"  = "VnmrJ 2.2C" -a $rh5 -eq 1 ]; then
          fmt -c --width=79 << %
  IMPORTANT: There is a compatibility issue in consoles with DirectDrive
    architecture (Varian NMR System) running VnmrJ 2.2C under RHEL 5.x that
    is causing sporadic, random acquisition failures ("Acode errors"),
    especially in long and complex experiments. This cannot be corrected
    through a VnmrJ patch. We therefore STRONGLY recommend upgrading to
    VnmrJ 2.3A or later; see the recommendations below for more information.

%
        fi
      elif [ `$echo $system | grep -ic '400-mr'` -eq 1 ]; then
        if [ "$vnmrrev"  = "VnmrJ 2.2C" -a $rh5 -eq 1 ]; then
          fmt -c --width=79 << %
    IMPORTANT: There is a compatibility issue in DirectDrive consoles (400-MR
    and Varian NMR System) running VnmrJ 2.2C under RHEL 5.x that is causing
    sporadic, random acquisition failures ("Acode errors"), especially in long
    and complex experiments. This cannot be corrected through a VnmrJ patch.
    We therefore STRONGLY recommend upgrading to VnmrJ 2.3A or later; see the
    recommendations below for more information.

%
        fi
      elif [ `$echo $system | grep -ic 'mercury'` -eq 1 ]; then
        $echo >> /dev/null
      elif [ `$echo $system | grep -ic 'inova'` -eq 1 ]; then
        $echo >> /dev/null
      else
        $echo >> /dev/null
      fi

      numrec0=$numrec
      if [ -d $vnmrsystem/imaging -a \
           `$echo $system | grep -ic 'directdrive'` -eq 1 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.vjinst << %
The current VnmrJ software version for imaging systems such as the
Varian MRI System is $cur_vnmrj; we recommend upgrading to that version.
This will ensure that we can provide optimum support in the case of
problems with hard- or software.
%
        if [ $req_pcupdate -eq 0 -a \
             `$echo $pcmodel | grep -ic 'precision'` -ne 0 ]; then
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.vjinst << %
If you wanted to explore the advanced graphics capabilities for imaging that
are built into $cur_vnmrj, you would need to upgrade to a newer PC, such as
the $current_pc that comes with an advanced graphics card ($current_graphics
or higher) with a VRAM size of 256 MiB or more.
%
        fi
      else
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.vjinst << %
The current VnmrJ software version for $system is $cur_vnmrj;
we recommend upgrading to that version. This will ensure that we can
provide optimum support in the case of problems with hard- or software.
%
      fi
    fi
    if [ $req_pcupdate -ne 0 ]; then
      if [ -d $vnmrsystem/imaging -a \
           `echo "$cur_vnmrj" | grep -ic 'VnmrJ 2\.3A'` -eq 1 -a \
           `$echo $pcmodel | egrep -ic 'precision|optiplex.*270'` -ne 0 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.vjinst << %
In your case this would necessitate an UPGRADE TO A NEWER PC MODEL, as your PC
does not support the current (64-bit) versions of RedHat Enterprise Linux
(RHEL) that are required to run $cur_vnmrj. Also, the current PC models
recommended and supplied by Agilent, such as the $current_pc, come with a
graphics controller (such as the $current_graphics) with a VRAM size of 256
MiB or more that permits taking advantage of the advanced graphics
capabilities built into $cur_vnmrj.
%
      else
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.vjinst << %
In your case this would necessitate an upgrade to a newer PC model, as your
PC does not support the current (64-bit) versions of RedHat Enterprise Linux
(such as $cur_rhel) that are required to run $cur_vnmrj.
%
      fi
    elif [ $req_osupdate -ne 0 ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.vjinst << %
In your case this would necessitate an UPGRADE TO A NEWER LINUX VERSION
such as $cur_rhel.
%
    fi
    if [ $numrec -ne $numrec0 ]; then
      $echo >> ${SP_REC}.vjinst
    fi
    numrec0=$numrec

    if [ `$echo $system | egrep -ic 'directdrive|400-mr'` -eq 1 ]; then
      if [ "$vnmrrev"  = "VnmrJ 2.2C" -a $rh5 -eq 1 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.vjinst << %
IMPORTANT: We have found a compatibility issue in consoles with DirectDrive
architecture (Varian NMR/MRI System, 400-MR) running VnmrJ 2.2C under RHEL 5.x
that may cause sporadic, random acquisition failures ("Acode errors"),
especially in long and complex experiments. This unfortunately cannot be
corrected through a VnmrJ patch. We therefore STRONGLY recommend upgrading to
VnmrJ 2.3A or later.
%
        if [ `$echo $pcmodel | grep -ic precision` -ne 0 ]; then
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.vjinst << %
The official Agilent support policy for systems with $pcmodel spectrometer
hosts only covers RHEL 4.x as operating system, i.e., running RHEL 5.x is NOT
officially supported, and hence your system is not eligible for a free license
upgrade to VnmrJ 2.3A. To resolve / avoid the issue you may either purchase a
VnmrJ license upgrade from Agilent, alternatively you may revert back to RHEL
4.x which also would avoid the issue.
%
        else
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.vjinst << %
If this is with a Dell OptiPlex 755N host (especially if delivered by Agilent,
or if purchased for the purpose of running VnmrJ 2.2C) you may want to check
with your local Agilent service representative whether your system is eligible
for a free upgrade to VnmrJ 2.3A; if not, we STRONGLY recommend purchasing a
VnmrJ license upgrade.
%
        fi
        if [ $numrec -ne $numrec0 ]; then
          $echo >> ${SP_REC}.vjinst
        fi
      fi
    fi
  fi



  #============================================================================
  # INSTALLATION USER LIBRARY CONTRIBUTIONS INTO $vnmrsystem
  #============================================================================

  if [ $vnmrdir -ne 0 ]; then
    if [ -d $vnmrsystem/adm/log/userlib_installs ]; then
      cd $vnmrsystem/adm/log/userlib_installs
      if [ `ls -d \
            2[0-9][0-9][0-9]-[01][0-9]-[0-3][0-9]_[0-2][0-9]h[0-5][0-9]_* \
            2>/dev/null | wc -l` -gt 0 ]; then
        cat << %
  -----------------------------------------------------------------------------
  User Library contributions installed in "$vnmrsystem":
           Date    Time    Contribution
%
        for f in 2[0-9][0-9][0-9]-[01][0-9]-[0-3][0-9]_[0-2][0-9]h[0-5][0-9]_*
        do
          date=`$echo $f | cut -c 1-16 | tr 'h' ':' | tr '_' ' '`
          item=`$echo $f | cut -c 18-200 | sed 's/-/\//'`
          rep=`$echo $item | $awk -F '.' '{if ($2 ~ /^[0-9]*$/) print $2}'`
          if [ "$rep" != "" ]; then
            rep=`expr $rep + 1`
            item=`$echo $item | sed 's/\.[0-9]*$//'`
            $echo "        $date  $item ($rep)"
          else
            $echo "        $date  $item"
          fi
        done
      fi
    elif [ `$echo $vnmrrev | egrep -c '1\.1[A-C]'` -ne 0 -a \
           \! -d $vnmrsystem/adm/log/userlib_installs -a \
           \! -d $vnmruser/userlib_installs ]; then
      cat << %
  If you download and install the current version of "extract" from the
    On-line User Library at
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
    "extract" will log User Library installations, and "$wrappercmd" will
    report any User Library contributions that are installed in "$vnmrsystem"
    using that new version of "extract".
%
    fi
  fi



  #===========================================================================
  # INSTALLATION OF MAJOR USER LIBRARY PACKAGES INTO $vnmrsystem
  #===========================================================================

  mkpr=0
  if [ $vnmrdir -ne 0 ]; then
    majorul=0

    #-----------------
    # psglib/BioPack
    #-----------------
    if [ -s $vnmrsystem/BioPack.dir/BP_rev ]; then
      if [ $majorul -eq 0 ]; then
        $echo "  Major user library contributions installed in \"$vnmrsystem\":"
      fi
      majorul=`expr $majorul + 1`
      $echo "     \"psglib/BioPack\" version information and installation log:"
      cat $vnmrsystem/BioPack.dir/BP_rev | $awk '
      {
        if (NF > 0) {print}
      }' | sed 's/^/        /'
    elif [ -s $vnmrsystem/biopack/BioPack.dir/BP_rev ]; then
      if [ $majorul -eq 0 ]; then
        $echo "  Major user library contributions installed in \"$vnmrsystem\":"
      fi
      majorul=`expr $majorul + 1`
      $echo "     \"psglib/BioPack\" version information and installation log:"
      $echo "        APPDIR installation in \"$vnmrsystem/biopack\""
      cat $vnmrsystem/biopack/BioPack.dir/BP_rev |  $awk '
      {
        if (NF > 0) {print}
      }' | sed 's/^/        /'
    fi

    #-----------------------------
    # chempack/CP / chempack/CP4
    #-----------------------------
    if [ -s $vnmrsystem/CP_Readme/CP_Version ]; then
      if [ $majorul -eq 0 ]; then
        $echo "  Major user library contributions installed in \"$vnmrsystem\":"
      fi
      majorul=`expr $majorul + 1`
      $echo "     \"chempack/CP\" version information:"
      cat $vnmrsystem/CP_Readme/CP_Version |  $awk '
      {
        if (NF > 0) {print}
      }' | sed 's/^/        /'
    elif [ -s $vnmrsystem/chempack/CP_Readme/CP_Version ]; then
      if [ $majorul -eq 0 ]; then
        $echo "  Major user library contributions installed in \"$vnmrsystem\":"
      fi
      majorul=`expr $majorul + 1`
      $echo "     \"chempack/CP\" version information:"
      $echo "        APPDIR installation in \"$vnmrsystem/chempack\""
      cat $vnmrsystem/chempack/CP_Readme/CP_Version |  $awk '
      {
        if (NF > 0) {print}
      }' | sed 's/^/        /'
    fi

    #------------------
    # bin/makePrinter
    #------------------
    if [ `which makePrinter 2>&1 | \
          egrep -vc 'no makePrinter|not found.'` -ne 0 ]; then
      if [ $majorul -eq 0 ]; then
        $echo "  Major user library contributions installed in \"$vnmrsystem\":"
      fi
      majorul=`expr $majorul + 1`
      mkpr=1
      if [ -r /printers/mkprrev ]; then
        $echo "     \"bin/makePrinter\" version information:"
        cat /printers/mkprrev |  $awk '
        {
          if (NF > 0) {print}
        }' | sed 's/^/        /'
      else
        $echo "     \"bin/makePrinter\" is installed"
      fi
    fi
  fi
}
#---------------------
# END vj_install()
#---------------------


###############################################################################


#---------------------
# vj_user()
#---------------------
vj_user() {
  cd $wd
  if [ -f /vnmr/vnmrrev ]; then
    cat << %

-------------------------------------------------------------------------------
 VnmrJ User Definitions
-------------------------------------------------------------------------------
%

    if [ $vnmrdir -ne 0 -a $showusers -ne 0 -a -r /etc/group ]; then
      vnmrowner=`ls -ld $vnmrsystem/bin | $awk '{print $3}'`
      if [ `grep -c '^nmr:' < /etc/group` -gt 0 ]; then
        nmrusers=`grep '^nmr:' < /etc/group | \
                  $awk -F : '{print $4}' | tr ',' ' '`
        checkusers="$nmrusers"
        numusers=`$echo $nmrusers | $awk '{print NF}'`
        if [ `$echo $nmrusers | grep -wc $vnmrowner` -eq 0 ]; then
          checkusers="$vnmrowner $nmrusers"
          numusers=`expr $numusers + 1`
        fi
        nmrgid=`grep '^nmr:' < /etc/group | cut -d : -f 3`
      fi
      if [ $numusers -ne 0 ]; then
        $echo "  GID for group \"nmr\":  $nmrgid"
        $echo "  VnmrJ users (group \"nmr\") as defined in \"/etc/group\":"
      else
        nmrusers=`ypcat group 2> /dev/null | grep '^nmr:' | \
                    $awk -F : '{print $4}' | tr ',' ' '`
        checkusers="$nmrusers"
        numusers=`$echo $nmrusers | $awk '{print NF}'`
        if [ `$echo $nmrusers | grep -wc $vnmrowner` -eq 0 ]; then
          checkusers="$vnmrowner $nmrusers"
          numusers=`expr $numusers + 1`
        fi
        if [ $numusers -ne 0 ]; then
          nmrgid=`ypcat group 2> /dev/null | grep '^nmr:' | cut -d : -f 3`
          $echo "  GID for group \"nmr\":  $nmrgid"
          $echo "  VnmrJ users (group \"nmr\")\c"
          $echo " as defined in \"/etc/group\" via NIS/NIS+:"
        fi
      fi
      if [ $numusers -gt 0 ]; then
        doappdirs=0
        if [ `$echo $vnmrrev | \
              egrep -c ' 2\.2[C-Z]| 2\.[3-9]| [3-9]\.[0-9]'` -gt 0 ]; then
          cat << %
        Name          UID   GID   Shell        HOME
                 Application Directory ("appdirs") Path / Priority
        -----------------------------------------------------------------------
%
          doappdirs=1
        else
          $echo "         Name         UID   GID    Shell        HOME"
        fi
        for u in $checkusers; do
          if [ "$u" != acqproc ]; then
            udir=""
            uid=-1
            gid=-1
            ush=""
            uline=`ypcat passwd 2> /dev/null | grep "^$u:"`
            if [ "$uline" != "" ]; then
              uid=`$echo $uline | grep "^$u:" | \
                   $awk -F : '{if (NF>2) print $3}'`
              if [ "x$uid" = "x" ]; then
                uid=-1
              fi
              gid=`$echo $uline | grep "^$u:" | \
                   $awk -F : '{if (NF>3) print $4}'`
              if [ "x$gid" = "x" ]; then
                gid=-1
              fi
              udir=`$echo $uline | grep "^$u:" | \
                    $awk -F : '{if (NF>5) print $6}'`
              ush=`$echo $uline | grep "^$u:" | \
                   $awk -F : '{if (NF>6) print $7}'`
            elif [ -r /etc/passwd ]; then
              if [ `grep -c "^$u:" < /etc/passwd` -gt 0 ]; then
                uidl=`grep "^$u:" < /etc/passwd | \
                      $awk -F : '{if (NF>2) print $3}'`
                if [ "x$uidl" != "x" -a "x$uidl" != "x+" ]; then
                  uid=$uidl
                fi
                gidl=`grep "^$u:" < /etc/passwd | \
                      $awk -F : '{if (NF>3) print $4}'`
                if [ "x$gidl" != "x" -a "x$gidl" != "x+" ]; then
                  gid=$gidl
                fi
                udirl=`grep "^$u:" < /etc/passwd | \
                       $awk -F : '{if (NF>5) print $6}'`
                if [ "x$udirl" != "x+" -a "x$udirl" != "x" ]; then
                  udir=$udirl
                fi
                ushl=`grep "^$u:" < /etc/passwd | \
                      $awk -F : '{if (NF>6) print $7}'`
                if [ "x$ushl" != "x+" -a "x$ushl" != "x" ]; then
                  ush=$ushl
                fi
              fi
            fi
            if [ "$udir" = "" ]; then
              udir=`finger $u 2>/dev/null | grep '^Directory:' | head -n 1 | \
                    $awk '{print $2}'`
            fi
            if [ "$ush" = "" ]; then
              ush=`finger $u 2>/dev/null | grep '^Directory:' | head -n 1 | \
                    $awk '{print $4}'`
            fi
            $echo $u | $awk '{printf("        %-12s",$1)}'
            info=0
            if [ $uid -ne -1 ]; then
              $echo $uid | $awk '{printf("%5d",$1)}'
              info=1
            else
              $echo "     \c"
            fi
            if [ $gid -ne -1 ]; then
              $echo $gid | $awk '{printf(" %5d",$1)}'
              info=`expr $info + 1`
            else
              $echo "      \c"
            fi
            if [ "x$ush" != x ]; then
              $echo $ush | $awk '{printf("   %-12s",$1)}'
              info=`expr $info + 1`
            else
              $echo "               \c"
            fi
            if [ "$udir" != "" ]; then
              if [ -d $udir/vnmrsys ]; then
                $echo $udir | $awk '{printf(" %s",$1)}'
              fi
              info=`expr $info + 1`
            fi
            if [ $info -eq 0 ]; then
              $echo " no information available."
            else
              $echo ""
            fi
          fi
          if [ `$echo $nmrusers | grep -wc $u` -eq 0 ]; then
            $echo "                ATTENTION: NOT MEMBER OF GROUP \"nmr\"!"
          else
            if [ $doappdirs -gt 0 ]; then
              appdirdef=$udir/vnmrsys/persistence/appdir_$u
              if [ -s $appdirdef ]; then
                grep '^1;'<  $appdirdef | cut --delimiter=';' --fields=2 | \
                  $awk 'BEGIN {
                    appdirs = 0
                    linemax = 79
                    indent = "                "
                    userdir = "'$udir'/"
                    udirlen = length(userdir)
                    printf("%s", indent)
                    linelen = length(indent)
                  }
                  {
                    token = $1
                    if (token == "USERDIR")
                      token = "$HOME/vnmrsys"
                    else
                    {
                      if ((udirlen > 3) &&
                          (substr(token,1,udirlen) == userdir))
                      {
                        token = substr(token, udirlen + 1, length(token) - 1)
                        token = "$HOME/" token
                      }
                    }
                    if (appdirs == 0)
                    {
                      printf(" %s", token)
                      linelen += length(token) + 1
                    }
                    else
                    {
                      if ((linelen + 2) > linemax)
                      {
                        printf("\n%s", indent)
                        linelen = length(indent)
                      }
                      printf(" >")
                      linelen += 2
                      if ((linelen + length(token) + 1) > linemax)
                      {
                        printf("\n%s", indent)
                        linelen = length(indent)
                      }
                      printf(" %s", token)
                      linelen += length(token) + 1
                    }
                    appdirs++
                  }
                  END { printf("\n") }'
              else
                $echo '                 $HOME/vnmrsys > /vnmr'
              fi
            fi
          fi
        done
      else
        $echo "  VnmrJ users not listed - entry \"nmr\" in \"/etc/group\""
        $echo "    not readable or not local (NIS / NIS+)"
      fi
      fmt -c --width=79 << %
  NOTE: Users who are NOT (primary or secondary) member of the group "nmr"
    are NOT listed here and should NOT expect to be able to use VnmrJ. As
    $vnmrowner, start "vnmrj adm" and from the "Configure" menu use "Users" ->
    "Update Users" to make VnmrJ usable for these accounts.
%
    fi
    fmt -c --width=79 << %
  For the application-specific part of the VnmrJ user definitions, as well as
    for VnmrJ operator definitions see below.
%
  fi
}
#---------------------
# END vj_user()
#---------------------


###############################################################################


#---------------------
# vj_fs()
#---------------------
vj_fs() {
  cd $wd
  if [ -f /vnmr/vnmrrev -a $numusers -gt 0 ]; then
    cat << %

-------------------------------------------------------------------------------
 VnmrJ File System Checks
-------------------------------------------------------------------------------
%
    cd $vnmrsystem
    cat << %
  Ownership checks for contents of "$vnmrsystem" (readable directories only):
%
    numvfildir=`find . \! -type l 2>/dev/null | wc -l`
    numvdir=`find . \! -type l -a -type d 2>/dev/null | wc -l`
    numvfil=`expr $numvfildir - $numvdir`
    numvsym=`find . -type l 2>/dev/null | wc -l`
    $echo $numvfildir | $awk '{printf("  %6d",$1)}'
    $echo " Files and directories total, without symbolic links:"
    $echo $numvfil    | $awk '{printf("  %6d plain files,\n",$1)}'
    $echo $numvdir    | $awk '{printf("  %6d directories\n",$1)}'
    $echo $numvsym    | $awk '{printf("  %6d symbolic links\n",$1)}'

    #------------------------------------
    # files and directories with bad GID
    #------------------------------------
    badgid=`find . \! -type l -a \! -group nmr 2>/dev/null | wc -l`
    if [ $badgid -gt 0 ]; then
      cat << %
  -----------------------------------------------------------------------------
%
      badgiddir=`find . \! -type l -a -type d -a \! -group nmr 2>/dev/null | \
          wc -l`
      badgidfil=`expr $badgid - $badgiddir`
      if [ $badgidfil -gt 1 ]; then
        $echo $badgidfil  | $awk '{printf("  %6d Plain files",$1)}'
      elif [ $badgidfil -eq 1 ]; then
        $echo $badgidfil  | $awk '{printf("  %6d Plain file",$1)}'
      fi
      if [ $badgiddir -gt 1 ]; then
        if [ $badgidfil -gt 0 ]; then
          $echo " and"
        fi
        $echo $badgiddir  | $awk '{printf("  %6d Directories",$1)}'
      elif [ $badgiddir -eq 1 ]; then
        if [ $badgidfil -gt 0 ]; then
          $echo " and"
        fi
        $echo $badgiddir  | $awk '{printf("  %6d Directory",$1)}'
      fi
      $echo " in \"$vnmrsystem\" NOT owned by the group \"nmr\":"
      $echo "             Perms    Ownership       Size  File"
      find . \! -type l -a \! -group nmr -exec ls -ld {} \; 2>/dev/null | \
          head -n $vlist | $awk '
      {
        perm=substr($1,2,9)
        uidgid=sprintf("%s/%s",$3,$4)
        siz=$5
        file=substr($NF,3,length($NF)-2)
        printf("           %s %-12s %8d %s\n",perm,uidgid,siz,file)
      }'
      if [ $badgid -gt $vlist ]; then
        $echo "               ... (first $vlist results shown)"
        cat << \%
         In order to see the complete list use
                find $vnmrsystem/. \! -group nmr
         or
                find $vnmrsystem/. \! -group nmr -exec ls -ld {} \;
%
      fi
    else
      cat << %
    All files and directories in "$vnmrsystem" are owned by the group "nmr"
%
    fi

    #-----------------------------------
    # files / directories owned by root
    #-----------------------------------
    uidroot=`find . \! -type l -a -user root 2>/dev/null | wc -l`
    if [ $uidroot -gt 0 ]; then
      cat << %
  -----------------------------------------------------------------------------
%
      uidrootdir=`find . \! -type l -a -type d -a -user root 2>/dev/null | \
                  wc -l`
      uidrootfil=`expr $uidroot - $uidrootdir`
      if [ $uidrootfil -gt 1 ]; then
        $echo $uidrootfil  | $awk '{printf("  %6d Plain files",$1)}'
      elif [ $uidrootfil -eq 1 ]; then
        $echo $uidrootfil  | $awk '{printf("  %6d Plain file",$1)}'
      fi
      if [ $uidrootdir -gt 1 ]; then
        if [ $uidrootfil -gt 0 ]; then
          $echo " and"
        fi
        $echo $uidrootdir  | $awk '{printf("  %6d Directories",$1)}'
      elif [ $uidrootdir -eq 1 ]; then
        if [ $uidrootfil -gt 0 ]; then
          $echo " and"
        fi
        $echo $uidrootdir  | $awk '{printf("  %6d Directory",$1)}'
      fi
      $echo " in \"$vnmrsystem\" owned by user ROOT:"
      $echo "             Perms    Ownership       Size  File"
      find . \! -type l -a -user root -exec ls -ld {} \; 2>/dev/null | \
          head -n $vlist | $awk '
      {
        perm=substr($1,2,9)
        uidgid=sprintf("%s/%s",$3,$4)
        siz=$5
        file=substr($NF,3,length($NF)-2)
        printf("           %s %-12s %8d %s\n",perm,uidgid,siz,file)
      }'
      if [ $uidroot -gt $vlist ]; then
        $echo "               ... (first $vlist results shown)"
        cat << \%
         In order to see the complete list use
                find $vnmrsystem/. -user root
         or
                find $vnmrsystem/. -user root -exec ls -ld {} \;
%
      fi
    else
      $echo "    No files or directories in \"$vnmrsystem\" are owned by root"
    fi

    #------------------------------------------------------------------------
    # files / directories owned NEITHER by VnmrJ admin user NOR by user root
    #------------------------------------------------------------------------
    baduid=`find . \! -type l -a \! -user root -a \! -user $vnmrowner \
          2>/dev/null | wc -l`
    if [ $baduid -gt 0 ]; then
      cat << %
  -----------------------------------------------------------------------------
%
      baduiddir=`find . \! -type l -a -type d -a \! -user root -a \
                 \! -user $vnmrowner 2>/dev/null | wc -l`
      baduidfil=`expr $baduid - $baduiddir`
      if [ $baduidfil -gt 1 ]; then
        $echo $baduidfil  | $awk '{printf("  %6d Plain files",$1)}'
      elif [ $baduidfil -eq 1 ]; then
        $echo $baduidfil  | $awk '{printf("  %6d Plain file",$1)}'
      fi
      if [ $baduiddir -gt 1 ]; then
        if [ $baduidfil -gt 0 ]; then
          $echo " and"
        fi
        $echo $baduiddir  | $awk '{printf("  %6d Directories",$1)}'
      elif [ $baduiddir -eq 1 ]; then
        if [ $baduidfil -gt 0 ]; then
          $echo " and"
        fi
        $echo $baduiddir  | $awk '{printf("  %6d Directory",$1)}'
      fi
      $echo " in \"$vnmrsystem\" NOT owned by user \"$vnmrowner\" or root:"
      $echo "             Perms    Ownership       Size  File"
      find . \! -type l -a \! -user root -a \! -user $vnmrowner \
	  -exec ls -ld {} \; 2>/dev/null | head -n $vlist | $awk '
      {
        perm=substr($1,2,9)
        uidgid=sprintf("%s/%s",$3,$4)
        siz=$5
        file=substr($NF,3,length($NF)-2)
        printf("           %s %-12s %8d %s\n",perm,uidgid,siz,file)
      }'
      if [ $baduid -gt $vlist ]; then
        cat << %
               ... (first $vlist files/directories listed only)
         In order to see the complete list use
                find $vnmrsystem/. \! -user root -a \! -user $vnmrowner
%
      fi
    else
      fmt -c --width=79 << %
    All files & directories in "$vnmrsystem" are owned by user "$vnmrowner" or
    root.
%
    fi
    cd $wd
  fi
}
#---------------------
# END vj_fs()
#---------------------


###############################################################################


#---------------------
# vj_db()
#---------------------
vj_db() {
  cd $wd
  if [ -f /vnmr/vnmrrev ]; then
    cat << %

-------------------------------------------------------------------------------
 VnmrJ Database Status
-------------------------------------------------------------------------------
%
    dberr=0
    pgsql=`ps -ef | grep pgsql | grep -c postmaster`
    if [ $pgsql -gt 0 ]; then
      $echo "  VnmrJ / Locator database server (PGSQL) running."
      managedb=`which managedb 2> /dev/null`
      if [ "$managedb" != "" ]; then
        sqldate=`date -u '+%Y-%m-%d %H:%M:%S %Z (%a)'`
        $echo "     Database status information for $sqldate:"
        rm -f $tmp
        $managedb status > $tmp 2> ${tmp}.1
        if [ \! -s $tmp ]; then
          if [ -s $vnmruser/ManagedbMsgLog ]; then
            line=`cat  $vnmruser/ManagedbMsgLog | \
                  grep -n 'Starting managedb as' | $tail -n 1 | tr ':' ' ' | \
                  $awk '{print $1}'`
            $tail -n +$line $vnmruser/ManagedbMsgLog >> $tmp
          fi
          if [ -s ${tmp}.1 ]; then
            cat ${tmp}.1 >> $tmp
          fi
        fi
        rm -f ${tmp}.1
        if [ -s $tmp ]; then
          cat $tmp | sed 's/^## //' | grep -v '^INFO  ' | $awk '
          {
            if (($0 ~ /^DEBUG/) && (NF > 5))
            {
              firstwd=6
              outs=""
            }
            else if (($0 ~ /^ERROR/) && (NF > 5))
            {
              firstwd=6
              outs="ERROR: "
            }
            else
            {
              firstwd=1
              outs=""
            }
            if (NF > 0)
            {
              for (i = firstwd; i < NF; i++)
              {
                outs=outs $i " "
              }
              outs=outs $NF
              printf("%s\n",outs)
            }
          }' | sed 's/^at /   at /' | fmt -s --width=73 | sed 's/^/        /'
          dberr=`cat $tmp | grep -c ERROR`
        else
          $echo "       database status / statistics not available."
        fi
        rm -f $tmp
        if [ -s $vnmruser/ManagedbMsgLog ]; then
          cat << %
     In case of problems you may want to check the file
        $vnmruser/ManagedbMsgLog
     for additional logged database maintenance messages.
%
        fi
      else
        if [ -s $vnmruser/ManagedbMsgLog ]; then
          cat << %
     In case of problems with the VnmrJ Locator you may want to check the file
        $vnmruser/ManagedbMsgLog
     for logged database maintenance messages.
%
        elif [ "$usernow" != vnmr1 ]; then
          cat << \%
     In case of problems with the VnmrJ Locator you may want to check the file
        ~vnmr1/vnmrsys/ManagedbMsgLog
     i.e., the logged database maintenance information in the VnmrJ
     administrator's (typically vnmr1) local database log file.
%
        fi
      fi
      if [ $dberr -gt 0 ]; then
        numrec=`expr $numrec + 1`
        cat >> ${SP_REC}.db << %
The log for the Locator database contains error messages; see the output above
for further information and hints for correcting the situation.

%
      fi
    else
      $echo "  VnmrJ / Locator database server currently NOT running."
      numrec=`expr $numrec + 1`
      cat >> ${SP_REC}.db << %
The VnmrJ / Locator database server is currently NOT running; possible
reasons for this include
 - the database management (PGSQL part of the VnmrJ software) has not been
   properly installed / set up when installing VnmrJ;
 - the PGSQL software has been deliberately shut down, e.g., using
        $vnmrsystem/bin/S99pgsql stop
   In this case it can be restarted by root using
        $vnmrsystem/bin/S99pgsql start
   If this does not correct the situation, calling
        dbsetup
   as vnmr1 may help; if this fails, call
        $vnmrsystem/bin/sudoins
   as root, then (as vnmr1) call "dbsetup" again;
 - a serious problem in the software setup - e.g., a missing library, a
   non-standard Linux installation, etc.

%
    fi
  fi
}
#---------------------
# END vj_db()
#---------------------


###############################################################################


#---------------------
# vj_plotdef()
#---------------------
vj_plotdef() {
  cd $wd
  if [ -f /vnmr/vnmrrev ]; then

    dvn=$vnmrsystem/devicenames
    if [ $vnmrdir -ne 0 ]; then
      if [ `grep -cv '^#' < $dvn 2> /dev/null` -gt 0 ]; then
        cat << %

-------------------------------------------------------------------------------
 VnmrJ Printer / Plotter Definitions:
-------------------------------------------------------------------------------
%

        lpstaterr=`lpstat -r 2>&1 1>/dev/null`
        if [ "$lpstaterr" != "" ]; then
          lpstatok=0
          cat << %
  WARNING: "lpstat" fails with error
        $lpstaterr
  Printer reporting below will be PARTIAL ONLY.

%
        fi

        # checking for system default print destination
        ndev=0
        if [ $lpstatok -ne 0 ]; then
          def_printer=`lpstat -d | \
            $awk '{if ($0 ~ /^system default destination/) print $NF}'`
        fi
        for p in `(lpstat -p 2> /dev/null | \
                   $awk '{if ($0 ~ /^printer /) print $2}'; \
                   $awk < $dvn '{if ($1 == "Name") print $NF}') | sort -u`; do
          showprinter $p $mkpr
          ndev=`expr $ndev + 1`
        done

        if [ $lpstatok -ne 0 ]; then
          # reporting status of CUPS server
          $echo "  CUPS status: \c"
          lpstat -r
        fi

        if [ "$def_printer" = "" -a $lpstatok -ne 0 ]; then
          if [ $rh5 -eq 0 ]; then
            cat << %

  No default printer defined in Linux; to facilitate printing from Gnome or
  KDE desktop utilities you may want to define a default print destination,
  via "Applications" -> "System Settings" -> "Printing" from the system menu.
%
            numrec=`expr $numrec + 1`
            fmt --width=79 >> ${SP_REC}.plot << %
No default printer defined in Linux; to facilitate printing from Gnome or KDE
desktop utilities you may want to define a default print destination using
"Applications" -> "System Settings" -> "Printing" from the system menu.

%
          else
            cat << %

  No default printer defined in Linux; to facilitate printing from Gnome or
  KDE desktop utilities you may want to define a default print destination,
  via "System" -> "Administration" -> "Printing" from the system menu.
%
            numrec=`expr $numrec + 1`
            fmt --width=79 >> ${SP_REC}.plot << %
No default printer defined in Linux; to facilitate printing from Gnome or KDE
desktop utilities you may want to define a default print destination using
"System" -> "Administration" -> "Printing" from the system menu.

%
          fi
        fi

        if [ $printernamesOK -eq 0 ]; then
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.plot << %
NOTE: one or several (VnmrJ) printer / plotter definitions use illegal names
(see above for details); printer / plotter names must NOT start with a numeric
character!

%
        fi
      fi
    fi
  fi
}
#---------------------
# END vj_plotdef()
#---------------------


###############################################################################


#---------------------
# vj_tmp()
#---------------------
vj_tmp() {
  cd $wd
  if [ $vnmrdir -ne 0 ]; then
    cat << %

-------------------------------------------------------------------------------
 Status of directory "$vnmrsystem/tmp":
-------------------------------------------------------------------------------
%
    vtmpfiles=`find $vnmrsystem/tmp/. -type f 2>/dev/null | wc -l`
    vtmpsiz=`du -sk $vnmrsystem/tmp | $awk '{print $1}'`
    if [ $vtmpfiles -gt 1 -o $vtmpsiz -gt 1000 ]; then
      fmt -c --width=79 << %
  The directory "$vnmrsystem/tmp" holds a total of $vtmpfiles files, occupying
    a total of $vtmpsiz KiB of disk space.
%
      vprintjobs=`ls $vnmrsystem/tmp/*PRINT* 2> /dev/null | wc -l`
      vplotjobs=`ls $vnmrsystem/tmp/*PLT* 2> /dev/null | wc -l`
      vprintsiz=0
      vplotsiz=0
      if [ $vprintjobs -gt 0 ]; then
        vprintsiz=`du -sk $vnmrsystem/tmp/*PRINT* | $awk 'BEGIN {sum=0}
        {
          sum += $1
        }
        END {printf("%d\n",sum)}'`
        if [ $vprintsiz -gt 0 ]; then
          fmt -c --width=79 << %
  There are data for $vprintjobs VnmrJ PRINT jobs in "$vnmrsystem/tmp",
    occupying a total of $vprintsiz KiB of disk space.
%
        else
          fmt -c --width=79 << %
  There are empty files (0 KiB) for $vprintjobs VnmrJ PRINT jobs in
    "$vnmrsystem/tmp".
%
        fi
      fi
      if [ $vplotjobs -gt 0 ]; then
        vplotsiz=`du -sk $vnmrsystem/tmp/*PLT* | $awk 'BEGIN {sum=0}
        {
          sum += $1
        }
        END {printf("%d\n",sum)}'`
        if [ $vplotsiz -gt 0 ]; then
          fmt -c --width=79 << %
  There are data for $vplotjobs VnmrJ PLOT jobs in "$vnmrsystem/tmp",
    occupying a total of $vplotsiz KiB of disk space.
%
        else
          fmt -c --width=79 << %
  There are empty files (0 KiB) for $vprintjobs VnmrJ PLOT jobs in
    "$vnmrsystem/tmp".
%
        fi
      fi
      if [ $vtmpsiz -gt 1000 -o $vtmpfiles -gt 20 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.vjinst << %
The directory "$vnmrsystem/tmp" may require a clean-up, see above for details.
This should probably be done after checking and possibly correcting the status
of the Linux print spool, see below.

%
      fi
    else
      cat << %
  "$vnmrsystem/tmp" is OK (no extraneous files / data).
%
    fi
  fi
}
#---------------------
# END vj_tmp()
#---------------------


###############################################################################


#---------------------
# os_ports()
#---------------------
os_ports() {
  cd $wd
  cat << %

-------------------------------------------------------------------------------
 Serial / Parallel Port Status:
-------------------------------------------------------------------------------
    Port          Permissions    Owner/Group       Remarks
%
  for port in `ls /dev/ttyS[0-9] /dev/lp? /dev/parport? 2> /dev/null`; do
    if [ -c $port ]; then
      showport $port
    fi
  done
}
#---------------------
# END os_ports()
#---------------------


###############################################################################


#---------------------
# os_printq()
#---------------------
os_printq() {
  cd $wd
  if [ $pending_printjobs -gt 10 ]; then
    numrec=`expr $numrec + 1`
    j=$pending_printjobs
    cat >> ${SP_REC}.printq << %
Administrative Tip: Your system reports $j pending print jobs, indicating a
printer which is inaccessible / switched off / disconnected, or a print queue
which is disabled for other reasons. The course of actions to correct this
depends on what you want to achieve:
 => If you want the pending jobs to be DISCARDED, first clear the queue:
                lpstat -a
    shows the status of all print queues. You can then use
                lprm -P printer_name -
    to cancel / remove ALL JOBS FOR A GIVEN PRINTER, or
                lprm -
    to cancel / remove ALL YOUR PENDING PRINT JOBS, or
                su root
                lprm -U user_name -
                exit
    to cancel / remove ALL PENDING PRINT JOBS for the specified user. Then you
    should correct the issue which causes print jobs to remain pending, i.e.,
     - remove an unused / obsolete printer definition,
     - repair a printer / cable connection,
     - correct a networking issue, or
     - re-enable the print queue. This can be done from the RHEL $rhv menus,
%
    if [ $rh5 -ne 0 ]; then
      cat >> ${SP_REC}.printq << %
       via "System" -> "Administration" -> "Printing".
%
    else
      cat >> ${SP_REC}.printq << %
       via "Applications" -> "System Settings" -> "Printing".
%
    fi
    cat >> ${SP_REC}.printq << %
 => If on the other hand you WANT the pending print jobs to be executed, you
    should start by curing the print system, wait for the pending jobs to be
    printed, then only use "lprm" to remove any residual jobs that can't be
    processed. You can also use "lprm" to remove SPECIFIC print jobs, see
    "man lprm".

%
  fi
}
#---------------------
# END os_printq()
#---------------------


###############################################################################


#---------------------
# os_network()
#---------------------
os_network() {
  cd $wd
  cat << %

-------------------------------------------------------------------------------
 Networking Interfaces:
-------------------------------------------------------------------------------
%

  nsdir=/etc/sysconfig/network-scripts
  n_interf=`ls -1 $nsdir/ifcfg-eth? 2> /dev/null | wc -l`
  comphost=0
  host=`uname -n`
  basehost=`$echo $host | tr '.' ' ' | $awk '{print $1}'`

  if [ "$basehost" != "$host" ]; then
    comphost=1
    $echo "  Host name:  $basehost ($host)"
  else
    $echo "  Host name:  $host"
  fi
  if [ `grep -c 'NETWORKING=yes' < /etc/sysconfig/network` -eq 0 ]; then
    $echo "  Networking not activated on this system"
    net_on=0
  elif [ $n_interf -eq 0 ]; then
    $echo "  NETWORKING SCRIPTS NOT FOUND in $nsdir"
    net_on=0
  else
    acq_ip=`expand /etc/hosts | sed 's/[ ]*#.*//' | \
            grep -w 'master1' | $awk '{print $1}'`
    if [ "$acq_ip" != "" ]; then
      cons_type=ddr
    else
      acq_ip=`expand /etc/hosts | sed 's/[ ]*#.*//' | \
              grep -w 'inova' | $awk '{print $1}'`
      if [ "$acq_ip" != "" ]; then
        cons_type=inova
      fi
    fi
    acq_ipbase=""
    if [ "$acq_ip" != "" ]; then
      acq_ipbase=`$echo $acq_ip | tr '.' ' ' | \
                  $awk '{printf("%d.%d.%d\n",$1,$2,$3)}'`
    fi
    if [ $n_interf -eq 1 ]; then
      ifscript=`ls -1 $nsdir/ifcfg-eth? 2> /dev/null`
      if [  "$acq_ip" = "" ]; then
        nets=1
        active_if=`$echo $ifscript | $awk '{print substr($1,length($1)-3,4)}'`
      elif [ \! -s $ifscript ]; then
        if [ -r $ifscript ]; then
          defect=EMPTY
        else
          defect="NOT READABLE"
        fi
        $echo "  The file $ifscript is $defect!"
        numrec=`expr $numrec + 1`
        bad_if=`$echo $ifscript | $awk '{print substr($1,length($1)-3,4)}'`
        fmt -c --width=79 >> ${SP_REC}.osnetwork << %
NOTE: The file "$ifscript" (start-up script for the network interface
"$bad_if") is $defect; if that network interface is unused or hasn't been set
up yet, this is likely harmless; if however you want or need to use that port,
the network setup MUST BE CORRECTED (the file should have the permissions set
to 644, i.e., "rw-r--r--").

%
        nets=0
        n_acqs=0
        acq_if=""
      elif [ `grep -c "=$acq_ipbase" < $ifscript` -ne 0 ]; then
        nets=0
        n_acqs=1
        acq_if=`$echo $ifscript | $awk '{print substr($1,length($1)-3,4)}'`
      else
        nets=1
        active_if=`$echo $ifscript | $awk '{print substr($1,length($1)-3,4)}'`
      fi
    else        # more than 1 active interface
      nets=0
      active_if=""
      for f in $nsdir/ifcfg-eth?; do
        defect=""
        c_if=`$echo $f | $awk '{print substr($1,length($1)-3,4)}'`
        if [ -s $f -a -r $f ]; then
          if [ "$acq_ip" != "" -a \
               `grep -c "=$acq_ipbase" < $f` -ne 0 ]; then
            if [ "$acq_if" = "" ]; then
              acq_if=$c_if
            else
              acq_if="$acq_if $c_if"
            fi
            n_acqs=`expr $n_acqs + 1`
          else
            if [ "$active_if" = "" ]; then
              active_if=$c_if
            else
              active_if="$active_if $c_if"
            fi
            nets=`expr $nets + 1`
            net_ports=`expr $net_ports + 1`
          fi
        elif [ \! -r $f ]; then
          defect="NOT READABLE"
        else
          defect=EMPTY
        fi
        if [ "$defect" != "" ]; then
          ifscript=$f
          $echo "  The file $ifscript is $defect!"
          numrec=`expr $numrec + 1`
          bad_if=`$echo $ifscript | $awk '{print substr($1,length($1)-3,4)}'`
          fmt -c --width=79 >> ${SP_REC}.osnetwork << %
NOTE: The file "$ifscript" (start-up script for the network interface
"$bad_if") is $defect; if that network interface is unused or hasn't been set
up yet, this is likely harmless; if however you want or need to use that port,
the network setup MUST BE CORRECTED (the file should have the permissions set
to 644, i.e., "rw-r--r--").

%
        fi
      done
      if [ $n_acqs -eq 0 ]; then
        if [ "$cons_type" != "" ]; then
          fmt -c --width=79 << %
  From "/etc/hosts" it appears that "setacq" was run on this system;
        however, the acquisition network interface is not activated.
        run "setacq" as root in order to activate acquisition and
        connection with the console.
%
        else
          $echo "  Acquisition / console communication not initialized."
        fi
      fi
    fi
    if [ $n_acqs -gt 0 ]; then
      acqtype=net
    fi
    if [ $nets -gt 0 ]; then
      for eth in $active_if; do
        show_if $eth
        if [ "$acqtype" = net ]; then
          acqtype=dualnet
        fi
      done
    fi
    if [ $n_acqs -gt 0 ]; then
      for eth in $acq_if; do
        show_if $eth acquisition
      done
    fi

    #--------------------------------
    # check for host name "wormhole"
    #--------------------------------
    if [ "$acqtype" != none -a \
         `uname -n | egrep -ic '^wormhole$|^wormhole\.'` -gt 0 ]; then
      cat << %
  -----------------------------------------------------------------------------
%
      fmt -c --width=79 << %
  ATTENTION: This system is named "wormhole" (probably through an erroneous
    user entry or possibly due to a bug in "$vnmrsystem/bin/setacq" - THIS
    WILL CAUSE PROBLEMS WITH NETWORKING AND SHOULD BE CORRECTED URGENTLY. The
    safest way to do this is through "sys-unconfig":
%
      cat << %
      - make sure you have all networking information (IP address, etc.) ready
      - log out all users, and as root, perform "/sbin/init s"
      - in single user mode, call "sys-unconfig"; upon rebooting, enter all
        networking parameters (host name, IP address, netmask, router, etc.)
      - as root, call "$vnmrsystem/bin/sudoins"
      - as vnmr1, call "dbsetup"
      - if necessary (Locator not running in VnmrJ), call
                $vnmrsystem/bin/S99pgsql start
                dbupdate once 0
      - as root, run "$vnmrsystem/bin/setacq"
      - you may need to delete and re-create all VnmrJ printer / plotter
        definitions.
%
      numrec=`expr $numrec + 1`
      cat >> ${SP_REC}.osnetwork << %
NOTE: This system is named "wormhole" (probably through an erroneous user
entry or due to a possible bug in "$vnmrsystem/bin/setacq") - THIS WILL CAUSE
PROBLEMS AND SHOULD BE CORRECTED - see above for details.

%
    fi

    #--------------------------------------------------------
    # check for Internet naming service setup
    #--------------------------------------------------------
    cat << %
  -----------------------------------------------------------------------------
%
    hostlookup=open
    if [ -s /etc/dhclient.conf ]; then
      if [ `cat /etc/dhclient.conf | sed 's/#.*//' | \
            $awk '{if (NF > 0) print }' | wc -l` -gt 0 ]; then
        $echo "  DHCP setup from \"/etc/dhclient.conf\":"
        cat /etc/dhclient.conf | sed 's/#.*//' | \
            $awk '{if (NF > 0) print }' | sed 's/^/    /'
      fi
    fi
    if [ $routing -eq 1 ]; then
      ns=`grep '^[ ]*hosts:' < /etc/nsswitch.conf | sed 's/#.*//'`
      if [ `$echo $ns | egrep -wc 'nisplus|nis+'` -gt 0 ]; then
        hostlookup=ok
        $echo "  Name service: NIS+"
        if [ -s /etc/defaultdomain ]; then
          domain=`cat /etc/defaultdomain`
          $echo "    NIS+ domain name: $domain"
        elif [ `nisdomainname` != "(none)" ]; then
          domain=`nisdomainname`
          $echo "    NIS+ domain name: $domain"
        else
          $echo "    NIS+ domain name NOT DEFINED"
        fi
      elif [ `$echo $ns | egrep -wc 'nis|yp'` -gt 0 ]; then
        hostlookup=ok
        $echo "  Name service: NIS"
        if [ -s /etc/defaultdomain ]; then
          domain=`cat /etc/defaultdomain`
          $echo "    NIS domain name: $domain"
        fi
      elif [ `$echo $ns | grep -wc 'compat'` -gt 0 ]; then
        hostlookup=ok
        $echo "  Name service: NIS (compat mode)"
        if [ -s /etc/defaultdomain ]; then
          domain=`cat /etc/defaultdomain`
          $echo "    NIS domain name: $domain"
        elif [ `nisdomainname` != "(none)" ]; then
          domain=`nisdomainname`
          $echo "    NIS domain name: $domain"
        else
          $echo "    NIS domain name NOT DEFINED"
        fi
      elif [ `$echo $ns | grep -wc dns` -gt 0 ]; then
        hostlookup=ok
        $echo "  Name service: DNS"
        #----------------------------------------------------
        # check for erroneous domain name setting
        #----------------------------------------------------
        domain=`dnsdomainname`
        domainnameOK=0
        if [ "$domain" = "" -o "$domain" = "(none)" ]; then
          domain=`domainname`
        fi
        if [ "$domain" = "" -o "$domain" = "(none)" ]; then
          $echo "  DNS WARNING - DOMAIN NAME NOT OR NOT PROPERLY DEFINED"
          if [ -s /etc/resolv.conf ]; then
            domain=`grep '^domain ' < /etc/resolv.conf | $awk '{print $2}'`
            if [ "$domain" = "" -o "$domain" = "(none)" ]; then
              if [ -s /etc/resolv.conf ]; then
                domain=`grep '^search ' < /etc/resolv.conf | $awk '{print $2}'`
              fi
              if [ "$domain" = "" -o "$domain" = "(none)" ]; then
                numrec=`expr $numrec + 1`
                cat >> ${SP_REC}.osnetwork << %
The local DNS domain name is NOT DEFINED; for DNS this is usually done through
a line in "/etc/resolv.conf" reading
        search domain.name
or
        domain domain.name
where "domain.name" is the domain part of the "fully qualified domain name"
(FQDN) of your host, and looks like "mycompany.co.uk". The Internet domain
name is typically also (primarily) defined through a line
        HOSTNAME=hostname.domain.name
in "/etc/sysconfig/network".

%
              else
		numrec=`expr $numrec + 1`
                cat >> ${SP_REC}.osnetwork << %
The local DNS domain name is NOT PROPERLY DEFINED; DNS may be functional due
to an entry
        search $domain
in "/etc/resolv.conf"; for a better / more complete domain name definition
which also makes commands such as
	domainname
	dnsdomainname
	hostname --fqdn
work, the fully qualified Internet domain / host name (FQDN) should be defined
through a line
        HOSTNAME=${shost}.$domain
in "/etc/sysconfig/network".

%
              fi
            else
	      numrec=`expr $numrec + 1`
              cat >> ${SP_REC}.osnetwork << %
The local DNS domain name is NOT PROPERLY DEFINED; DNS may be functional due
to an entry
        domain $domain
in "/etc/resolv.conf"; for a better / more complete domain name definition
which also makes commands such as
	domainname
	dnsdomainname
	hostname --fqdn
work, the fully qualified Internet domain / host name (FQDN) should be defined
through a line
        HOSTNAME=${shost}.$domain
in "/etc/sysconfig/network".

%
            fi
          else
            numrec=`expr $numrec + 1`
            cat >> ${SP_REC}.osnetwork << %
The local DNS domain name is NOT DEFINED; for DNS this is usually done through
a line in "/etc/resolv.conf" reading
        search domain.name
or
        domain domain.name
where "domain.name" is the domain part of the "fully qualified domain name"
(FQDN) of your host, and looks like "mycompany.co.uk". The Internet domain
name is typically also (primarily) defined through a line
	HOSTNAME=hostname.domain.name
in "/etc/sysconfig/network".

%
          fi
        fi
        if [ `echo $domain | grep -cw localdomain` -ne 0 -o \
               `echo $domain | grep -cw localhost` -ne 0 ]; then
          $echo "  DNS: ERRONEOUS DOMAIN NAME \"$domain\""
          numrec=`expr $numrec + 1`
          fmt --width=79 >> ${SP_REC}.osnetwork << %
DNS (the Internet domain  name service) cannot work with the domain name
"$domain" as present in this system; proper Internet domain names look like
"mycompany.co.uk" or "myuniversity.edu" and are part of the "fully qualified
domain (host) name" (FQDN) and is typically specified in a line
%
          cat >> ${SP_REC}.osnetwork << %
        search domain.name
or
        domain domain.name
in the "/etc/resolv.conf". The Internet domain name (FQDN) is typically also
(primarily) defined through a line
        HOSTNAME=hostname.domain.name
in "/etc/sysconfig/network".

%
        else
          $echo "    domain name: $domain"
          domainnameOK=1
        fi

        #----------------------------------------------------
        # check for erroneous entries in "/etc/resolv.conf"
        #----------------------------------------------------
        if [ -s /etc/resolv.conf -a $domainnameOK -ne 0 ]; then
          $echo "  Checking contents of \"/etc/resolv.conf\" ...\c"
          resok=0
          fqdn=`hostname --fqdn`
          domainline=`grep '^domain ' < /etc/resolv.conf`
          if [ `$echo $domainline | grep -wc localhost` -ne 0 -o \
               `$echo $domainline | grep -wc localdomain` -ne 0 ]; then
            $echo
	    resok=1
            $echo "  ERROR: bad \"domain\" definition in \"/etc/resolv.conf\"."
            numrec=`expr $numrec + 1`
            cat >> ${SP_REC}.osnetwork << %
The file "/etc/resolv.conf" includes a bad domain definition in the line
	$domainline
This line should show the proper Internet domain name, "$domain":
	domain $domain
The domain name is part of the "fully qualified Internet domain name" (FQDN)
that also includes the host name that should be defined in a line
	HOSTNAME=$fqdn
in "/etc/sysconfig/network".

%
          fi
	  searches=`grep '^search ' < /etc/resolv.conf`
          badsearch=0
          if [ `$echo $searches | grep -wc localhost` -ne 0 -o \
               `$echo $searches | grep -wc localdomain` -ne 0 ]; then
            badsearch=1
          fi
          if [ "x$domain" != x ]; then
            if [ $badsearch -eq 0 -a \
                 `$echo $searches | wc -l` -gt 0 -a \
                 `$echo $searches | grep -wc "$domain"` -eq 0 ]; then
              badsearch=1
            fi
          fi
          if [ $badsearch -ne 0 ]; then
            $echo
	    resok=1
            $echo "  ERROR: bad \"search\" definition in \"/etc/resolv.conf\"."
            numrec=`expr $numrec + 1`
            if [ `$echo "$searches" | wc -l` -gt 1 ]; then
              cat >> ${SP_REC}.osnetwork << %
The file "/etc/resolv.conf" includes a bad name search definition in the lines
%
              echo "$searches" | sed 's/^/        /' >> ${SP_REC}.osnetwork
              cat >> ${SP_REC}.osnetwork << %
These lines should include the proper Internet domain name for this system:
%
            else
              cat >> ${SP_REC}.osnetwork << %
The file "/etc/resolv.conf" includes a bad name search definition in the line
        $searches
This line should include the proper Internet domain name for this system:
%
            fi
            cat >> ${SP_REC}.osnetwork << %
        search $domain
Additional local search domains MAY be included on this line. The domain name
is part of the "fully qualified Internet domain name" (FQDN) that also
includes the host name that should be defined in a line
        HOSTNAME=$fqdn
in "/etc/sysconfig/network".

%
          fi
          if [ $resok -eq 0 ]; then
            $echo " OK."
          fi
        fi
        if [ -s /etc/resolv.conf ]; then
          nservers=`grep '^nameserver ' < /etc/resolv.conf | wc -l`
          ndns=0
          if [ $nservers -gt 0 ]; then
            $echo "  Trying connection to DNS name server(s):"
            for s in `grep '^nameserver ' < /etc/resolv.conf | \
		      $awk '{print $NF}'`; do
              $echo $s | $awk '{printf("    name server: %-15s",$1)}'
              pingOK=`$ping -q -c 1 $s 2> /dev/null | grep -c ' 1 received,'`
              if [ $pingOK -gt 0 ]; then
                $echo "  reachable."
                ndns=`expr $ndns + 1`
              else
                $echo "  NOT reachable using \"ping\"."
              fi
            done
          fi
          if [ $ndns -eq 0 ]; then
            if [ $nservers -eq 0 ]; then
              $echo "    NO NAME SERVERS DEFINED IN \"/etc/resolv.conf\""
              numrec=`expr $numrec + 1`
              cat >> ${SP_REC}.osnetwork << %
For DNS to work, you must define one or several name server(s) in the file
"/etc/resolv.conf"; using lines such as
	nameserver server1
	nameserver server2
	...
where "server1", "server2", etc. are the IP addresses (e.g.: 123.45.67.89) of
known DNS name servers that can be reached from your system (check with your
IT administrator).

%
            else
              $echo "    name servers in \"/etc/resolv.conf\"\c"
              $echo " NOT REACHABLE using \"ping\""
              numrec=`expr $numrec + 1`
              cat >> ${SP_REC}.osnetwork << %
The name servers specified in "/etc/resolv.conf" can NOT be reached using
"ping"; this can be because
 - "ping" responses are disabled on the specified system(s), or
 - the name server IP addresses in "/etc/resolv.conf" are incorrect, or
 - the gatewaty specification on this system is incorrect (check with your
 - the network router / gateway is down, disabled, or misconfigured.
In the case of problems with Internet access you may want to check with your
IT administrator.

%
            fi
          fi
        else
          $echo "    NO DNS SETUP IN \"/etc/resolv.conf\""
          numrec=`expr $numrec + 1`
          cat >> ${SP_REC}.osnetwork << %
No DNS servers have been specified on this system. Specify one or several DNS
name servers, using "System" -> "Administration" -> "Network" (look under the
"DNS" tab). If you don't know the IP addresses for valid DNS servers for your
system, please check with our IT administrator.

%
        fi
      elif [ \! -s /etc/resolv.conf ]; then
        $echo "  Name service: NONE"
      else
        $echo "  Name service: NOT ACTIVATED in \"/etc/nsswitch.conf\""
      fi
    else
      $echo "  No routing setup found - Internet naming service NOT checked."
    fi


    #--------------------------------------------------------
    # report NSS configuration
    #--------------------------------------------------------
    if [ -s /etc/nsswitch.conf -a \
         `egrep '^passwd|^shadow|^group' < /etc/nsswitch.conf | wc -l` \
         -gt 0 ]; then
      $echo "  Name Service Switch (NSS) settings from \"/etc/nsswitch.conf\":"
      cat /etc/nsswitch.conf | grep '^[a-z][a-z]*:' | \
        sed 's/#.*//
             s/^/    /'
    fi


    #--------------------------------------------------------
    # check for NTP setup
    #--------------------------------------------------------
    ntpon=0
    if [ `ps -e | grep -c ntpd` -ne 0 ]; then
      ntpon=1
    fi
    if [ -s /etc/ntp.conf ]; then
      ntpmod=1
      ntpfunc=1
      if [ `grep '^server' < /etc/ntp.conf | \
            grep -cv '\.pool\.ntp.\org'` -eq 0 ]; then
        ntpmod=0
      fi
      ntpservers=`grep '^server' < /etc/ntp.conf | $awk '{print $2}'`
      if [ "$ntpservers" != "" ]; then
        pingOK=0
        serverOK=0
        for h in $ntpservers; do
          pingOK=`$ping -q -c 1 $h 2> /dev/null | grep -c ' 1 received,'`
          if [ $pingOK -gt 0 ]; then
            serverOK=`expr $serverOK + 1`
          fi
        done
        if [ $serverOK -eq 0 ]; then
          ntpfunc=0
        fi
      fi
      ntpdrift=`grep '^driftfile' < /etc/ntp.conf | $awk '{print $2}'`
      if [ -h $ntpdrift ]; then
        ntpdrift=`ls -l $ntpdrift | $awk '{print $NF}'`
      fi
      if [ \! -f $ntpdrift ]; then
        ntpfunc=0
      fi
      if [ $ntpon -ne 0 ]; then
        $echo "  System time synchronized using NTP (ntpd):"
      elif [ $ntpfunc -ne 0 ]; then
        $echo "  System time MAY BE synchronized using NTP:"
      fi
      if [ $ntpfunc -ne 0 ]; then
        $echo "    NTP servers defined / selected in \"/etc/ntp.conf\":"
        for h in $ntpservers; do
          pingOK=`$ping -q -c 1 $h 2> /dev/null | grep -c ' 1 received,'`
          echo $h | $awk '{printf("        %-32s",$1)}'
          if [ $pingOK -gt 0 ]; then
            $echo " (reachable with \"ping\")"
          else
            $echo " (NOT reachable)"
          fi
        done
        if [ -s $ntpdrift ]; then
          ntpm=`ls -l $ntpdrift | $awk '{print $6}'`
          case $ntpm in
            Jan) ntpm=01 ;;
            Feb) ntpm=02 ;;
            Mar) ntpm=03 ;;
            Apr) ntpm=04 ;;
            May) ntpm=05 ;;
            Jun) ntpm=06 ;;
            Jul) ntpm=07 ;;
            Aug) ntpm=08 ;;
            Sep) ntpm=09 ;;
            Oct) ntpm=10 ;;
            Nov) ntpm=11 ;;
            Dec) ntpm=12 ;;
          esac
          ntpd=`ls -l $ntpdrift | $awk '{print $7}'`
          if [ $ntpd -lt 10 ]; then
            ntpd=0$ntpd
          fi
          ntpt=`ls -l $ntpdrift | $awk '{print $8}'`
          ntpy=`date '+%Y'`
          $echo "    last successful synchronization:  \c"
          if [ `$echo $ntpt | grep -c ':'` -eq 0 ]; then
            ntpy=$ntpt
            $echo "$ntpy-$ntpm-$ntpd"
          else
            if [ `date '+%m'` -lt $ntpm ]; then
              ntpy=`expr $ntpy - 1`
            fi
            $echo "$ntpy-$ntpm-$ntpd $ntpt"
          fi
        fi
      fi
      if [ $ntpon -eq 0 ]; then
        cat << %
  NTPD (the NTP daemon) appears NOT to be running on this system; this
  may be because
    - it has never been set up correctly on this system
    - there is a firewall or an IT department that doesn't permit accessing
      an NTP server
    - the local security settings (SELinux auditing) on this system don't
      allow contacting an NTP server
    - the time offset on this system was over 1000 seconds, and hence "ntpd"
      did a one-time adjustment only, then exited
  See Agilent MR News 2007-12-03 for a discussion of these issues, and how
  to resolve them. We STRONGLY recommend that you at least run "rdate"
  as root periodically (best via "cron" job) in order to keep the clock
  close to the proper time. Clearly, using "ntpd" is the better / preferable
  solution, though.
%
      fi
    else
      fmt --width=79 << %
  It appears that NTP / "ntpd" (the NTP daemon) has never been set up on
  this system; in order to avoid your system clock running behind or
  ahead of other systems in the network you should at least use "rdate"
  as root (best via a periodic "cron" job) to keep the clock close to the
  proper time. Better yet, set up "ndpd" to keep your clock adjusted at
  all times - see Agilent MR News 2007-12-03 for a recipe and a detailed
  discussion of this topic.
%
    fi

    #--------------------------------------------------------
    # check for alternative network interfaces / acquisition
    #--------------------------------------------------------
    if [ $n_acqs -gt 0 ]; then
      if [ $net_ports -gt 1 -a \! -f /etc/notrouter ]; then
        cat << %
  ATTENTION: The system has multiple active network interfaces
             and a file "/etc/notrouter" does NOT exist; the system
             may be running routing services which may interfere
             with the spectrometer host functionality!
%
      fi
    fi
  fi
}
#---------------------
# END os_network()
#---------------------


###############################################################################


#---------------------
# vj_acqnet()
#---------------------
vj_acqnet() {
  cd $wd
  if [ $net_on -ne 0 -a "$acqtype" != none ]; then
    cat << %

-------------------------------------------------------------------------------
 Acquisition Network:
-------------------------------------------------------------------------------
%
  ### check for acquisition access via router
  # if [ $routing -ne 0 -a "$acqtype" = none ]; then     # routing
  #   acq_ip=`expand hosts | sed 's/#.*//' | egrep ' inova$| inova ' | \
  #               $awk '{print $1}'`
  #   if [ "x$acq_ip" = x ]; then
  #     acq_ip=`expand hosts | sed 's/#.*//' | egrep ' gemcon$| gemcon ' | \
  #               $awk '{print $1}'`
  #   fi
  #   loc_ip=`expand hosts | sed 's/#.*//' | egrep " $host\$| $host " | \
  #               $awk '{print $1}'`
  #   loc_net=`$eval_netmask $loc_ip | $awk '{print $1}'`
  #   if [ "x$acq_ip" != x ]; then
  #     acq_net=`$eval_netmask $acq_ip | $awk '{print $1}'`
  #     if [ "x$acq_net" = "x$loc_net" ]; then
  #       acqtype=router
  #     else
  #       acqtype=net
  #     fi
  #   fi
  # else  # no routing
  #   acq_ip=`expand hosts | sed 's/#.*//' | egrep ' inova$| inova ' | \
  #               $awk '{print $1}'`
  #   if [ "x$acq_ip" = x ]; then
  #     acq_ip=`expand hosts | sed 's/#.*//' | egrep ' gemcon$| gemcon ' | \
  #             $awk '{print $1}'`
  #   fi
  #   if [ "x$acq_ip" != x ]; then
  #     acqtype=net
  #   fi
  # fi

    $echo "  Console communication uses interface \"$acq_if\"\c"
    case $acqtype in
      "net")
          $echo ;;
      "dualnet")
          $echo
          if [ $nets -gt 1 ]; then
            $echo "    (interfaces\c"
            $ixn=0
            for f in $active_if; do
              if [ $ixn -gt 0 -a $nets -gt 2 ]; then
                $echo ","
              fi
              if [ $ixn -eq $nets ]; then
                $echo " and\c"
              fi
              $echo " \"$acq_if\"\c"
              ixn=`expr $ixn + 1`
            done
            $echo " used for WAN connectivity)"
          else
            $echo "    (interface \"$active_if\" used for WAN connectivity)"
          fi ;;
      "router")
          $echo " via router" ;;
    esac

    if [ "$system" = "UNITY INOVA" -a "$acqtype" != "none" ]; then
      bigkernel=0
      bigkernelPPC=0
      if [ `ls -l $vnmrsystem/acq/vxBoot 2> /dev/null | grep -c small` -eq 0 ]
      then
        bigkernel=1
      fi
      if [ `ls -l $vnmrsystem/acq/vxBootPPC 2> /dev/null | grep -c small` \
            -eq 0 ]; then
        bigkernelPPC=1
      fi
      if [ $bigkernel -eq 1 ]; then
        if [ $bigkernelPPC -eq 1 ]; then
          $echo "  Big VxWorks kernel selected for acquisition CPU"
        else
          $echo "  Big   VxWorks kernel selected for acquisition CPU (68040)"
          $echo "  Small VxWorks kernel selected for acquisition CPU (PPC)"
        fi
      else
        if [ $bigkernelPPC -eq 1 ]; then
          $echo "  Small VxWorks kernel selected for acquisition CPU (68040)"
          $echo "  Big   VxWorks kernel selected for acquisition CPU (PPC)"
        else
          $echo "  Small VxWorks kernel selected for acquisition CPU"
        fi
      fi
    fi
  fi
}
#---------------------
# END vj_acqnet()
#---------------------


###############################################################################


#---------------------
# console_config()
#---------------------
console_config() {
  cd $wd
  if [ $vnmrdir -ne 0 -a $acq -ne 0 -a -x $vnmrsystem/bin/vconfig ]; then
    cat << %

-------------------------------------------------------------------------------
 VnmrJ Spectrometer Software Configuration ("$vnmrsystem/conpar" via "vconfig")
-------------------------------------------------------------------------------
%
    $vnmrsystem/bin/vconfig display | sed 's/^/        /' | $awk '{
      if (NF > 0) {print}
    }'
  elif [ -d $vnmruser/exp1 -a \
         -f $vnmrsystem/maclib/config -a -x $vnmrsystem/bin/Vnmr ]; then
    cat << %

-------------------------------------------------------------------------------
 VnmrJ Spectrometer Software Configuration ("$vnmrsystem/conpar", via "config")
-------------------------------------------------------------------------------
%
    ix=1
    srcexp=$vnmruser/exp${ix}
    srcpar=${srcexp}/curpar
    while [ \! -d $srcexp -a $ix -lt 1000 ]; do
      ix=`expr $ix + 1`
      srcexp=$vnmruser/exp${ix}
      srcpar=${srcexp}/curpar
    done
    if [ \! -d $srcexp -a -d $vnmrsystem/stdpar/H1.par ]; then
      srcexp=$vnmrsystem/stdpar/H1.par
      srcpar=${srcexp}/procpar
    fi
    if [ -d $srcexp ]; then
      exp=8642
      while [ -d $vnmruser/exp$exp ]; do
        exp=`expr $exp - 1`
      done
      mkdir $vnmruser/exp${exp}
      mkdir $vnmruser/exp${exp}/acqfil
      mkdir $vnmruser/exp${exp}/datdir
      cp $srcexp/text $vnmruser/exp${exp}
      cp $srcpar $vnmruser/exp${exp}/curpar
      cp $srcpar $vnmruser/exp${exp}/procpar
      if [ "$cons_type" = "ddr" ]; then
        Vnmr -mback -n${exp} "config('display')" 2>&1 | $tail -n +3 | \
            grep -v 'bad syntax, perhaps a bogus' | \
            egrep -v 'SVPAR|SAVEDATA|Waveform Generator' | expand | $awk '{
          if ($0 ~ /Type of RF/)
          {
            if (($4 == "Direct") && ($5 == "H1") && ($6 ~ /^[Oo]nly$/))
            {
              l1 = length("Type of RF             Direct       Direct")
              printf("Type of RF             Hi-Band      Lo-Band")
              if (length($0) > l1)
              {
                rem=substr($0, l1 + 2, length($0) - (l1 + 1))
                printf("%s", rem)
              }
              printf("\n")
            }
            else
            {
              print
            }
          }
          else
          {
            if (NF > 0) {print}
          }
        }' | sed 's/^/  /'
      else
        numrfch=`cat $vnmrsystem/conpar | $awk '{
          if ($0 ~ /^numrfch /)
          {
            getline; print $NF
          }
        }'`
        rfwg=`cat $vnmrsystem/conpar | $awk '{
          if ($0 ~ /^rfwg /)
          {
            getline; print $NF
          }
        }' | sed 's/"//g'`
        Vnmr -mback -n${exp} "config('display')" 2>&1 | $tail -n +3 | \
            grep -v 'bad syntax, perhaps a bogus' | \
            egrep -v 'SVPAR|SAVEDATA' | expand | $awk '{
          if (NF > 0)
          {
            if ($0 ~ /^Waveform Generator/)
            {
              rfwg="'$rfwg'"
              printf("Waveform Generator   ")
              for (i = 1; i <= '$numrfch'; i++)
              {
                if (substr(rfwg, i, 1) ~ /y/)
                  printf("  Present    ")
                else
                  printf("  Not Present")
              }
              printf("\n")
            }
            else
              print
          }
        }' | sed 's/^/  /
        s/ [ ]*$//' | tee $vnmruser/${exp}.output.$$
        if [ `wc -w < $vnmruser/${exp}.output.$$` -eq 0 ]; then
          $echo "Cannot show VnmrJ configuration using \"config('display')\""
        fi
        rm -f $vnmruser/${exp}.output.$$
      fi
      rm -rf $vnmruser/exp${exp} $vnmruser/lock_${exp}.primary
    else
      $echo "Unable to evaluate VnmrJ configuration using \"config('display')\""
    fi
  fi
}
#---------------------
# END console_config()
#---------------------


###############################################################################


#---------------------
# vj_acqcomm()
#---------------------
vj_acqcomm() {
  cd $wd

  if [ $acq -ne 0 -a $showacq -ne 0 -a $net_on -ne 0 ]; then
    cat << %

-------------------------------------------------------------------------------
 Acquisition Setup, Interface & Communication:
-------------------------------------------------------------------------------
%

    #--------------------------------------------
    # ping acquisition computer(s) / controllers
    #--------------------------------------------
    cd /etc
    if [ "$acqtype" = dualnet ]; then
      $echo "  Console communication via 2nd Ethernet interface \"$acq_if\" ..."
    elif [ "$acqtype" = net ]; then
      $echo "  Console communication via Ethernet, system not networked ..."
    else
      $echo "  Console communication via external router ..."
    fi
    if [ "$vnmropt" = inova -a \
         "$system" != DirectDrive -a "$system" != "400-MR" ]; then
      msrbd=1
    else
      msrbd=0
    fi
    acqfail=0
    if [ "$system" = DirectDrive -o "$system" = "400-MR" ]; then
      for h in master1 rf1 rf2 rf3 rf4 rf5 rf6 rf7 rf8 rf9 rf10 rf11 rf12 \
          rf13 rf14 rf15 rf16 pfg1 pfg2 grad1 lock1 ddr1 ddr2 ddr3 ddr4 ddr5 \
          ddr6 ddr7 ddr8 ddr9 ddr10 ddr11 ddr12 ddr13 ddr14 ddr15 ddr16 \
          V-Autosampler V-Cryobay V-AS768 V-AS768Robot V-LcWorkstation \
          V-Pda V-Protune V-Slim V-Trap; do
        if [ -f $vnmrsystem/acqqueue/acqi.init.$h -o \
             -f $vnmrsystem/acqqueue/acqi.ps.$h ]; then
          ex=`expand hosts | sed 's/#.*//' | egrep -c " $h\$| $h "`
          if [ $ex -gt 0 ]; then
            h_ip=`expand hosts | sed 's/#.*//' | egrep " $h\$| $h " | \
                  $awk '{print $1}'`
            $echo $h $h_ip | $awk '{printf("        %-15s @ %s:",$1,$2)}'
            pingOK=`$ping -q -c 1 $h 2> /dev/null | grep -c ' 1 received,'`
            if [ $pingOK -gt 0 ]; then
              $echo " communication OK"
            elif [ $h = lock1 -a "$system" != "400-MR" ]; then
              $echo " not present or not reachable"
            else
              $echo " currently NOT reachable"
              acqfail=`expr $acqfail + 1`
            fi
          fi
        fi
      done
    else
      for h in inova inovaauto slim V-Autosampler V-Cryobay V-AS768 \
               V-AS768Robot V-LcWorkstation V-Pda V-Protune V-Slim V-Trap; do
        if [ \( "$h" = inovaauto -a $msrbd -eq 1 \) -o "$h" != inovaauto ]; then
          ex=`expand hosts | sed 's/#.*//' | egrep -c " $h\$| $h "`
          if [ $ex -gt 0 ]; then
            h_ip=`expand hosts | sed 's/#.*//' | egrep " $h\$| $h " | \
                  $awk '{print $1}'`
            $echo $h $h_ip | $awk '{printf("        %-15s @ %s:",$1,$2)}'
            pingOK=`$ping -q -c 1 $h 2> /dev/null | grep -c ' 1 received,'`
            if [ $pingOK -gt 0 ]; then
              $echo " communication OK"
            else
              $echo " currently NOT reachable"
              acqfail=`expr $acqfail + 1`
            fi
          fi
        fi
      done
    fi


    #-----------------------------------
    # check for acquisition process(es)
    #-----------------------------------
    procs=`ps -e | grep -c Expproc`
    if [ $procs -gt 0 ]; then

      #-----------------------------------------------
      # Expproc / VxWorks: check big vs. small kernel
      #-----------------------------------------------
      $echo "  Expproc running\c"
      cd $vnmrsystem/acq
      smallk=`ls -l vxBoot vxBootPPC 2> /dev/null | grep -c small`
      if [ "$system" = DirectDrive -o "$system" = "400-MR" ]; then
        $echo
      elif [ $smallk -gt 0 ]; then
        $echo ", using small VxWorks kernel."
      else
        $echo ", using big VxWorks kernel."
      fi
    else

      #---------------------------
      # check for running Acqproc
      #---------------------------
      procs=`ps -e | grep -c Acqproc`
      if [ $procs -gt 0 ]; then
        $echo "  Acqproc running."
      fi
    fi

    if [ $procs -eq 0 ]; then
      acqfail=`expr $acqfail + 1`
    fi


    #---------------------------------------------------------
    # Output / Hints about Acquisition Communication Failures
    #---------------------------------------------------------
    if [ $acqfail -gt 0 ]; then
      if [ "$system" = DirectDrive -o "$system" = "400-MR" ]; then
        if [ $procs -gt 0 ]; then
          cat << %
  Problems with console communication / acquisition non-functional: hardware
    problems in the console?
%
        else
          cat << %
  Problems with console communication / acquisition non-functional: console
    switched off or acquisition processes disabled via "su acqproc"?
%
        fi
      elif [ "$system" = "UNITY INOVA" ]; then
        if [ -f /etc/bootptab ]; then
          bpline=`grep '^inova:' < /etc/bootptab`
          if [ $rh4 -gt 0 ]; then
            vbpfile="$vnmrsystem/acq/bootptab"
          elif [ `$echo $vnmrrev | egrep -c '2\.2D'` -ne 0 ]; then
            vbpfile="$vnmrsystem/acq/bootptab"
          else
            vbpfile="$vnmrsystem/acq/bootptab51"
          fi
          if [ `$echo $bpline | grep -c 'bf=vxWorks:'` -ne 0 ]; then
            nbpline=`$echo $bpline | sed 's/vxWorks:/vxWorksPPC:/'`
            cat << %
  NOTE: This is a UNITY INOVA running $vnmrrev, acquisition / console
    communication appears to be inactive. If there is a problem getting
    acquisition communication to work AND this is a console with PowerPC
    (PPC) based acquisition CPU (the CPU board has two connectors: a serial
    port labeled "DIAG", and a 10/100BaseT Ethernet port), you may need to
    apply one of the workarounds described in bug report "acquisition.j2206".
    The simplest option consists of changing the line
$bpline
    in the file "/etc/bootptab" to
$nbpline
    The same change should also be done in "$vbpfile".
    The PowerPC-based acquisition CPU has two connectors on the front (one
    labeled "DEBUG", and a 10/100BaseT Ethernet port). The older, MC68040
    based acquisition CPU is labeled "Motorola 162"; it has four serial ports
    and uses an external 10BaseT Ethernet transceiver. If the system has a
    "Motorola 162" acquisition CPU, there is a different reason for the
    failure to communicate with the acquisition CPU (console switched off?
    Acquisition processes disabled via "su acqproc"?).
%
          elif [ `$echo $bpline | grep -c 'bf=vxWorksPPC:'` -ne 0 ]; then
            nbpline=`$echo $bpline | sed 's/vxWorksPPC:/vxWorks:/'`
            cat << %
  NOTE: This is a UNITY INOVA running $vnmrrev, acquisition / console
    communication appears to be inactive. If there is a problem getting
    acquisition communication to work AND this is a console with Motorola
    MC68040 based acquisition CPU (the CPU board is labeled "Motorola 162"; it
    has four serial ports and uses an external 10BaseT Ethernet transceiver),
    you may need to use the workaround described in bug report "setacq.j1104".
    This consists in changing the line
$bpline
    in the file "/etc/bootptab" to
$nbpline
    The same change should also be done in "$vbpfile".
    The PowerPC-based acquisition CPU has two connectors on the front (one
    labeled "DEBUG", and a 10/100BaseT Ethernet port) - in this case, the
    first line above is correct.
    If the system has a PowerPC-based acquisition CPU, there is a different
    reason for the failure to communicate with the acquisition CPU (console
    switched off? Acquisition processes disabled via "su acqproc"?).
%
          else
            fmt -c --width=79 << %
  Problems with console communication - acquisition non-functional: console
    switched off or acquisition processes disabled via "su acqproc"?
%
          fi
          cat /etc/bootptab | tr --delete '[0-9]' > $tmp
          cat $vbpfile | tr --delete '[0-9]' > $tmp.2
          if [ `diff -w $tmp $tmp.2 | wc -l` -ne 0 ]; then
            fmt -c --width=79 << %
  WARNING: the files "/etc/bootptab" and "$vbpfile" should be maintained in
    parallel (i.e., if you need to change "/etc/bootptab", apply the same
    change to "$vbpfile" as well), otherwise you may lose the acquisition
    functionality after calling "setacq" next time! Note that these two files
    are typically NOT IDENTICAL (the file in "/etc" is modified by "setacq")!
%
          fi
          rm -f $tmp $tmp.2
          if [ `grep '^inovaauto:' < /etc/bootptab | \
                grep -c 'bf=vxWorks.auto:'`  -ne 1 ]; then
            fmt -c --width=79 << %
  WARNING: in the file "/etc/bootptab" the line that holds the boot definition
    for the MSR board MUST include the instruction ":bf=vxWorks.auto:" -
    otherwise the MSR (automation) board will not boot!
%
          fi
          if [ `grep '^inovaauto:' < $vbpfile | \
                grep -c ':bf=vxWorks.auto:'` -ne 1 ]; then
            fmt -c --width=79 << %
  WARNING: in the file "$vbpfile" the line holding the boot definition for the
    MSR board MUST include the instruction ":bf=vxWorks.auto:" - otherwise the
    MSR (automation) board will not boot after calling "setacq" next time!
%
          fi
        else
          fmt -c --width=79 << %
  The file "/etc/bootptab" is not present - it appears that
    "$vnmrsystem/bin/setacq" has not been called on this system.
%
        fi
      else   # MERCURYplus / MERCURY-Vx
        if [ -f /etc/bootptab ]; then
          cat << %
  Problems with console communication / acquisition non-functional: console
    switched off or acquisition processes disabled via "su acqproc"?
%
        else
          fmt -c --width=79 << %
  The file "/etc/bootptab" is not present - it appears that
    "$vnmrsystem/bin/setacq" has not been called on this system.
%
        fi
      fi
    fi
  fi
}
#---------------------
# END vj_acqcomm()
#---------------------


###############################################################################


#---------------------
# vj_acqstat()
#---------------------
vj_acqstat() {
  cd $wd
  if [ $acq -ne 0 -a $showacq -ne 0 -a $net_on -ne 0 -a \
       $procs -gt 0 -a -x $vnmrsystem/bin/showstat ]; then
    cat << %

-------------------------------------------------------------------------------
 Current Acquisition Status
-------------------------------------------------------------------------------
%
    showstat 2>&1 | sed 's/^/        /' | $awk 'BEGIN {
      getline
      if ($NF == "Idle")
        idle=1
      else
        idle=0
      print
    }
    {
      if (idle == 1)
      {
        if (($1 ~ /^VT/) || ($1 ~ /^[Ss]pin/) || ($1 ~ /^[Ll]ock/) ||
            ($1 ~ /^Air/) || ($1 ~ /^Decoupler/))
          print
      }
      else
        print
    }'
  fi
}
#---------------------
# END vj_acqstat()
#---------------------


###############################################################################


#---------------------
# vj_probecalib()
#---------------------
vj_probecalib() {
  cd $wd
  if [ $acq -ne 0 -a $showacq -ne 0 -a $net_on -ne 0 ]; then
    cat << %

-------------------------------------------------------------------------------
 Shimming and Probe Calibration
-------------------------------------------------------------------------------
%
    if [ $procs -gt 0 ]; then
      masteruser=`ls -ld $vnmrsystem/bin 2> /dev/null | $awk '{print $3}'`
      masterdir=`csh -c "$echo ~$masteruser" 2> /dev/null`
      masterdir=$masterdir/vnmrsys
      numentries=`ls -ld $vnmrsystem/probes/* 2> /dev/null | \
            egrep -vc 'probe.tmplt|safety_levels'`
      numentries=`expr $numentries + 0`
      if [ $numentries -gt 0 ]; then
        cd $vnmrsystem/probes
        $echo "  Probe calibration data in \"$vnmrsystem/probes\":"
        ix=1
        for f in `ls -d1 * 2> /dev/null | egrep -v 'probe.tmplt|safety_levels'`
        do
          if [ -f $f/$f ]; then
            if [ $ix -eq 1 ]; then
              ls -dgo $f/$f | showfiles -b
            else
              ls -dgo $f/$f | showfiles -b -h
            fi
          else
            if [ $ix -eq 1 ]; then
              ls -dgoF $f | showfiles
            else
              ls -dgoF $f | showfiles -h
            fi
          fi
          ix=`expr $ix + 1`
        done
        $echo "    ($numentries entries total)"
        doseparator=1
      fi
      numentries=`ls -ld $masterdir/probes/* 2> /dev/null | wc -l`
      numentries=`expr $numentries + 0`
      if [ $numentries -gt 0 ]; then
        if [ $doseparator -ne 0 ]; then
          cat << %
  -----------------------------------------------------------------------------
%
        fi
        $echo "  Probe calibration data in \"$masterdir/probes\":"
        cd $masterdir/probes
        ix=1
        for f in `ls -d1 * 2> /dev/null`; do
          if [ -f $f/$f ]; then
            if [ $ix -eq 1 ]; then
              ls -dgo $f/$f | showfiles -b
            else
              ls -dgo $f/$f | showfiles -b -h
            fi
          else
            if [ $ix -eq 1 ]; then
              ls -dgoF $f | showfiles
            else
              ls -dgoF $f | showfiles -h
            fi
          fi
          ix=`expr $ix + 1`
        done
        $echo "    ($numentries entries total)"
        doseparator=1
      fi
    fi
  fi
  return $doseparator
}
#---------------------
# END vj_probecalib()
#---------------------


###############################################################################


#---------------------
# vj_shims()
#---------------------
vj_shims() {
  cd $wd
  if [ $acq -ne 0 -a $showacq -ne 0 -a $net_on -ne 0 ]; then
    numentries=`ls -ld $vnmrsystem/shims/* 2>/dev/null | grep -vcw 'reg0'`
    numentries=`expr $numentries + 0`
    if [ $numentries -gt 0 ]; then
      if [ $doseparator -ne 0 ]; then
        cat << %
  -----------------------------------------------------------------------------
%
      fi
      cd $vnmrsystem/shims
      $echo "  Shim sets stored in \"$vnmrsystem/shims\":"
      ls -go * 2> /dev/null | grep -vw 'reg0' | showfiles
      $echo "    ($numentries entries total)"
      doseparator=1
    fi
    numentries=`ls -ld $masterdir/shims/* 2>/dev/null | wc -l`
    numentries=`expr $numentries + 0`
    if [ $numentries -gt 0 ]; then
      if [ $doseparator -ne 0 ]; then
        cat << %
  -----------------------------------------------------------------------------
%
      fi
      cd $masterdir/shims
      $echo "  Shim sets stored in \"$masterdir/shims\":"
      ls -go * 2> /dev/null | showfiles
      $echo "    ($numentries entries total)"
      doseparator=1
    fi
    numentries=`ls -ld $vnmrsystem/gshimlib/shimmaps/*.fid 2>/dev/null | wc -l`
    numentries=`expr $numentries + 0`
    if [ $numentries -gt 0 ]; then
      if [ $doseparator -ne 0 ]; then
        cat << %
  -----------------------------------------------------------------------------
%
      fi
      cd $vnmrsystem/gshimlib/shimmaps
      $echo "  Gradient shim maps stored in \"$vnmrsystem/gshimlib/shimmaps\":"
      ls -gdo *.fid 2> /dev/null | showfiles | sed 's/\.fid[\/]*$//' | \
                grep -vw 'reg0'
      $echo "    ($numentries entries total)"
      doseparator=1
    fi
    numentries=`ls -ld $masterdir/gshimlib/shimmaps/*.fid 2>/dev/null | wc -l`
    numentries=`expr $numentries + 0`
    if [ $numentries -gt 0 ]; then
      if [ $doseparator -ne 0 ]; then
        cat << %
  -----------------------------------------------------------------------------
%
      fi
      cd $masterdir/gshimlib/shimmaps
      $echo "  Gradient shim maps stored in \"$masterdir/gshimlib/shimmaps\":"
      ls -gdo *.fid 2> /dev/null | showfiles | sed 's/\.fid[\/]*$//' | \
                grep -vw 'reg0'
      $echo "    ($numentries entries total)"
      doseparator=1
    fi
    if [ $doseparator -eq 0 ]; then
      cat << %
  No data present / found; directories checked:
        $vnmrsystem/probes
        $masterdir/probes
        $vnmrsystem/shims
        $masterdir/shims
        $vnmrsystem/gshimlib/shimmaps
        $masterdir/gshimlib/shimmaps
%
    fi
  fi
  cd $wd
}
#---------------------
# END vj_shims()
#---------------------


###############################################################################


#---------------------
# console_hwconf()
#---------------------
console_hwconf() {
  cd $wd
  if [ $acq -ne 0 -a $showacq -ne 0 -a $net_on -ne 0 ]; then
    #----------------------------------------------------
    # show console (hardware) information, if available
    #----------------------------------------------------
    if [ $procs -gt 0 ]; then
      if [ \! -x $vnmrsystem/bin/showconsole ]; then
        fmt -c --width=78 << %
  Console hardware information read-out currently not available for
     this software version or spectrometer type.
%
      elif [ -f $vnmrsystem/acqqueue/acq.conf ]; then
        $echo "  Console hardware information read-out:"
        showconsole | $awk '{if (NF > 0) print}' | sed 's/^/        /'
      else
        cat << %
  Console hardware configuration read-out not available:
        The file "$vnmrsystem/acqqueue/acq.conf" is not present.
        You could stop Expproc with "su acqproc", then reboot the
        console and restart Expproc with "su acqproc", then try
                $wrappercmd $w_args
        again to see this information.
%
      fi
    fi
  fi
}
#---------------------
# END console_hwconf()
#---------------------


###############################################################################


#---------------------
# vj_seqgen()
#---------------------
vj_seqgen() {
  cd $wd
  numrec0=$numrec
  if [ -x $vnmrsystem/bin/seqgen -a $showcompil -ne 0 ]; then
    if [ \! -d $vnmruser/psglib ]; then
      mkdir -p $vnmruser/psglib
    fi
    if [ -f $vnmrsystem/psglib/s2pul.c ]; then
      seqname=s2pul
    elif [ -f $vnmrsystem/imaging/psglib/spuls.c ]; then
      seqname=spuls
    fi
    cd $vnmruser/psglib
    if [ "$seqname" != "" -o \
         `find . -name '*.errors' -a \! -size 0 | wc -l` -gt 0 ]; then
      cat << %

-------------------------------------------------------------------------------
 Checking VnmrJ Pulse Sequence Compilation
-------------------------------------------------------------------------------
%
    fi

    #------------------------------------------------------------------
    # reporting "dangling seqgen error files" in the local directories
    #------------------------------------------------------------------
    err_files=0
    lasterrfile=""
    if [ `ls $vnmruser/psglib/*.errors 2> /dev/null | wc -l` -gt 0 ]; then
      for f in `ls $vnmruser/psglib/*.errors`; do
        if [ -s $f ]; then
          if [ "$seqname" != "" ]; then
            if [ `$echo $f | grep -c "/${seqname}.errors"` -eq 0 ]; then
              err_files=`expr $err_files + 1`
              lasterrfile=`basename $f`
            fi
          else
            err_files=`expr $err_files + 1`
            lasterrfile=`basename $f`
          fi
        fi
      done
      if [ $err_files -gt 1 ]; then
        cat << %
  Note: the local "psglib" directory includes $err_files "seqgen" error files:
%
      elif [ $err_files -eq 1 ]; then
        cat << %
  Note: the local "psglib" directory includes a "seqgen" error file:
%
      fi
      if [ $err_files -gt 0 ]; then
        ls -dgo `find * -name '*.errors' -a \! -size 0` | showfiles
      fi
    fi

    #-------------------------
    # testing "seqgen" itself
    #-------------------------
    seqgenfail=0
    if [ "$seqname" != "" ]; then
      cat << %
  Testing "seqgen $seqname" ...
%
      pbkout=0
      sbkout=0
      stmp=`date '+%Y-%m-%d_%H%M'`
      if [ -f $vnmruser/psglib/${seqname}.c ]; then
        pbkout=1
        mv $vnmruser/psglib/${seqname}.c $vnmruser/psglib/${seqname}.c.bkup.$stmp
      fi
      if [ -x $vnmruser/seqlib/$seqname ]; then
        sbkout=1
        mv $vnmruser/seqlib/$seqname $vnmruser/seqlib/${seqname}.bkup.$stmp
      fi
      if [ -f $vnmruser/seqlib/${seqname}.c ]; then
        mv $vnmruser/seqlib/${seqname}.c $vnmruser/seqlib/${seqname}.c.bkup.$stmp
      fi
      if [ \! -f $vnmrsystem/psglib/${seqname}.c -a \
           -f $vnmrsystem/imaging/psglib/${seqname}.c ]; then
        cp $vnmrsystem/imaging/psglib/${seqname}.c $vnmruser/psglib
      fi
      seqgen $seqname >/dev/null 2>&1
      if [ -x $vnmruser/seqlib/$seqname ]; then
        if [ \! -s $vnmruser/psglib/${seqname}.errors ]; then
          $echo "    ... pulse sequence compilation OK."
        else
          seqgenfail=1
          cat << %
    ... pulse sequence "$seqname" compiled with error messages / warnings:
-------------------------------------------------------------------------------
%
          fmt -s --width=79 $vnmruser/psglib/${seqname}.errors | \
              $awk '{ if (NF > 0) print }'
          cat << %
-------------------------------------------------------------------------------
%
        fi
      else
        seqgenfail=2
        if [ \! -s $vnmruser/psglib/${seqname}.errors ]; then
          cat << %
    PULSE SEQUENCE COMPILATION FAILED, NO ERROR LOG FILE; COMMAND FEEDBACK:
-------------------------------------------------------------------------------
%
          seqgen ${seqname} 2>&1 | fmt -s --width=79 | \
            $awk '{ if (NF > 0) print }'
          cat << %
-------------------------------------------------------------------------------
%
        else
          cat << %
    PULSE SEQUENCE "$seqname" FAILED TO COMPILE; ERROR MESSAGES / WARNINGS:
-------------------------------------------------------------------------------
%
          fmt -s --width=79 $vnmruser/psglib/${seqname}.errors | \
              $awk '{ if (NF > 0) print }'
          cat << %
-------------------------------------------------------------------------------
%
        fi
      fi
      if [ $pbkout -eq 1 ]; then
        mv $vnmruser/psglib/${seqname}.c.bkup.$stmp $vnmruser/psglib/${seqname}.c
      else
        rm -f $vnmruser/psglib/${seqname}.c
      fi
      if [ $sbkout -eq 1 ]; then
        mv $vnmruser/seqlib/${seqname}.bkup.$stmp $vnmruser/seqlib/$seqname
        if [ -f $vnmruser/seqlib/${seqname}.c.bkup.$stmp ]; then
          mv $vnmruser/seqlib/${seqname}.c.bkup.$stmp \
             $vnmruser/seqlib/${seqname}.c
        fi
      else
        rm -f $vnmruser/seqlib/$seqname $vnmruser/seqlib/${seqname}.c
      fi
    fi
    cd $wd

    if [ $seqgenfail -eq 0 ]; then
      if [ $err_files -gt 1 ]; then
        fmt --width=79 >> ${SP_REC}.seqgen << %
Note: there are several files "seq_name.errors" in your "psglib" directory,
%
      elif [ $err_files -eq 1 ]; then
        fmt --width=79 >> ${SP_REC}.seqgen << %
Note: there is a file "$lasterrfile" in your local "psglib" directory,
%
      fi
      if [ $err_files -gt 0 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.seqgen << %
"$vnmruser/psglib" (see above), but "$seqname" actually compiles OK,
therefore, such error files are likely
%
        cat >> ${SP_REC}.seqgen << %
 - from pulse sequences with coding errors
 - from "seqgen" compilation attempts prior to the last VnmrJ patch install
 - from "seqgen" compilation attempts under an earlier VnmrJ installation
In the latter two cases such files can safely be discarded.

%
      fi
    elif [ $seqgenfail -eq 1 ]; then
      if [ $err_files -gt 0 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.seqgen << %
NOTE: "$seqname" COMPILES, BUT WITH ERROR / WARNING MESSAGES (see above for
details). Apart from this, there are error files ("seq_name.errors") from
other pulse sequences in your local "psglib" directory, "$vnmruser/psglib"
(see above); such error files may also be generated due to
%
        cat >> ${SP_REC}.seqgen << %
 - from pulse sequences with coding errors
 - from "seqgen" compilation attempts prior to the last VnmrJ patch install
 - from "seqgen" compilation attempts under an earlier VnmrJ installation
In the latter two cases such files can safely be discarded. NEVERTHELESS, we
STRONGLY RECOMMEND having a closer look at  the compiler error messages /
warnings from "seqgen $seqname".

%
      else
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.seqgen << %
NOTE: "$seqname" COMPILES WITH ERROR / WARNING MESSAGES - see above for
details. WE STRONGLY RECOMMEND CHECKING THE CONTENTS OF THE ERROR FILE, and to
correct the underlying issue, as this may affect the functioning of other
commands, such as  "fixpsg", "psggen", "wtgen" and other functions involving
compilation, and this may also prevent the installation of User Library
contributions such as Chempack, BioPack, etc.

%
      fi
    elif [ $seqgenfail -gt 1 ]; then
      numrec=`expr $numrec + 1`
      fmt --width=79 >> ${SP_REC}.seqgen << %
NOTE: "$seqname" FAILS TO COMPILE - see above for details. This is likely a
serious issue in the setup, such as
%
        cat >> ${SP_REC}.seqgen << %
 - the VnmrJ pulse sequence link libraries not being up-to-date, e.g., because
   a VnmrJ patch installation "forgot" to run "fixpsg"; in this case running
   "fixpsg" as vnmr1 may correct the issue;
 - a local "psg" directory ("~/vnmrsys/psg") containing legacy or erroneous /
   incompatible files (in this case, removing / renaming the local "psg"
   directory may help);
 - a serious issue with your VnmrJ software setup;
 - a missing Linux library, i.e., a serious issue in your Linux installation;
 - a missing compiler executable required for "seqgen" to work - likely again
   a serious issue in your Linux installation;
This means that on this workstation you will not be able to compile pulse
sequences, at least not as the current user. If the first two points above
don't provide helpful clues, this may mean that not only "seqgen" may be
non-functional on this system, but also "fixpsg", "psggen", "wtgen" and other
functions involving compilation, and this is likely also to prevent the
installation of User Library contributions such as Chempack, BioPack, etc.
%
      if [ $err_files -gt 0 ]; then
        numrec=`expr $numrec + 1`
        fmt --width=79 >> ${SP_REC}.seqgen << %
In the same context, there are error files ("seq_name.errors") from other
pulse sequences in your "psglib" directory, "~/vnmrsys/psglib" (see above).
This could be legacy files from "seqgen" compilation attempts prior to the
last VnmrJ patch install or under an earlier VnmrJ installation, but most
likely they are indicators for the issue described above.
%
      fi
      if [ $numrec -ne $numrec0 ]; then
        $echo >> ${SP_REC}.seqgen
      fi
    fi
  fi
}
#---------------------
# END vj_seqgen()
#---------------------


###############################################################################


#------------------------
# vj_operatordef()
#------------------------
vj_operatordef() {
  cd $wd
  if [ -s $vnmrsystem/adm/users/userlist ]; then
    cd $vnmrsystem/adm/users
    cat << %

-------------------------------------------------------------------------------
 Checking VnmrJ User & Operator Definitions
-------------------------------------------------------------------------------
  List of defined VnmrJ users per "$vnmrsystem/adm/users/userlist":
%
    cat userlist | $awk '{ for (i=1; i<= NF; i++) print $i }' | sort -bdf | \
      $awk 'BEGIN { maxlen=0 }
      {
        user[NR] = $0
        if (length($0) > maxlen)
        {
          maxlen = length($0)
        }
      }
      END {
        linelen = 74
        cols = 1
        width = 4 + maxlen
        while ((cols <= NR) && (width + 2 + maxlen <= linelen))
        {
          width += 2 + maxlen
          cols ++
        }
        rows = ((NR - (NR % cols)) / cols)
        if ((NR % cols) > 0)
          rows++
        for (l = 0; l < rows; l++)
        {
          printf("    ")
          for (t = 1; t <= cols; t++)
          {
            ix = (t - 1)*rows + l + 1
            if (ix <= NR)
            {
              printf("%s", user[ix])
              if ((ix < NR) || (t < cols - 1))
              {
                for (i = length(user[ix]); i <= maxlen + 2; i++)
                  printf(" ")
              }
            }
          }
          printf("\n")
        }
      }'
    if [ -s uexist ]; then
      cat << %
  -----------------------------------------------------------------------------
  Contents of "$vnmrsystem/adm/users/uexist":
%
      cat uexist | sort -bdf | $awk 'BEGIN {maxlen=0; maxlen2=0} {
        user[NR] = $1
        rem[NR] = $2
        for (i = 3; i < NF; i++)
          rem[NR] = rem[NR] " " $i
        status[NR] = $NF
        if (length($1) > maxlen)
          maxlen=length($1)
        if (length(rem[NR]) > maxlen2)
          maxlen2=length(rem[NR])
      }
      END {
        for (i = 1; i <= NR; i++)
        {
          printf("%s", user[i])
          for (j = length(user[i]); j < maxlen + 2; j++)
            printf(" ")
          printf("%s", rem[i], status[i])
          for (j = length(rem[i]); j < maxlen2 + 2; j++)
            printf(" ")
          printf("%s\n", status[i])
        }
      }' | sed 's/^/    /'
    fi
    if [ -s userDefaults ]; then
      cat << %
  -----------------------------------------------------------------------------
  Contents of "$vnmrsystem/adm/users/userDefaults":
%
      $echo "    # Name     Show  Private  Value"
      $tail -n +3 userDefaults | $awk '{
          printf("%-10s %-6s %-6s",$1,$2,$3)
          if (NF > 3)
            printf(" ")
          for (i = 4; i <= NF; i++)
            printf(" %s",$i)
          printf("\n")
        }' | sed 's/^/    /'
    fi
    if [ -d operators ]; then
      cd operators
      if [ -s automation.conf ]; then
        cat << %
  -----------------------------------------------------------------------------
  Contents of "$vnmrsystem/adm/users/operators/automation.conf":
%
        start=`expand automation.conf | grep -n 'DayQ Start' | cut -d ':' -f 1`
        $tail -n +$start automation.conf | $awk '{ if (NF > 0) print }' | \
          sed 's/^/    /'
      fi
      if [ -s operatorlist ]; then
        cat << %
  -----------------------------------------------------------------------------
  Contents of "$vnmrsystem/adm/users/operators/operatorlist":
%
        head -n 1 operatorlist | sed 's/ //
          s/^/    /'
        $tail -n +2 operatorlist | sort -bdf | $awk '{
          printf("%-12s", $1)
          for (i = 2; i <= NF; i++)
            printf(" %s",$i)
          printf("\n")
        }' | $awk '{ if (NF > 0) print }' | sed 's/^/    /'
      fi
      if [ -s vjpassword ]; then
        nlines=`wc -l < vjpassword`
        npasswd=`sort -u -k 2,2 < vjpassword | wc -l`
        if [ $nlines -gt $npasswd ]; then
          if [ $npasswd -gt 1 ]; then
            fmt -c --width=79 << %
  -----------------------------------------------------------------------------
  NOTE: There are $nlines defined VnmrJ operator accounts using only $npasswd
  different passwords; this can be exploited and defeats the purpose of such
  passwords. If you use an "open / semi-public password convention" we
  recommend using recipes such as "operator_name PLUS a given passphrase".
%
            numrec=`expr $numrec + 1`
            fmt -c --width=79 >> ${SP_REC}.vjopsecure << %
NOTE: There are $nlines defined VnmrJ operator accounts using only $npasswd
different passwords; this can be exploited and defeats the purpose of such
passwords. If you use an "open / semi-public password convention" we recommend
using recipes such as "operator_name PLUS a given passphrase".

%
          else
            fmt -c --width=79 << %
  -----------------------------------------------------------------------------
  NOTE: There are $nlines defined VnmrJ operator accounts, ALL using the same
  password; this can be exploited and defeats the purpose of such passwords.
  If you use an "open / semi-public password convention" we recommend using
  recipes such as "operator_name PLUS a given passphrase".
%
            numrec=`expr $numrec + 1`
            fmt -c --width=79 >> ${SP_REC}.vjopsecure << %
NOTE: There are $nlines defined VnmrJ operator accounts, ALL using the same
password; this can be exploited and defeats the purpose of such passwords. If
you use an "open / semi-public password convention" we recommend using recipes
such as "operator_name PLUS a given passphrase".

%
          fi
        fi
      fi
    fi
  fi
  cd $wd
}
#------------------------
# END vj_operatordef()
#------------------------


###############################################################################


#------------------------
# showhelpvj()
#------------------------
showhelp() {
  cat << %

Usage:  $wrappercmd
        printon $wrappercmd printoff
        $wrappercmd('basic')
        printon $wrappercmd('basic') printoff
        $wrappercmd(<'acq'><,'net'><,'patches'><,'printers'|'plotters'> \\
                    <,'rec'><,'sec'><,'users'>)
        $wrappercmd('all')
        printon $wrappercmd('all') printoff
        $wrappercmd('version')
        $wrappercmd('help')

%
}
#------------------------
# END showhelpvj()
#------------------------


###############################################################################


#------------------------
# showhelp()
#------------------------
showhelp() {
  cat << %

Usage:  $wrappercmd <--acq> <--net> <--pkg|--patches|--pkg|--packages> \\
                    <--print<ers>|--plot<ters>> <--rec<omm>> <--security> \\
                    <--users>
        $wrappercmd <-a> <-n> <-p> <-q> <-r> <-s> <-u>
        $wrappercmd <-b|--basic>
        $wrappercmd <-[anpqrsu]*>
        $wrappercmd <--all>
        $wrappercmd <--print<er>|--plot<ter>>
        $wrappercmd <-v|--version>
        $wrappercmd <-h|--help>

%
}
#------------------------
# END showhelp()
#------------------------


###############################################################################



###############################################################################
#########################  END PROCEDURE DEFINITIONS  #########################
###############################################################################



###############################################################################
# PRE-CHECKS
###############################################################################


#==============================================================================
# BLOCK CALLS AS ROOT
#==============================================================================

usernow=`id | tr '()' '  ' | cut -f2 -d' '`
if [ \! -h $vnmrsystem ]; then
  cat << %

Running "$wrappercmd" as root - this mode can and should only be used as long
as VnmrJ is NOT installed - thereafter it is best to reinstall "$wrappercmd"
via the VnmrJ User Library (see the README file) and to run it as VnmrJ master
user (vnmr1).

%
elif [ "$usernow" = root ]; then
  cat << %

You must NOT call "$wrappercmd" as root; it is best to
call "$wrappercmd" as VnmrJ master user (vnmr1).

FOR SECURITY REASONS, PERFORMING TASKS AS ROOT SHOULD BE AVOIDED WHENEVER
POSSIBLE; IT SHOULD ONLY BE USED WHERE IT IS ABSOLUTELY NECESSARY.

   ... aborting "$wrappercmd".

%
  cleanup
  exit 1
fi



###############################################################################
# EVALUATE ARGUMENTS
###############################################################################

selargs=0
args="$*"
w_args=""
while [ $# -gt 0 ]; do
  argvalue=`$echo $1 | sed 's/^[-]*acq/--acq/
	s/^[-]*all.*/--all/
	s/^[-]*basic/--basic/
	s/^[-]*current.*/--current/
	s/^-[-]*help.*/--help/
	s/^[-]*hist.*/--history/
	s/^[-]*log.*/--logfile/
	s/^[-]*net/--net/
	s/^[-]*pack.*/--packages/
	s/^[-]*patch.*/--patches/
	s/^[-]*pkg/--packages/
	s/^[-]*plot.*/--plotters/
	s/^[-]*print.*/--printers/
	s/^[-]*rec.*/--recomm/
	s/^[-]*sec.*/--security/
	s/^[-]*user.*/--users/
	s/^[-]*ver.*/--version/'`
  case $argvalue in
    -a|--acq)
            selargs=1
            updatereminder=1
            showacq=1; w_args="$w_args $1" ;;
    -b|--basic)
            updatereminder=0
            selargs=1; w_args="$w_args $1" ;;
    -n|--net)
            selargs=1
            updatereminder=1
            shownet=1; w_args="$w_args $1" ;;
    -p|--packages|--patches)
            selargs=1
            updatereminder=1
            showpkg=1; w_args="$w_args $1" ;;
    -q|--printers|--plotters)
            selargs=1
            updatereminder=1
            showprinters=1; w_args="$w_args $1" ;;
    -r|--recomm)
            selargs=1
            updatereminder=1
            showrecomm=1; w_args="$w_args $1" ;;
    -s|--security)
            selargs=1
            updatereminder=1
            showsecurity=1; w_args="$w_args $1" ;;
    -u|--users)
            selargs=1
            updatereminder=1
            showusers=1; w_args="$w_args $1" ;;
    --all)
            selargs=1
            showacq=1
            showbios=1
            showcompil=1
            shownet=1
            showpkg=1
            showprinters=1
            showrecomm=1
            showrevs=1
            showsecurity=1
            showsum=1
            showusers=1
            showversion=1
            updatereminder=1
            w_args="$w_args $1" ;;
    --history)
        hline=`grep -n 'REVISION HISTORY' $0 | $tail -n 1 |tr ':' ' ' | \
                $awk '{print $1}'`
        tlines=`wc -l < $0`
        hlines=`expr $tlines - $hline - 2`
        $echo
        expand $0 | $tail -n +$hline | head -n $hlines | sed 's/^.//'
        $echo
        exit 0
        ;;
    -v|--version)
        $echo "$cmd version $version ($revdate)"
        cleanup
        exit 0
      ;;
    -h|--help)
        showhelp
        cleanup
        exit 0
      ;;
    help)
        showhelpvj
        cleanup
        exit 0
      ;;
    -l|--logfile)
        shift
        logfile=$1
        pkglog=${logfile}.pkglog
        logdir=`dirname $logfile`
        localname=`uname -n`
        BIOS_settings=${logdir}/.BIOS_settings.$localname
      ;;
    -c|--current)
        updatereminder=0
      ;;
    *)
        if [ `$echo $1 | grep -c '^-[abnpqrsu]*$'` -eq 1 ]; then
          updatereminder=1
          if [ `$echo $1 | grep -c a` -gt 0 ]; then
            showacq=1
          fi
          if [ `$echo $1 | grep -c b` -gt 0 ]; then
            updatereminder=0
          fi
          if [ `$echo $1 | grep -c n` -gt 0 ]; then
            shownet=1
          fi
          if [ `$echo $1 | grep -c p` -gt 0 ]; then
            showpkg=1
          fi
          if [ `$echo $1 | grep -c q` -gt 0 ]; then
            showprinters=1
          fi
          if [ `$echo $1 | grep -c r` -gt 0 ]; then
            showrecomm=1
          fi
          if [ `$echo $1 | grep -c s` -gt 0 ]; then
            showsecurity=1
          fi
          if [ `$echo $1 | grep -c u` -gt 0 ]; then
            showusers=1
          fi
          selargs=1
          w_args="$w_args $1"
        else
          showhelp
          cleanup
          exit 1
        fi
      ;;
  esac
  shift
done
w_args=`$echo "x$w_args" | sed 's/x[ ]*//'`

#------------------------------------------------------------------------------
# argument dependencies
#------------------------------------------------------------------------------
if [ $showacq -ne 0 ]; then
  showcompil=1
  shownet=1
  showsum=1
fi
if [ $shownet -ne 0 ]; then
  showsum=1
fi
if [ $showpkg -ne 0 ]; then
  showcompil=1
  showrevs=1
  showsum=1
  showversion=1
fi
if [ $showrecomm -ne 0 ]; then
  showsum=1
  showversion=1
fi
if [ $showsecurity -ne 0 ]; then
  shownet=1
  showpkg=1
  showrevs=1
  showsum=1
  showusers=1
  showversion=1
fi
if [ $showusers -ne 0 ]; then
  showversion=1
fi

#------------------------------------------------------------------------------
# no argument: defaults to "--all"
#------------------------------------------------------------------------------
if [ $selargs -eq 0 ]; then
  showacq=1
  showbios=1
  showcompil=1
  shownet=1
  showpkg=1
  showprinters=1
  showrecomm=1
  showrevs=1
  showsecurity=1
  showsum=1
  showusers=1
  showversion=1
  updatereminder=1
fi

#------------------------------------------------------------------------------
# argument overrides for root
#------------------------------------------------------------------------------
if [ $usernow = root ]; then
  showacq=0
  showbios=1
  showcompil=0
  shownet=1
  showpkg=1
  showprinters=0
  showrecomm=1
  showrevs=1
  showsecurity=1
  showsum=1
  showusers=0
  showversion=1
  updatereminder=0
fi


###############################################################################
# CHECK FOR OS AND HARDWARE COMPATIBILITY
###############################################################################

#------------------------------------------------------------------
# Check Linux kernel version
#------------------------------------------------------------------
kversion=`uname -r`
kmajor=`uname -r | tr '[.\-]' ' ' | $awk '{printf("%d%02d%02d\n",$1,$2,$3)}'`
kminor=`uname -r | tr '[.\-]' ' ' | $awk '{print $4}'`
if [ "$kmajor" -lt 20421 ]; then
  cat << %

"$cmd" is currently implemented for Linux kernel version 2.4.21
        or higher only, not for kernel version $kversion -
Installed "$wrappercmd" module version: $cmd $version $revdate

   ... aborting.

%
  cleanup
  exit 1
fi

#-----------------------------------
# check for Intel- or AMD-based CPU
#-----------------------------------
proctype=`uname -p`
if [ `$echo "$proctype" | egrep -c '^x86|^i[3-6]86'` -lt 1 ]; then
  cat << %

"$cmd" is currently implemented for and checked with officially
supported Dell PCs using Intel CPUs only, not for $proctype-based
PCs. If you think or know that you are using an officially supported
PC architecture and this test still fails to pass, please contact the
author at
        $authoraddr
and please include this output in order to help further analyzing
and possibly correcting the situation.
Installed "$wrappercmd" module version: $cmd $version $revdate

   ... aborting."

%
  cleanup
  exit 1
fi


###############################################################################
# TRY EXTRACTING INFORMATION FROM BIOS
###############################################################################

bios_done=0
if [ "$BIOS_settings" != "" ]; then
  if [ -s "$BIOS_settings" ]; then
    bios_done=1
    if [ `grep -c 'Product Name:' < $BIOS_settings` -eq 0 -o \
         `grep -c 'BIOS Information' < $BIOS_settings` -eq 0 -o \
         `grep -c 'Memory Device' < $BIOS_settings` -eq 0 ]; then
      bios_done=0
    fi
  fi
fi
if [ -x /usr/sbin/dmidecode ]; then
  dmidec=/usr/sbin/dmidecode
elif [ `which dmidecode 2>&1 | grep -icw no` -eq 0 ]; then
  dmidec=`which dmidecode`
fi
if [ "$dmidec" != "" -a $bios_done -eq 0 ]; then
  if [ "$usernow" != root ]; then
    cat << %

In order to gather more accurate information about the system hardware
"$wrappercmd" needs TEMPORARY ROOT PERMISSION to access the BIOS settings;
this step is optional (but will enable "$wrappercmd" to generate more
valuable output); if you want to skip this step, simply enter [Return].

%
    sleep 1
  fi
  rm -f $SP_PCCONFIG
  su -c $dmidec | expand | grep -iv '^[ ]*DMI type' | $awk 'BEGIN {
      tmpfile="'${SP_PCCONFIG}.1'"
      indent=0
    }
    {
      lines=0
      if ($0 ~ /System Information/)
      {
        lst=substr($0,1,8)
        if (lst == "        ")
          indent=8
        res = 1
        while (((NF > 0) && ($0 !~ /^Handle/) && (lines < 200)) && (res > 0))
        {
          if (indent == 0)
            print
          else
            printf("%s\n",substr($0,indent+1,length($0)-indent))
          res = getline
          lines++
        }
      }
      else if ($0 ~ /BIOS Information/)
      {
        lst=substr($0,1,8)
        if (lst == "        ")
          indent=8
        res = 1
        while (((NF > 0) && ($0 !~ /^Handle/) && (lines < 200)) && (res > 0))
        {
          if (indent == 0)
            print >> tmpfile
          else
            printf("%s\n",substr($0,indent+1,length($0)-indent)) >> tmpfile
          res = getline
          lines++
        }
      }
      else if ($0 ~ /Physical Memory Array/)
      {
        lst=substr($0,1,8)
        if (lst == "        ")
          indent=8
        res = 1
        while (((NF > 0) && ($0 !~ /^Handle/) && (lines < 200)) && (res > 0))
        {
          if (($0 ~ /Physical Memory Array/) ||
              ($0 ~ /Location/) || ($0 ~ /Use:/) ||
              ($0 ~ /Error Correction Type:/) ||
              ($0 ~ /Maximum Capacity:/) ||
              ($0 ~ /Number Of Devices:/))
          {
            if (indent == 0)
              print >> tmpfile
            else
              printf("%s\n",substr($0,indent+1,length($0)-indent)) >> tmpfile
          }
          res = getline
          lines++
        }
      }
      else if (($0 ~ /Memory Device/) && ($0 !~ /[Mm]apped [Aa]ddress/))
      {
        lst=substr($0,1,8)
        if (lst == "        ")
          indent=8
        res = 1
        inst = 1
        k = 0
        while (((NF > 0) && ($0 !~ /^Handle/) && (lines < 200)) && (res > 0))
        {
          if (($0 ~ /Memory Device/) || ($0 ~ /Size:/) ||
              ($0 ~ /Total Width/) || ($0 ~ /Data Width:/) ||
              ($0 ~ /Locator:/) || ($0 ~ /Speed:/) || ($0 ~ /Type:/) ||
              ($0 ~ /Serial Number:/) || ($0 ~ /Type Detail:/) ||
              ($0 ~ /Error Information Handle:/))
          {
            ae = k ""
            if (indent == 0)
              mem[ae] = $0
            else
              mem[ae] = sprintf("%s\n",substr($0,indent+1,length($0)-indent))
            k++
          }
          if (($0 ~ /Size:/) && ($0 ~ /No Module/))
            inst = 0
          res = getline
          lines++
        }
        if (inst == 1)
        {
          for (j = 0; j < k; j++)
          {
            ae = j ""
            if ((mem[ae] !~ /: None/) && (mem[ae] !~ /: Unknown/) &&
                (mem[ae] !~ /: No Error/))
            {
              printf("%s\n", mem[ae]) >> tmpfile
            }
          }
        }
      }
    }' | expand | sed 's/ [ ]*$//' > $SP_PCCONFIG
  if [ -s ${SP_PCCONFIG}.1 ]; then
    expand ${SP_PCCONFIG}.1 | sed 's/ [ ]*$//' | grep -v '^$' >> $SP_PCCONFIG
  fi
  rm -f ${SP_PCCONFIG}.1
  if [ -s $SP_PCCONFIG ]; then
    cp $SP_PCCONFIG $BIOS_settings
    $echo "BIOS information extracted."
  elif [ -s $BIOS_settings ]; then
    $echo "Extraction of BIOS information failed - using existing data."
  else
    $echo "Extraction of BIOS information bypassed or failed."
  fi
  rm -f $SP_PCCONFIG
fi
if [ "$BIOS_settings" != "" ]; then
  if [ -s $BIOS_settings ]; then
    manuf=`grep 'Manufacturer:' < $BIOS_settings | sed '
        s/Manufacturer://
        s/, Inc\.//
        s/ Inc\.//
        s/^ [ ]*//
        s/ [ ]*$//
        s/ [ ]*/ /g'`
    pcmodel=`grep 'Product Name:' < $BIOS_settings | sed '
        s/Product Name://
        s/Work[Ss]tation //
        s/^ [ ]*//
        s/ [ ]*$//
        s/ [ ]*/ /g' | sed "s/^$manuf //"`
    if [ "$manuf" = Dell ]; then
      if [ "$pcmodel" != "" ]; then
        pcmodel="Dell $pcmodel"
      else
        pcmodel="Dell"
      fi
    elif [ "$manuf" != "" ]; then
      if [ "$pcmodel" != "" ]; then
        pcmodel="$manuf $pcmodel"
      else
        pcmodel="$manuf"
      fi
    fi
    serialnum=`grep 'Serial Number:' < $BIOS_settings | head -n 1 | sed '
        s/Serial Number://
        s/^ [ ]*//
        s/ [ ]*$//
        s/ [ ]*/ /g'`
  fi
else
  $echo "Information on PC hardware from BIOS not available."
fi
supported_pc=0
rhel_pcmin=3.0; k_pcmin="2.4.21-4"
rhel_pcmax=5.4; k_pcmax="2.6.18-164"
rhel_vjmin=3.0; k_vjmin="2.4.21-4"
rhel_vjmax=5.4; k_vjmax="2.6.18-164"
if [ `echo $pcmodel | grep -ic Dell` -eq 1 ]; then
  if [ `$echo $pcmodel | egrep -ci 'OptiPlex.*270|OptiPlex.*755'` -eq 1 -o \
       `$echo $pcmodel | grep -ci 'Precision.*3[789]0'` -eq 1 -o \
       `$echo $pcmodel | grep -ci 'Precision.*T3[45]00'` -eq 1 ]; then
    supported_pc=1
  fi
  if   [ `$echo $pcmodel | grep -ci 'OptiPlex.*270'` -eq 1 ]; then
    rhel_pcmin=3.0; k_pcmin="2.4.21-4"
    rhel_pcmax=3.0; k_pcmax="2.4.21-50"
  elif [ `$echo $pcmodel | grep -ci 'Precision.*370'` -eq 1 ]; then
    rhel_pcmin=3.2; k_pcmin="2.4.21-15"
    rhel_pcmax=4.3; k_pcmax="2.6.9-34"
  elif [ `$echo $pcmodel | grep -ci 'Precision.*380'` -eq 1 ]; then
    rhel_pcmin=4.0; k_pcmin="2.6.9-5"
    rhel_pcmax=4.3; k_pcmax="2.6.9-34"
  elif [ `$echo $pcmodel | grep -ci 'Precision.*390'` -eq 1 ]; then
    rhel_pcmin=4.3; k_pcmin="2.6.9-34"
    rhel_pcmax=4.3; k_pcmax="2.6.9-34"
  elif [ `$echo $pcmodel | grep -ci 'OptiPlex.*755'` -eq 1 ]; then
    rhel_pcmin=5.1; k_pcmin="2.6.18-53"
    rhel_pcmax=5.1; k_pcmax="2.6.18-53"
  elif [ `$echo $pcmodel | grep -ci 'Precision.*T3400'` -eq 1 ]; then
    rhel_pcmin=5.1; k_pcmin="2.6.18-53"
    rhel_pcmax=5.1; k_pcmax="2.6.18-53"
  elif [ `$echo $pcmodel | grep -ci 'Precision.*T3500'` -eq 1 ]; then
    rhel_pcmin=5.3; k_pcmin="2.6.18-92"
    rhel_pcmax=5.4; k_pcmax="2.6.18-164"
  fi
fi
kmajor_pcmin=`$echo $k_pcmin | tr '[.\-]' ' ' | \
        $awk '{printf("%d%02d%02d\n",$1,$2,$3)}'`
kminor_pcmin=`$echo $k_pcmin | tr '[.\-]' ' ' | $awk '{print $4}'`
kmajor_pcmax=`$echo $k_pcmax | tr '[.\-]' ' ' | \
        $awk '{printf("%d%02d%02d\n",$1,$2,$3)}'`
kminor_pcmax=`$echo $k_pcmax | tr '[.\-]' ' ' | $awk '{print $4}'`

# NOTE: Ubuntu appears to be running 2.6.24-23-generic (2009-04-24)
# > uname -a
# Linux hsin-ubuntu 2.6.24-23-generic #1 SMP Wed Apr 1 21:47:28 UTC 2009 i686
# GNU/LINUX
# uname -s -> Linux
# uname -n -> hsin-ubuntu
# uname -r -> 2.6.24-23-generic
# uname -v ->  #1 SMP Wed Apr 1 21:47:28 UTC 2009
# uname -m -> i686
# uname -p -> (unknown)
# uname -i -> (unknown)
# uname -o -> GNU/LINUX


#------------------------------------------------------------------
# if $vnmrsystem/vnmrrev is found, EVALUATE installed VnmrJ version
#------------------------------------------------------------------
if [ -f $vnmrsystem/vnmrrev ]; then
  vnmrdir=1
  vjsec=`head -n 1 $vnmrsystem/vnmrrev | egrep -ic 'trusted|secure|21.*cfr'`
  vnmrrev=`head -n 1 $vnmrsystem/vnmrrev | sed 's/VERSION //
    s/VNMRJ/VnmrJ/
    s/VJ1 /VnmrJ 1.1 /
    s/ REVISION //
    s/Trusted_VnmrJ/VnmrJ_Secure/
    s/VNMR [ ]*VnmrJ/VnmrJ/'`
  vnmrbeta=`head -n 1 $vnmrsystem/vnmrrev | egrep -ic 'alpha|beta'`
  if [ `$echo $vnmrrev | grep -ic vnmr` -eq 0 ]; then
    vnmrrev="VNMR $vnmrrev"
  fi
  vnmrrevdate=`head -n 2 $vnmrsystem/vnmrrev | $tail -n 1`
  vnmropt=`tail -n 1 $vnmrsystem/vnmrrev | tr '[A-Z]' '[a-z]'`
  case $vnmropt in
    mr400)              system="400-MR";        cur_vnmrj="VnmrJ 2.3A" ;;
    vnmrs)              system="DirectDrive";   cur_vnmrj="VnmrJ 2.3A" ;;
    inova|inova.sol)    spincad=1
                        system="UNITY INOVA";   cur_vnmrj="VnmrJ 2.2D" ;;
    mercplus|mplus)     system="MERCURYplus";   cur_vnmrj="VnmrJ 2.2D" ;;
    mercvx)             system="MERCURY-Vx";    cur_vnmrj="VnmrJ 2.2D" ;;
    *)                  system=$vnmropt ;;
  esac
  if [ `$echo $vnmrrev | grep -ic '2\.1a'` -ne 0 ]; then
    system="DirectDrive"
  fi
  if [ "$system" = DirectDrive -o "$system" = "400-MR" ]; then
    spincad=0
    if [ `$echo "$pcmodel" | grep -ci 'precision.*3400'` -eq 1 -o \
         `$echo "$pcmodel" | grep -ci 'optiplex.*755'` -eq 1 ]; then
      cur_vnmrj="VnmrJ 2.3A"
    fi
    if [ $rh4 -eq 0 -a $rh3 -eq 0 ]; then
      cur_vnmrj="VnmrJ 2.3A"
    fi
    if [ -d $vnmrsystem/imaging ]; then
      cur_vnmrj="VnmrJ 2.3A"
    fi
  fi
  if   [ `$echo $vnmrrev | grep -ic '1\.1'` -eq 1 ]; then
    rhel_vjmin=3.0; k_vjmin="2.4.21-4"
    rhel_vjmax=4.0; k_vjmax="2.6.9-5"
  elif [ `$echo $vnmrrev | grep -ic '2\.1'` -eq 1 ]; then
    rhel_vjmin=3.0; k_vjmin="2.4.21-4"
    rhel_vjmax=4.3; k_vjmax="2.6.9-34"
  elif [ `$echo $vnmrrev | grep -ic '2\.2'` -eq 1 ]; then
    rhel_vjmin=4.3; k_vjmin="2.6.9-34"
    rhel_vjmax=5.1; k_vjmax="2.6.18-53"
  elif [ `$echo $vnmrrev | grep -ic '2\.3'` -eq 1 ]; then
    rhel_vjmin=4.3; k_vjmin="2.6.9-34"
    rhel_vjmax=5.1; k_vjmax="2.6.18-53"
  elif [ `$echo $vnmrrev | grep -ic '3\.[0-9]'` -eq 1 ]; then
    rhel_vjmin=4.3; k_vjmin="2.6.9-34"
    rhel_vjmax=5.4; k_vjmax="2.6.18-164"
  fi
fi
kmajor_vjmin=`$echo $k_vjmin | tr '[.\-]' ' ' | \
        $awk '{printf("%d%02d%02d\n",$1,$2,$3)}'`
kminor_vjmin=`$echo $k_vjmin | tr '[.\-]' ' ' | $awk '{print $4}'`
kmajor_vjmax=`$echo $k_vjmax | tr '[.\-]' ' ' | \
        $awk '{printf("%d%02d%02d\n",$1,$2,$3)}'`
kminor_vjmax=`$echo $k_vjmax | tr '[.\-]' ' ' | $awk '{print $4}'`


#==============================================================================
# CHECK FOR ACQPROC / EXPPROC, CONSOLE TYPE
#==============================================================================

acq=0           # flag for acquisition / spectrometer host
if [ `ps -e | egrep -c 'Expproc|Acqproc'` -gt 0 ]; then
  acq=1
fi

if [ "x$cons_type" = "x" -a -s $vnmrsystem/vnmrrev ]; then
  cons_type=`cat $vnmrsystem/vnmrrev | tail -n 1`
  if [ "$cons_type" = "vnmrs" -o "$cons_type" = "mr400" ]; then
    cons_type=ddr
  fi
fi

overwriteline() {
  $echo -e "$1" | $awk '{
    printf("\r")
    line = substr($0,1,64)
    printf("%-64s",line)
  }'
}

###############################################################################
##############  MAIN INFORMATION GATHERING / OUTPUT PRODUCTION  ###############
###############################################################################


$echo

$echo "  Building output header ..."
banner_title >> $SP_MAINHEAD
$echo "  Collecting information ..."

overwriteline "    BIOS information ..."
bios_info >> $SP_BIOS

overwriteline "    PC configuration ..."
pc_config >> $SP_CONFIG

overwriteline "    Memory statistics ..."
pc_memstat >> $SP_MEMSTAT

overwriteline "    Graphics configuration ..."
pc_graphics >> $SP_GRAPHICS

overwriteline "    Linux OS information ..."
pc_osinfo >> $SP_OSINFO

overwriteline "    Package information ..."
pc_ospkg >> $SP_OSPKG

overwriteline "    Language settings ..."
init_rec
os_lang >> $SP_OSLANG

overwriteline "    Basic networking setup ..."
os_net >> $SP_OSNET

overwriteline "    Compiler versions ..."
os_compiler >> $SP_OSCOMPILER

overwriteline "    Linux security information ..."
os_secure >> $SP_OSSECURE
os_access >> $SP_OSSECURE

overwriteline "    Linux \"sendmail\" configuration ..."
os_sendmail >> $SP_OSSENDMAIL

if [ "$usernow" != root ]; then
  overwriteline "    VnmrJ software installation ..."
fi
vj_install >> $SP_VJINSTALL

if [ "$usernow" != root ]; then
  overwriteline "    VnmrJ user definitions ..."
fi
vj_user >> $SP_VJUSER

if [ "$usernow" != root ]; then
  overwriteline "    File system checks in \"/vnmr\" ..."
fi
vj_fs >> $SP_VJFS

if [ "$usernow" != root ]; then
  overwriteline "    VnmrJ database setup / status ..."
fi
vj_db >> $SP_VJDB

if [ "$usernow" != root ]; then
  overwriteline "    VnmrJ printer / plotter definitions ..."
fi
vj_plotdef >> $SP_VJPLOTDEF

if [ "$usernow" != root ]; then
  overwriteline "    Contents of \"/vnmr/tmp\" ..."
fi
vj_tmp >> $SP_VJFS

overwriteline "    Serial / parallel port status ..."
os_ports >> $SP_OSPORTS

overwriteline "    Print queues ..."
os_printq >> $SP_OSPRINTQ

overwriteline "    Network configuration ..."
os_network >> $SP_OSNETWORK
vj_acqnet >> $SP_VJACQNET

if [ "$usernow" != root ]; then
  overwriteline "    Console configuration ..."
fi
console_config >> $SP_CONSCONFIG

if [ "$usernow" != root ]; then
  overwriteline "    Acquisition communication ..."
fi
vj_acqcomm >> $SP_VJACQCOMM

if [ "$usernow" != root ]; then
  overwriteline "    Acquisition status ..."
fi
vj_acqstat >> $SP_VJACQSTAT

if [ "$usernow" != root ]; then
  overwriteline "    Stored shims and probe calibrations ..."
fi
doseparator=0
vj_probecalib >> $SP_VJPROBECALIB
doseparator=$?
vj_shims >> $SP_VJSHIMS
console_hwconf >> $SP_CONSHWCONF

if [ "$usernow" != root ]; then
  overwriteline "    Pulse sequence compilation (\"seqgen\") check ..."
fi
vj_seqgen >> $SP_VJSEQGEN

if [ "$usernow" != root ]; then
  overwriteline "    VnmrJ operator definitions ..."
fi
vj_operatordef >> $SP_VJOPERATORDEF

overwriteline "  Done!                                                        "
$echo
$echo



###############################################################################
#############################  DISPLAYING OUTPUT  #############################
###############################################################################


cat_if $SP_MAINHEAD
if [ $showsum -ne 0 -a -s $SP_SUMMARY ]; then
  cat << %

===============================================================================
 CONFIGURATION SUMMARY:
-------------------------------------------------------------------------------
%
  cat $SP_SUMMARY
  cat << %


===============================================================================
 DETAILED INFORMATION, ANALYSIS AND RECOMMENDATIONS:
===============================================================================

%
else
  cat << %

===============================================================================
 SYSTEM INFORMATION, ANALYSIS AND RECOMMENDATIONS:
===============================================================================

%
fi
if [ $showbios -ne 0 ]; then
  cat_if $SP_BIOS
fi
cat_if $SP_CONFIG
cat_if $SP_MEMSTAT
cat_if $SP_GRAPHICS
cat_if $SP_OSINFO
if [ $showpkg -ne 0 ]; then
  cat_if $SP_OSPKG
else
  rm -f ${pkglog} ${pkglog}.alpha ${pkglog}.chr
fi
cat_if $SP_OSLANG
if [ $showsecurity -ne 0 ]; then
  cat_if $SP_OSCOMPILER
  cat_if $SP_OSSECURE
fi
if [ $showsecurity -ne 0 -a $sendmailok -ne 0 ]; then
  cat_if $SP_OSSENDMAIL
fi
if [ $showprinters -ne 0 ]; then
  cat_if $SP_OSPORTS
fi
if [ $shownet -ne 0 ]; then
  cat_if $SP_OSNET
  cat_if $SP_OSNETWORK
fi
cat_if $SP_VJINSTALL
if [ $showusers -ne 0 ]; then
  cat_if $SP_VJUSER
  cat_if $SP_VJDB
fi
if [ $showprinters -ne 0 ]; then
  cat_if $SP_VJPLOTDEF
  cat_if $SP_OSPRINTQ
fi
cat_if $SP_VJFS
if [ $showacq -ne 0 ]; then
  cat_if $SP_VJACQNET
  cat_if $SP_CONSCONFIG
  cat_if $SP_CONSHWCONF
  cat_if $SP_VJACQCOMM
  cat_if $SP_VJACQSTAT
  cat_if $SP_VJPROBECALIB
  cat_if $SP_VJSHIMS
fi
cat_if $SP_VJSEQGEN
if [ $showusers -ne 0 ]; then
  cat_if $SP_VJOPERATORDEF
fi


#==============================================================================
# PRINT RECOMMENDATIONS (-all / -rec OPTIONS ONLY)
#==============================================================================

if [ $showrecomm -ne 0 ]; then
  revyear=`$echo $revdate | $awk '{print substr($1,1,4)}'`
  revmonth=`$echo $revdate | $awk '{print substr($1,6,2)}'`
  revyear=`expr $revyear \* 12`
  revmonth=`expr $revyear + $revmonth`
  curyear=`date "+%Y"`
  curmonth=`date "+%m"`
  curyear=`expr $curyear \* 12`
  curmonth=`expr $curyear + $curmonth`
  rev_age=`expr $curmonth - $revmonth`


  #-----------------------------------------------
  # DON'T issue recommendations after > 12 months
  #-----------------------------------------------
  if [ $rev_age -gt 12 ]; then
    cat << %

-------------------------------------------------------------------------------
 HARDWARE, SOFTWARE AND SECURITY RECOMMENDATIONS
-------------------------------------------------------------------------------

In order to obtain hardware, software and security recommendations from
"$wrappercmd" you should download and install the current version of
"bin/$wrappercmd" from the on-line User Library at
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
%
    numrec=0
    rm -f $SP_REC ${SP_REC}.*
  else
    if [ $numrec -gt 0 ]; then
      cat << %

===============================================================================
 HARDWARE, SOFTWARE AND SECURITY RECOMMENDATIONS (status: $revday):
-------------------------------------------------------------------------------
%
      cat_if ${SP_REC}.hdr
      cat_if ${SP_REC}.pchw
      cat_if ${SP_REC}.os
      cat_if ${SP_REC}.pkg
      cat_if ${SP_REC}.lang
      if [ $shownet -eq 1 ]; then
        cat_if ${SP_REC}.net
      fi
      if [ $shownet -eq 1 ]; then
        cat_if ${SP_REC}.osnetwork
      fi
      if [ $showsecurity -eq 1 ]; then
        cat_if ${SP_REC}.secure
        cat_if ${SP_REC}.vjopsecure
      fi
      cat_if ${SP_REC}.vjinst
      cat_if ${SP_REC}.db
      cat_if ${SP_REC}.plot
      cat_if ${SP_REC}.printq
      cat_if ${SP_REC}.acqnet
      cat_if ${SP_REC}.consconfig
      cat_if ${SP_REC}.acqcomm
      cat_if ${SP_REC}.seqgen

      cat_if $SP_REC

      #--------------------------------------------------
      # legal notice in case recommendations were issued
      #--------------------------------------------------
      fmt --width=79 << %

===============================================================================
IMPORTANT: Even though the information and the recommendations provided above
are in close agreement with what is stated in Agilent MR News and with the
latest version of our software installation manuals (at the time when this
version of "$wrappercmd" was compiled, see below), they reflect the author's
PERSONAL opinion and preferences for setting up a host workstation and its
operating system to run current VnmrJ software. The output above therefore
does NOT constitute the official Agilent point-of-view, nor a condition or a
requirement for getting support for your system, nor can we guarantee that the
above information and recommendations are sufficient or adequate to ensure
that VnmrJ software will work on this hard- and software platform.
%
      fmt --width=79 << %
THESE RECOMMENDATIONS ARE PROVIDED AS IS - NO LEGAL OR OTHER LIABILITY CAN
BE DERIVED FROM THE OUTPUT OF THIS SOFTWARE.

%
    else
      cat << %

-------------------------------------------------------------------------------
 HARDWARE, SOFTWARE AND SECURITY RECOMMENDATIONS
-------------------------------------------------------------------------------
No recommendations available for this system / configuration at this point.

%
    fi

    rm -f $SP_REC ${SP_REC}.*

    if [ $showpkg -ne 0 -o $showsecurity -ne 0 ]; then
      if [ $numrec -eq 0 ]; then
        fmt --width=79 << %

===============================================================================
IMPORTANT: Even though the information above is in close agreement with what
is stated in Agilent MR News and with the latest version of our software
installation manuals (at the time when this version of "$wrappercmd" was
compiled, see below), this reflects the author's PERSONAL preferences and
opinion for setting up a host workstation and its operating system to run
current VnmrJ software. The output above therefore does NOT constitute the
official Agilent point-of-view, nor a condition or a requirement for getting
support for your system, nor can we guarantee that the above information is
sufficient and adequate to ensure that VnmrJ software will work on this hard-
and software platform.
%
        fmt --width=79 << %
THE INFORMATION ABOVE IS PROVIDED AS IS - NO LEGAL OR OTHER LIABILITY CAN BE
DERIVED FROM THE OUTPUT OF THIS SOFTWARE.
%
        cat << %

NOTE: "$wrappercmd" does NOT perform a comprehensive security check; the
above information is only meant to assist in optimizing the security of
your PC running Linux. You may want to check our "Linux Security FAQ" at
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
for further security advice.

%
      else
        cat << %
NOTE: "$wrappercmd" does NOT perform a comprehensive security check; the
above information and recommendations are merely meant to assist in
optimizing the security of your PC or spectrometer host running Linux.
You may want to check our "Linux Security FAQ" at
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
for further security advice.

%
      fi
    fi
    if [ $showsecurity -ne 0 ]; then
      fmt --width=79 << %
WARNING: The "$wrappercmd" output is provided for your personal use and/or to
assist a Agilent service or support representative in determining the soft-
and hardware status of your system; the above information can be abused to
acquire knowledge about security holes that may be present in your software
setup!

%
    fi

    #--------------------------------------------------
    # after > 4 months recommend using current version
    #--------------------------------------------------
    if [ $rev_age -gt 2 ]; then
      numrec=`expr $numrec + 1`
      cat << %
For more accurate / up-to-date recommendations you may want to try the current
version of "bin/$wrappercmd" from the on-line User Library at
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
or contact Agilent directly; the "$wrappercmd" information above helps Agilent
assisting you in finding an upgrade solution.

%
    fi

  fi
fi



#==============================================================================
# PRINT OUTPUT TRAILER
#==============================================================================

if [ $updatereminder -ne 0 ]; then

  #------------------------------------------------
  # prompt user to update sysprofiler, if necessary
  #------------------------------------------------
  $echo
  $echo "---------------------------------------\c"
  $echo "----------------------------------------"
  revy=`$echo $revdate | cut -c 3-4`
  revm=`$echo $revdate | cut -c 6-7`
  revy=`expr $revy \* 12`
  revm=`expr $revm + $revy`
  cury=`date '+%y'`
  curm=`date '+%m'`
  cury=`expr $cury \* 12`
  curm=`expr $curm + $cury`
  sysprofiler_age_m=`expr $curm - $revm`
  if [ $sysprofiler_age_m -ge 5 ]; then
    $echo "We STRONGLY recommend using an up-to-date \c"
    $echo "version of \"bin/$wrappercmd\";"
  elif [ $sysprofiler_age_m -ge 2 ]; then
    $echo "For best results make sure you use the up-to-date \c"
    $echo "version of \"bin/$wrappercmd\";"
  else
    $echo "Make sure you always use an up-to-date \c"
    $echo "version of \"bin/$wrappercmd\";"
  fi
  cat << %
the current version can be downloaded from the On-line NMR / MRI
User Library at
        http://www.chem.agilent.com/en-US/Support/Pages/default.aspx
%

fi

if [ $showversion -gt 0 ]; then

  #------------------------
  # report program version
  #------------------------
  $echo "---------------------------------------\c"
  $echo "----------------------------------------"
  upperwrap=`$echo $wrappercmd | tr '[a-z]' '[A-Z]'`
  $echo "$upperwrap module \"$cmd\" version $version, $revdate" | \
        $awk '{printf("%78s\n",$0)}'
  $echo "Author:  $author" | $awk '{printf("%78s\n",$0)}'
  $echo "Feedback:  $authoraddr" | $awk '{printf("%78s\n\n",$0)}'
fi

if [ $dotrailer -eq 1 ]; then
  cat << %

===============================================================================
                       (end of "$wrappercmd" output)
===============================================================================

%
fi

cleanup -keep
exit 0


#==============================================================================
# REVISION HISTORY (all updates by rk):
#   updates without comment are minor bug fixes / text amendments
#------------------------------------------------------------------------------
# 2007-11-09,       0.0.1:  started from "sysprof.sol", pre-release
# 2007-11-29,       0.1.3:  Linux updates, acq / console, recomm. still open
# 2008-01-01,       0.1.6:  improved remote access statistics
# 2008-01-18,       0.1.7:  various bug fixes
# 2008-03-20,       0.1.8:  addressed "head" / "tail" issues (RHEL 5.1)
# 2008-09-18,       0.1.9:  minor correction in printer output
# 2008-10-03,       0.1.10: fixed minor formatting issue with dummy printers;
#                           fixed test syntax for VnmrJ patch report
# 2008-10-04,       0.1.11: enhanced / corrected VnmrJ patch checking
# 2008-11-05,       0.1.12: allow for larger range of Intel CPU types (AMD??)
# 2008-11-07,       0.1.13: report RHEL version
# 2008-11-07,       0.1.14: expanded RHEL version output
# 2008-11-07,       0.1.15: various bug fixes
# 2008-11-07,       0.1.16: IP routing check for RHEL 5.x, version trailer
# 2008-11-07,       0.2.0:  version trailer added back in
# 2008-11-07,       0.2.1:  output layout enhancements, serial port status
# 2008-11-07,       0.2.2:  more output layout enhancements
# 2008-11-07,       0.2.3:  prepared for extensive package logging
# 2008-11-07_14:44, 0.2.5
# 2008-11-07,       0.2.6:  RHEL version reporting and comments
# 2008-11-08,       0.2.8:  RHEL package log and count implemented
# 2008-11-08_01:45, 0.2.9
# 2008-11-08,       0.2.10: report last up2date call
# 2008-11-08,       0.2.12: report RPM package count history
# 2008-11-08_09:12, 0.2.16
# 2008-11-08,       0.3.1:  syntax clean-up, general package logging complete
# 2008-11-08,       0.3.2:  first RHEL 5 / VnmrJ package checks implemented
# 2008-11-08,       0.3.4:  additional RHEL 5 package checks
# 2008-11-08,       0.3.5:  /usr/lib/libXm.so.3 check added
# 2008-11-08_15:06, 0.3.6
# 2008-11-09_00:39, 0.3.7
# 2008-11-09,       0.3.14: enhancements, especially in package reporting
# 2008-11-09_20:20, 0.3.17
# 2008-11-09,       0.3.18: bug fixes in RHEL package reporting
# 2008-11-10_00:30, 0.4.2:  better RHEL 4 package report, first & last package
# 2008-11-10_08:13, 0.4.3
# 2008-11-10,       0.4.8:  added info summary, console info, clean-up
# 2008-11-10,       0.5.1:  above, with debugging & further clean-up
# 2008-11-11_08:47, 0.5.2
# 2008-11-11,       0.6.4:  added first set of warnings / recommendations
# 2008-11-11,       0.6.7:  bug fixes, expanded RHEL 5 package reporting
# 2008-11-11,       0.7.1:  minor corrections / amendments
# 2008-11-12,       0.7.5:  block call as root, reading BIOS (optional)
# 2008-11-12,       0.8.1:  issue PC model-specific recommendations (started)
# 2008-11-12_20:36, 0.8.2
# 2008-11-13_09:51, 0.8.4
# 2008-11-12,       0.8.5:  keep BIOS settings for subsequent calls
# 2008-11-13,       0.9.1:  PC, OS and VnmrJ upgrade recommendations
# 2008-11-13,       0.9.5:  call without arguments working OK
# 2008-11-13_23:13, 1.0.0:  first "release version", arguments checked
# 2008-11-14,       1.0.1:  fixed several issues with RHEL 4.x
# 2008-11-14_17:19, 1.0.6
# 2008-11-14,       1.0.8:  fixed BIOS data extraction under RHEL 4.x
# 2008-11-17_18:26, 1.0.13: correction in RHEL 5.x package checking
# 2008-11-17_18:33, 1.0.14
# 2008-11-17_18:39, 1.0.15
# 2008-11-17,       1.0.16: added OS recommendations for RHEL 3.x
# 2008-11-17_20:12, 1.0.17
# 2008-11-18_01:04, 1.0.19: formatting used in some recommendations output
# 2008-11-18_01:36, 1.1.0
# 2008-11-18_15:59, 1.1.1:  expanded / enhanced output in RHEL 5 package check
# 2008-11-19_01:23, 1.1.2:  added OS recommendations for RHEL 4.x
# 2008-11-19_01:30, 1.1.3
# 2008-11-19_15:54, 1.1.4:  added OS recommendations for RHEL 5.x
# 2008-11-21_09:39, 1.1.5:  made reading BIOS cope with more platforms
# 2008-11-21_16:23, 1.1.6
# 2008-11-26,       1.1.7:  minor correction in time stamp interpretation
# 2008-11-26_01:20, 1.1.10
# 2008-11-27_08:59, 1.1.11: minor corrections in version output, "-v" response
# 2008-11-28_13:43, 1.1.12
# 2008-12-06_14:34, 1.1.13
# 2008-12-07,       1.1.14: added check for VnmrJ 2.2C / VNMRS / RHEL 5.x
# 2008-12-07_18:21, 1.1.18
# 2008-12-07,       1.2.1:  added check for RHEL 5 Tcl/Tk library version
# 2008-12-10_23:15, 1.2.2:  added author signature
# 2008-12-11_16:30, 1.2.4
# 2008-12-12_18:52, 1.2.5:  added check for VnmrJ-specific X.11 legacy file
# 2008-12-12_18:56, 1.2.6
# 2008-12-12_18:59, 1.2.7
# 2008-12-16_21:25, 1.2.8
# 2008-12-17_19:38, 1.2.9
# 2008-12-23_00:15, 1.2.10
# 2008-12-23_00:26, 1.2.11
# 2009-01-03_19:25, 1.2.12: report arguments supplied to wrapper command
# 2009-01-07_19:29, 1.2.13: /etc/sudoers hint, /vnmr/bin/sudoins in RHEL 5.x
# 2009-01-07_19:32, 1.2.14
# 2009-01-07_19:50, 1.2.15
# 2009-01-07,       1.2.16: suppress file arg in recomm. to run cmd again.
# 2009-01-07_21:56, 1.2.17: cope with "other" pkg time stamp formats
# 2009-01-07_22:08, 1.2.18: condensed output on pending print jobs
# 2009-01-08_01:50, 1.2.19: corrected time stamp printing in VnmrJ file lists
# 2009-01-08,       1.2.21: added recipe for cleaning up print queues
# 2009-01-08_10:00, 1.2.22: added checks on "/vnmr/tmp"
# 2009-01-08_10:06, 1.2.23: corrected "fmt" syntax / use
# 2009-01-08_10:10, 1.2.24
# 2009-01-08_10:42, 1.2.26: indicate date and time format(s)
# 2009-01-08_12:06, 1.2.27
# 2009-01-08_14:24, 1.2.28: suppress some of the duplicate rpm package counts
# 2009-01-08_15:25, 1.2.29
# 2009-01-08_15:27, 1.2.30
# 2009-01-08_15:29, 1.2.31: minor fixes
# 2009-01-08_23:45, 1.3.1:  corrected logic error with package count reporting
# 2009-01-08_23:49, 1.3.2
# 2009-01-09_15:46, 1.3.3
# 2009-01-09_15:55, 1.3.4:  Locator database check / reporting enhancements
# 2009-01-09_21:16, 1.3.5:  revision history rearranged
# 2009-01-10_17:13, 1.3.6:  streamlined, minor enhancement in coding
# 2009-01-10_23:01, 1.3.7:  improved date handling in rpm package log
# 2009-01-10_23:14, 1.3.8:  minor fixes
# 2009-01-11_19:54, 1.3.9
# 2009-01-14_00:30, 1.3.10: started language recommendations
# 2009-01-14_15:59, 1.4.0:  language recommendations / warnings added
# 2009-01-14_16:36, 1.4.1:  language checks debugged
# 2009-01-15_11:54, 1.4.2:  minor adjustments in output
# 2009-01-15_23:55, 1.4.3:  enhancements in remote access statistics, DNS
#                           domain check  locale / language settings check
# 2009-01-16_14:27, 1.5.0:  Reworked printer status output, avoids scrambling.
# 2009-01-16_14:32, 1.5.1:  debugged new printer section
# 2009-01-16_15:02, 1.5.2:  amendments in printer analysis
# 2009-01-16_15:04, 1.5.3:  bug fixes
# 2009-01-16_15:27, 1.5.4:  another amendment for non-VnmrJ remote printers
# 2009-01-16_15:32, 1.5.5:  bug fix for non-VnmrJ remote printers
# 2009-01-16_17:25, 1.5.6:  bug fixes, enhancements in running "config"
# 2009-01-16_18:27, 1.5.7:  minor enhancement for running "config"
# 2009-01-16_18:32, 1.5.8
# 2009-01-16_19:50, 1.5.9:  enhancements / fixes in shims listings
# 2009-01-16_19:52, 1.5.10
# 2009-01-16_20:09, 1.5.11: more bug fixes in shims listings
# 2009-01-16_20:11, 1.5.12
# 2009-01-17_23:53, 1.5.13
# 2009-01-18_18:15, 1.5.14: added history argument (internal/debugging only)
# 2009-01-18_18:27, 1.5.15: debugged
# 2009-01-23_15:42, 1.5.16: enhancements in printer reporting
# 2009-01-23_15:52, 1.5.17: fix for VnmrJ-only printer definitions
# 2009-01-26_18:47, 1.5.18: prepared for better RHEL version checking
# 2009-01-26_19:58, 1.5.19
# 2009-01-26_20:22, 1.5.20
# 2009-01-27_01:17, 1.6.0:  added "seqgen" test (sugg. D.Argyropoulos)
# 2009-01-27_01:19, 1.6.1:  bug fixes
# 2009-01-27_02:05, 1.6.2:  added checks for minimum OS levels
# 2009-01-27_02:49, 1.6.3:  report seqgen error files in local psglib
# 2009-01-27_02:59, 1.6.4:  bug fixes
# 2009-01-27_03:02, 1.6.5:  bug fix
# 2009-01-27_10:31, 1.6.6:  enhancements in "seqgen" testing segment
# 2009-01-27_10:33, 1.6.7:  bug fixes in "seqgen" section
# 2009-01-27_10:48, 1.6.8:  enhancements in "seqgen" testing segment
# 2009-01-27_12:30, 1.6.9:  coding enhancements
# 2009-01-27_14:36, 1.6.10: more output on DirectDrive / VnmrJ 2.2C / RHEL 5.1
# 2009-01-27_14:47, 1.6.11: minor amendments
# 2009-01-28_09:22, 1.6.12: fixed bug in placement of "Active version of VnmrJ"
# 2009-01-28_14:20, 1.6.13: enhancements in RAM size estimation
# 2009-01-28_14:40, 1.6.14: bug fixes in RAM calculation
# 2009-01-28_14:43, 1.6.15
# 2009-01-28_14:51, 1.6.16: minor amendments in output
# 2009-01-28_15:01, 1.6.17
# 2009-01-28_15:14, 1.6.18
# 2009-01-28_15:17, 1.6.19: finished memory status reporting fixes
# 2009-01-28_18:36, 1.7.0:  extract more BIOS information
# 2009-01-28_18:53, 1.7.1
# 2009-01-28_19:08, 1.7.2:  refinements in output of BIOS information
# 2009-01-28_19:17, 1.7.3:  corrections in BIOS output
# 2009-01-28_19:30, 1.7.4
# 2009-01-28_19:34, 1.7.5
# 2009-01-28_19:35, 1.7.6
# 2009-01-28_19:37, 1.7.7:  fix in BIOS data extraction
# 2009-01-28_19:39, 1.7.8
# 2009-01-28_20:10, 1.7.9:  output cosmetics
# 2009-01-28_20:24, 1.7.10: cope with missing MAC address
# 2009-01-28_20:38, 1.7.11
# 2009-01-28_20:56, 1.7.12
# 2009-01-29_21:23, 1.7.13: cosmetics / enhancements in output wording
# 2009-01-29_21:36, 1.7.14: amendments in BIOS information formatting
# 2009-01-29_21:51, 1.7.15: bug fixes
# 2009-01-30_17:18, 1.7.16: enhanced output in RHEL 5 driver section
# 2009-01-30_17:37, 1.7.17: more enhancements in RHEL 5 driver section
# 2009-01-30_19:14, 1.8.0:  fixes in VnmrJ packages / seqgen sections, clean-up
# 2009-01-30_19:34, 1.8.1:  minor addition in seqgen section
# 2009-02-01_19:10, 1.8.2:  minor clean-up
# 2009-02-01_22:48, 1.8.3:  minor bug fix
# 2009-02-03_14:23, 1.8.4:  minor output cosmetics
# 2009-02-04_20:07, 1.9.0:  added check for illegal VnmrJ printer/plotter names
# 2009-02-04_20:11, 1.9.1:  minor change in text output
# 2009-02-07_23:09, 1.9.2:  minor expansion in BIOS section
# 2009-02-11_12:25, 1.9.3:  report yum-updatesd run status (RHEL 5 only)
# 2009-02-11_13:34, 1.9.4:  correction in (printer) port status reporting
# 2009-02-11_13:37, 1.9.5
# 2009-02-12_23:35, 1.9.6:  minor output cosmetics
# 2009-02-23_15:22, 1.9.7
# 2009-02-24_15:17, 1.10.0: instructions on updating separately installed RPMs
# 2009-02-24_18:11, 1.10.1: enhancements in package update instructions
# 2009-03-02_15:15, 1.11.0: reports SSH version / activities
# 2009-03-02_19:04, 1.11.1: minor expansion in Tcl/Tk library compatibility
# 2009-03-03_12:28, 1.12.0: added Linux/RHEL kernel version "sanity check"
# 2009-03-03_12:32, 1.12.1
# 2009-03-03_12:58, 1.12.2
# 2009-03-03_15:48, 1.12.3: minor addition to kernel check
# 2009-03-03_15:52, 1.12.4
# 2009-03-04_00:01, 1.12.5: minor expansion in graphics section (in prep.)
# 2009-03-05_13:56, 1.12.6: reports Firefox version
# 2009-03-06_18:15, 1.13.0: extract information from "/etc/X11/xorg.conf"
# 2009-03-06_18:56, 1.13.1: graphics crossreference added to config summary
# 2009-03-09_22:36, 1.14.0: major expansions in RHEL 5 driver / lib checking
# 2009-03-09_22:44, 1.14.1: bug fix in graphics section
# 2009-03-10_01:22, 1.14.2: minor correction in output text
# 2009-03-11_08:31, 1.14.3: expanded package list for RHEL 5 checks
# 2009-03-11_08:50, 1.14.4: expanded wording in RHEL 5 driver section
# 2009-03-11_08:55, 1.14.5
# 2009-03-11_09:01, 1.14.6
# 2009-03-13_20:58, 1.14.7: expanded output for RHEL 5 "base+" installs
# 2009-03-13_21:03, 1.14.8
# 2009-03-19_11:55, 1.14.9: minor text changes, comment added
# 2009-03-19_20:07, 1.14.10:started extraction of VnmrJ user / operator info
# 2009-03-19_21:14, 1.14.11
# 2009-03-19_21:44, 1.14.12
# 2009-03-19_21:54, 1.14.13:started operator info output
# 2009-03-19_22:02, 1.14.14
# 2009-03-19_22:15, 1.14.15
# 2009-03-19_22:28, 1.15.0: shows VnmrJ user / operator information
# 2009-03-19_22:45, 1.15.1: minor correction
# 2009-03-19_22:48, 1.15.2
# 2009-03-19_22:54, 1.15.3
# 2009-03-20_09:48, 1.15.4: added VnmrJ operator password check
# 2009-03-20_15:58, 1.15.5: minor text addition in output
# 2009-03-22_18:58, 1.16.0: added checks on "/etc/hosts"
# 2009-03-22_19:09, 1.16.1: bug fix
# 2009-03-22_19:23, 1.16.2: more output from checking /etc/hosts
# 2009-03-22_20:32, 1.16.3: expanded information from /etc/hosts
# 2009-03-22_20:37, 1.16.4: minor addition to last update
# 2009-03-24_14:33, 2.0.0:  allow use prior to VnmrJ installation in Linux
# 2009-03-24_15:15, 2.0.1:  bug fix
# 2009-03-24_15:20, 2.0.2
# 2009-03-24_15:30, 2.0.3:  bug fix
# 2009-03-24_15:44, 2.0.4:  bug fix
# 2009-03-26_15:02, 2.1.0:  change for presence of 64-bit Tcl/Tk libraries ONLY
# 2009-03-27_00:13, 2.1.1:  correction in Tcl/Tk library instructions
# 2009-03-27_08:53, 2.2.0:  adjustments for the Dell Precision T3400
# 2009-03-27_23:39, 2.2.1:  additional package checks for RHEL 5.x added
# 2009-03-28_16:41, 2.3.0:  check for all components of "Development Tools"
# 2009-03-28_16:53, 2.3.1
# 2009-03-28_17:00, 2.3.2:  adjustment in package output formatting
# 2009-03-28_18:08, 2.3.3:  package check reorganized (RHEL 5)
# 2009-03-28_18:13, 2.3.4:  enhanced output formatting in RHEL 5 pkg check
# 2009-03-28_18:16, 2.3.5
# 2009-03-28_18:23, 2.3.6
# 2009-03-28_18:35, 2.3.7
# 2009-03-28_19:51, 2.3.8
# 2009-04-02_09:41, 2.4.0:  Dell Precision T3400, VnmrJ media automounting hint
# 2009-04-03_20:09, 2.4.1:  bug fixes
# 2009-04-03_20:42, 2.4.2
# 2009-04-03_22:18, 2.4.3
# 2009-04-06_10:39, 2.4.4:  amended comment on "gsl" / "gsl-devel" libraries
# 2009-04-06_10:50, 2.4.5:  minor correction in "gsl" package checks
# 2009-04-06_16:53, 2.5.0:  adjusted for current drivers/Adobe Reader (RHEL 5)
# 2009-04-06_17:19, 2.5.1
# 2009-04-06_17:28, 2.5.2
# 2009-04-06_21:24, 2.5.3:  fixed bug with package detection logic
# 2009-04-06_22:13, 2.5.4:  fixed more bugs with package detection logic
# 2009-04-06_22:17, 2.5.5
# 2009-04-06_22:24, 2.5.6:  minor addition in "acroread" segment
# 2009-04-15_21:42, 2.6.0:  added "sendmail" hint about relay host definition
# 2009-04-15_21:55, 2.6.1:  enhancement / correction in new "sendmail" section
# 2009-04-15_22:05, 2.6.2:  another, minor amendment
# 2009-04-19_18:53, 2.6.3:  expanded sendmail version reporting
# 2009-04-19_20:12, 2.6.4:  "sendmail" check split off into separate section
# 2009-04-19_20:14, 2.6.5
# 2009-04-19_21:14, 2.6.6:  text enhancement in recommendations header
# 2009-04-19_21:38, 2.7.0:  added SELinux status & configuration output
# 2009-04-19_22:10, 2.7.1:  enhancements to the above
# 2009-04-20_17:01, 2.7.2:  slightly relaxed swap requirements for large RAM
# 2009-04-21_00:24, 2.7.3:  cope with "cupsd" not running / "lpstat" failing
# 2009-04-21_00:44, 2.7.4
# 2009-04-21_00:48, 2.7.5
# 2009-04-24_00:19, 2.7.6:  avoid duplication in graphics modes output
# 2009-04-26_10:31, 2.7.7:  minor cosmetics in output from "/etc/hosts"
# 2009-04-27_19:03, 2.7.8:  suppressed errors from "ls" calls
# 2009-04-29_10:01, 2.7.9:  bug fixed, minor enhancement
# 2009-04-29_10:11, 2.7.10: minor enhancement in output
# 2009-04-30_19:37, 2.7.11: avoids unexpected manual output from "acroread"
# 2009-05-01_14:13, 2.7.12: avoid excessive line lengths in X.11 config output
# 2009-05-06_09:10, 2.7.13: tolerate swap space size rounding deviations
# 2009-05-06_09:14, 2.7.14: cosmetics in output wording
# 2009-05-06_15:08, 2.7.15: fixed 2 typos in output wording
# 2009-05-06_16:44, 2.8.0:  check for router / gateway / netmask mis-settings
# 2009-05-06_16:51, 2.8.1:  bug fixes
# 2009-05-11_18:44, 2.8.2:  sendmail config: added fixes, missing branches
# 2009-05-11_18:50, 2.8.3:  minor amendments
# 2009-05-13_22:15, 2.8.4:  internal rearrangements to help development
# 2009-05-27_01:27, 2.8.5:  enhancements in VnmrJ users listing
# 2009-05-27_01:32, 2.8.6
# 2009-05-27_07:48, 2.9.0:  added file ownership statistics for "/vnmr"
# 2009-05-27_08:09, 2.9.1
# 2009-05-27_08:17, 2.9.2
# 2009-05-27_08:22, 2.9.3:  output cosmetics
# 2009-05-27_08:31, 2.9.4
# 2009-05-27_08:49, 2.9.5
# 2009-05-27_10:03, 2.9.6:  list first files/dirs with bad ownership
# 2009-05-27_10:11, 2.9.7:  output enhancements
# 2009-05-27_10:37, 2.9.8:  expanded output for files with bad UID/GID
# 2009-05-27_10:43, 2.9.9
# 2009-05-27_10:46, 2.9.10
# 2009-05-27_10:49, 2.9.11: output enhancements
# 2009-05-27_12:05, 2.9.12: more output enhancements
# 2009-05-27_12:13, 2.9.13
# 2009-05-27_12:42, 2.9.14: output cosmetics
# 2009-05-27_16:11, 2.9.15
# 2009-05-27_21:50, 2.9.16: reminder on "Update Users" to make accounts usable
# 2009-05-27_21:58, 2.9.17
# 2009-05-28_09:26, 2.9.18: output text enhancements
# 2009-05-28_09:31, 2.9.19: count symlinks in "/vnmr"
# 2009-05-28_09:39, 2.9.20
# 2009-05-28_18:33, 2.10.0: report current user in output header
# 2009-05-28_19:00, 2.10.1: made file listings in ownership checks more robust
# 2009-05-28_19:09, 2.10.2
# 2009-05-28_19:17, 2.10.3: avoid potential "hanger" with "firefox" call
# 2009-05-29_00:19, 2.10.4: minor output header addition
# 2009-05-29_00:21, 2.10.5
# 2009-05-29_13:45, 2.10.6
# 2009-06-05_09:26, 2.10.7: corrections in printer reporting
# 2009-06-05_09:48, 2.10.8
# 2009-06-05_20:29, 2.10.9: added check for erroneous netmask
# 2009-06-05_21:13, 2.10.10
# 2009-06-08_21:58, 2.10.11:adaptations for RHEL 4.8
# 2009-06-16_09:11, 2.10.12:minor format/output corrections, acquisition setup
# 2009-06-16_11:58, 2.10.13:use numeric sorting for list from "/etc/hosts"
# 2009-06-17_07:11, 2.10.14:avoid line overflow in output header
# 2009-06-17_08:18, 2.10.15
# 2009-06-18_20:46, 2.10.16:added check for "sharutils" package under RHEL 5
# 2009-06-19_15:06, 2.11.0: expanded IPv6 configuration output
# 2009-06-19_15:15, 2.11.1
# 2009-06-20_12:26, 2.11.2: added check for potential IPv4/IPv6 config error
# 2009-06-23_13:13, 2.12.0: UNITY INOVA: check for bug "acquisition.j2206"
# 2009-06-23_13:35, 2.12.1
# 2009-06-24_10:41, 2.13.0: added check for erroneous hostname "wormhole"
# 2009-06-24_11:13, 2.13.1
# 2009-06-24_11:18, 2.13.2
# 2009-06-24_16:25, 2.13.3: expanded "bootptab" check for older VnmrJ releases
# 2009-06-25_11:07, 2.14.0: added output from "top" for better status info
# 2009-06-25_11:14, 2.14.1
# 2009-06-25_12:25, 2.14.2
# 2009-06-26_00:53, 2.14.3: avoid permission error messages with "find" calls
# 2009-06-26_15:35, 2.14.4: better output formatting in printer output
# 2009-06-26_15:55, 2.14.5
# 2009-06-26_15:59, 2.14.6
# 2009-06-29_15:08, 2.15.0: report mail forwarding for root
# 2009-06-29_15:12, 2.15.1
# 2009-06-29_15:28, 2.15.2: minor expansion on last addition
# 2009-07-01_19:48, 2.15.3: added indication for active address masquerading
# 2009-07-02_16:55, 2.15.4: updated driver version information
# 2009-07-02_17:31, 2.15.5
# 2009-07-09_21:09, 2.16.0: internal enhancements in disk size reporting
# 2009-07-09_22:05, 2.16.1
# 2009-07-09_22:07, 2.16.2
# 2009-07-09_22:14, 2.16.3: changed output to use binary units (MiB, GiB, etc.)
# 2009-07-09_22:35, 2.16.4
# 2009-07-10_00:44, 2.16.5: added note about binary vs. decimal units
# 2009-07-10_09:41, 2.17.0: better handling of missing "bitmaps" directory
# 2009-07-10_11:42, 2.18.0: more file system checks, part I
# 2009-07-10_11:46, 2.18.1
# 2009-07-10_11:51, 2.18.2
# 2009-07-10_14:54, 2.18.3: better disk / partition size reporting
# 2009-07-16_11:19, 2.18.4: adjusted for current version of Adobe Reader
# 2009-07-17_11:18, 2.18.5: corrections in Adobe Reader version extraction
# 2009-07-17_11:33, 2.18.6
# 2009-07-17_11:43, 2.18.7
# 2009-07-21_08:28, 2.19.0: expanded graphics driver diagnostics for RHEL 5
# 2009-07-21_09:21, 2.19.1
# 2009-07-26_09:30, 2.20.0: better info on graphics controller & settings
# 2009-07-26_09:36, 2.20.1
# 2009-07-26_09:38, 2.20.2
# 2009-07-26_18:36, 2.21.0: expanded hardware info from /etc/sysconfig/hwconf
# 2009-07-26_18:44, 2.21.1: minor enhancements in above change
# 2009-07-26_18:49, 2.21.2: (ditto)
# 2009-07-27_10:03, 2.21.3: (ditto)
# 2009-08-01_11:14, 2.22.0: expanded output on NSS configuration
# 2009-08-01_11:26, 2.22.1: minor amendments / changes to the above
# 2009-08-01_12:10, 2.22.2: added DHCP setup report (possibly fragmentary)
# 2009-08-03_19:11, 2.22.3: corrected column label in disk usage report
# 2009-08-17_20:19, 2.22.4: two minor amendments in output wording
# 2009-08-18_12:22, 2.22.5: typos, minor bug corrected
# 2009-08-24_19:41, 2.22.6: RHEL 5 driver version update
# 2009-08-27_10:26, 2.22.7: Adobe Reader version update
# 2009-09-04_09:51, 2.22.8: minor update for RHEL 5.4
# 2009-09-04_09:56, 2.22.9: more adjustments for RHEL 5.4
# 2009-09-04_21:52, 2.22.10:amendment in package checks for RHEL 5.3 & up
# 2009-09-11_10:44, 2.22.11:amendments for Adobe Reader updating in RHEL 5.x
# 2009-10-19_22:54, 2.23.0: adjustments for Dell Precision T3500 / VnmrJ 3.x
# 2009-10-20_08:43, 2.23.1: minor amendment, changed "RHEL 4.0u3" to "RHEL 4.3"
# 2009-10-25_17:57, 2.23.2: fixed bug with domain name printout in RHEL 4.x
# 2009-10-25_18:03, 2.23.3: suppress message from VnmrJ bug "automation.j2107"
# 2009-10-28_09:43, 2.23.4: corrected bug in disk size check for RHEL 5.x
# 2009-10-28_09:54, 2.23.5
# 2009-11-15_09:39, 2.23.6: minor update in swap space recommendation
# 2009-12-01_09:47, 2.23.7: driver updates; minor correction (CPU type/speed)
# 2009-12-01_10:54, 2.23.8
# 2009-12-01_21:26, 2.24.0: post-processing DirectDrive config, sugg.R.Machinek
# 2009-12-02_10:53, 2.24.1: RAM size warning made more verbose
# 2009-12-02_10:55, 2.24.2
# 2009-12-02_15:11, 2.24.3: added warning about bootptab mis-configuration
# 2009-12-02_15:13, 2.24.4
# 2009-12-02_18:12, 2.24.5: one more check on "bootptab" for UNITY INOVA
# 2009-12-02_23:13, 2.24.6: amendment in last output addition about bootptab
# 2009-12-15_10:41, 2.24.7: fixed config/rfwg issue for UNITY INOVA
# 2009-12-15_11:04, 2.24.8
# 2009-12-15_11:18, 2.24.9: fixed console type for workstation installs
# 2009-12-15_11:23, 2.24.10
# 2009-12-15_11:45, 2.24.11
# 2010-01-07_15:56, 2.25.0: expanded Firefox version check
# 2010-01-07_16:34, 2.25.1
# 2010-01-07_16:53, 2.25.2
# 2010-01-17_20:56, 2.26.0: amendments for auto-updating
# 2010-01-19_15:09, 2.26.1: avoid possible issue with RHEL 4 package reporting
# 2010-03-18_16:29, 2.26.2: fixes / enhancements in user information section
# 2010-03-18_22:08, 2.26.3: added missing PDF printer definition
# 2010-04-21_09:39, 2.26.4: first adjustments for RHEL 5.5
# 2010-05-19_18:08, 2.26.5: fixed minor issue with /vnmr/acq/bootptab / INOVA
# 2010-05-19_18:50, 2.26.6: minor correction in swap space size check
# 2010-06-17_11:27, 2.26.7: avoid error messages in acq. interface detection
# 2010-07-12_15:07, 2.27.0: now reports appdirs settings (VnmrJ 2.2C & up)
# 2010-07-12_17:09, 2.27.1: output wording adjustments for Agilent
# 2010-07-12_17:37, 2.27.2: improved header formatting for call as root
# 2010-07-12_17:40, 2.27.3
# 2010-07-12_17:50, 2.27.4
# 2010-07-12_19:27, 2.27.5: minor output enhancements (appdirs)
# 2010-07-12_19:42, 2.27.6
# 2010-07-12_20:13, 2.27.7
# 2010-07-12_20:18, 2.27.8
# 2010-07-12_20:24, 2.27.9
# 2010-07-12_20:40, 2.27.10
# 2010-07-12_21:05, 2.27.11
# 2010-07-13_09:34, 2.27.12:syntax error line 7368
# 2010-07-13_09:56, 2.27.13
# 2010-07-13_11:08, 2.27.14:adjustments for Firefox 3.6.x
# 2010-07-13_11:29, 2.27.15
# 2010-07-13_17:58, 2.28.0: enhanced network interface handling
# 2010-07-13_19:10, 2.28.1: fixed bug in network interface detection
# 2010-07-13_21:52, 2.28.2: fixed issue with long package names in RHEL 5
# 2010-07-13_21:56, 2.28.3
# 2010-07-14_09:41, 2.28.4: more enhancements in network interface reporting
# 2010-07-14_09:55, 2.28.5
# 2010-07-14_10:06, 2.28.6
# 2010-07-14_11:27, 2.29.0: E'net transmission stats, IPV6 address reported
# 2010-07-14_11:33, 2.29.1
# 2010-07-14_17:12, 2.30.0: report DHCP configuration
# 2010-07-14_17:40, 2.30.1
# 2010-07-15_09:25, 2.30.2: minor bug fix (graphics config)
# 2010-07-15_09:42, 2.30.3: output reformatting
# 2010-07-15_10:32, 2.30.4: output streamlining (Java)
# 2010-07-15_10:44, 2.30.5
# 2010-07-15_10:56, 2.30.6: output rephrasing (operator passwords)
# 2010-07-15_15:42, 2.30.7
# 2010-07-16_17:08, 3.0.0:  totally restructured, output reordered, new option
# 2010-07-16_17:45, 3.0.1:  several bug fixes
# 2010-07-16_20:08, 3.0.2:  minor amendments, bug fixes
# 2010-07-16_23:14, 3.0.3:  output cosmetics, minor amendments
# 2010-07-17_09:10, 3.0.4:  bugs fixed
# 2010-07-17_09:16, 3.0.5:  more bugs fixed
# 2010-07-17_10:46, 3.0.6
# 2010-07-17_10:54, 3.0.7:  minor amendments
# 2010-07-17_11:02, 3.0.8
# 2010-07-17_14:04, 3.0.9:  output modifications (minor)
# 2010-07-17_14:27, 3.0.10: more output adjustments (recommendations)
# 2010-07-17_16:07, 3.1.0:  reworked argument logic, info gathering feedback
# 2010-07-17_16:15, 3.1.1
# 2010-07-17_16:26, 3.1.2
# 2010-07-17_16:32, 3.1.3
# 2010-07-17_18:26, 3.1.4:  more enhancements in argument logic
# 2010-07-17_19:56, 3.2.0:  no arg = "--all", "-b"/"--basic" for basic output
# 2010-07-17_20:03, 3.2.1
# 2010-07-17_20:20, 3.2.2:  minor amendment
# 2010-07-18_00:52, 3.3.0:  enhanced check with "/etc/hosts"
# 2010-07-18_14:27, 3.4.0:  expanded / enhanced checks for DNS setup
# 2010-07-18_14:37, 3.4.1
# 2010-07-18_14:42, 3.4.2
# 2010-07-18_17:42, 3.4.3:  modifications / expansions in domain name check
# 2010-07-22_08:33, 3.5.0:  corrected Firefox version check, Thunderbird check
# 2010-07-22_08:38, 3.5.1
# 2010-07-22_08:40, 3.5.2
# 2010-07-22_08:42, 3.5.3
# 2010-07-22_09:01, 3.5.4:  corrected RHEL 5.x version warning
# 2010-07-22_09:35, 3.5.5:  enhanced check for Adobe Reader
# 2010-07-22_15:52, 3.5.6
# 2010-07-22_16:30, 3.5.7:  update in "gsl" and "gsl-devel" package check
# 2010-07-22_16:52, 3.5.8:  (more of the same)
# 2010-07-26_19:39, 3.5.9:  Firefox version number update
# 2010-07-27_14:04, 3.5.10: fixed to retain package log
# 2010-07-27_14:20, 3.5.11: minor output amendments
# 2010-07-27_21:19, 3.6.0:  enhanced check on "/etc/hosts"
# 2010-07-27_21:26, 3.6.1:  correction in the last addition
# 2010-07-27_21:28, 3.6.2
# 2010-07-27_21:34, 3.6.3
# 2010-07-27_21:38, 3.6.4
# 2010-07-27_21:48, 3.6.5:  more amendments to the check on "/etc/hosts"
# 2010-07-27_21:50, 3.6.6
# 2010-07-27_21:54, 3.6.7
# 2010-08-05_20:44, 3.6.8:  corrected logical error in "/etc/hosts" check
# 2010-08-05_21:02, 3.6.9
# 2010-08-05_21:20, 3.6.10
# 2010-08-06_00:43, 3.6.11: Mozilla Thunderbird version update
# 2010-08-11_22:05, 3.6.12: minor output format enhancements
# 2010-08-11_22:14, 3.6.13
# 2010-09-08_10:10, 3.6.14: Firefox / Thunderbird version updates
# 2010-09-08_10:21, 3.6.15
# 2010-09-13_09:25, 3.7.0:  avoid endless loops in reading configuration files
# 2010-09-13_09:55, 3.7.1:  fixed logical error in reading "xorg.conf"
# 2010-09-13_21:48, 3.8.0:  extract more RAM information from BIOS
# 2010-09-13_22:06, 3.8.1
# 2010-09-13_22:08, 3.8.2
# 2010-09-13_22:16, 3.8.3
# 2010-09-13_22:20, 3.8.4:  BIOS / RAM expansion ready
# 2010-09-16_11:21, 3.8.5:  corrected "awk" syntax errors
# 2010-09-17_12:05, 3.9.0:  protected against file names with spaces in "/vnmr"
# 2010-09-17_13:05, 3.9.1:  protected against failures in reading "resolv.conf"
# 2010-09-17_14:50, 3.10.0: handle permission issues in "/etc/sysconfig"
# 2010-09-17_21:01, 3.10.1: fixed initialization issue, added 1 recommendation
# 2010-09-17_21:20, 3.10.2: Dell & nVidia driver version updates
# 2010-09-17_21:39, 3.10.3: amendments in "gsl" driver version feedback
# 2010-09-23_17:42, 3.10.4: minor output adjustment, no functional change
# 2010-09-24_19:40, 3.10.5: minor updates, output reformatting
# 2010-09-24_20:31, 3.10.6
# 2010-10-07_11:07, 3.10.7: Adobe Reader & Thunderbird version updates
# 2010-10-21_11:49, 3.10.8: Thunderbird / Firefox version updates
# 2010-11-25_20:29, 3.10.9: Thunderbird version update
# 2010-11-29_22:09, 3.11.0: correction in network interface check
# 2010-11-30_16:15, 3.11.1: minor output layout enhancement
# 2010-12-11_13:48, 3.11.2: Adobe & Mozilla versions, "wormhole" check updated
# 2010-12-22_23:42, 3.11.3: corrected initialization issue with DHCP read-out
# 2010-12-22_23:46, 3.11.4: Varian MR News -> Agilent MR News
# 2010-12-23_00:04, 3.11.5: "Varian / Agilent" -> "Agilent"
# 2010-12-23_01:58, 3.11.6: corrected Web addresses / URLs
# 2011-01-14_01:20, 3.11.7: adjustments for RHEL 5.6 and 6.0
# 2011-03-06_20:01, 3.11.8: Firefox & Thunderbird version info updates
# 2011-03-09_16:34, 3.11.9: amendment for RHEL 4.9
# 2011-03-10_10:23, 3.11.10:minor output text adjustments (RHEL 4.9)
# 2011-03-18_09:28, 3.11.11:Updated Firefox version to 3.6.15
# 2011-04-07_15:41, 3.11.12:suppress blank lines in BIOS information output
# 2011-04-08_00:54, 3.11.13:dittp, improved
# 2011-04-08_13:57, 3.11.14:expansion in version comparison function
# 2011-04-08_14:24, 3.11.15:enhancement to the previous functional addition
# 2011-04-14_15:46, 3.11.16:check for add'l. packages for Adobe Reader / DOSY
# 2011-04-14_16:09, 3.11.17
# 2011-04-14_16:39, 3.11.18
# 2011-04-30_09:24, 3.11.19:Firefox & Thunderbird version updates
# 2011-07-22_23:58, 3.11.20:adjustments for RHEL 5.7
# 2011-08-24_14:52, 3.11.21:typo corrected in output
# 2011-08-25_09:02, 3.11.22:adjusted for case of /home not separate partition
# 2011-09-08_21:41, 3.12.0: improved report on Adobe Reader
# 2011-09-08_21:46, 3.12.1
# 2011-09-08_22:21, 3.13.0: change in graphics driver check
# 2011-09-08_22:44, 3.13.1
# 2011-09-08_22:58, 3.13.2: nVidia graphics driver version update
# 2011-09-11_20:07, 3.13.3: preparations for RHEL 6.1 support
#===============================================================================
# END OF SCRIPT
#===============================================================================
